{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id_to_burn",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "MintAchievement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_new_address",
          "type": "address"
        }
      ],
      "name": "SetAchevementsContractAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id_to_update",
          "type": "uint256"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "github_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "email_address_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SBT.PersonalDataHashed",
          "name": "_soulData",
          "type": "tuple"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "getSoul",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "soul_id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "github_hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "email_address_hash",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct SBT.PersonalDataHashed",
              "name": "hashedData",
              "type": "tuple"
            }
          ],
          "internalType": "struct SBT.Soul",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "hasSoul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kAchevementsContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "achievement_id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "achievement_type",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "can_owner_be_changed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "verifier",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "is_verified",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "data_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SBT_achievement_interface.Achievement",
          "name": "_achievementData",
          "type": "tuple"
        }
      ],
      "name": "mint_achievement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new_address",
          "type": "address"
        }
      ],
      "name": "setAchevementsContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyDataCorrectness",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "github_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "email_address_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SBT.PersonalDataHashed",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/sbt.sol"
  },
  "ast": {
    "absolutePath": "contracts/sbt.sol",
    "exportedSymbols": {
      "SBT": [
        477
      ],
      "SBT_achievement_interface": [
        44
      ]
    },
    "id": 478,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SBT_achievement_interface",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 44,
        "linearizedBaseContracts": [
          44
        ],
        "name": "SBT_achievement_interface",
        "nameLocation": "68:25:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SBT_achievement_interface.Achievement",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "achievement_id",
                "nameLocation": "134:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "129:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "129:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "achievement_type",
                "nameLocation": "163:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "158:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "158:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "issuer",
                "nameLocation": "197:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "189:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "189:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "can_owner_be_changed",
                "nameLocation": "218:20:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "213:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "213:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "256:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "248:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "248:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "verifier",
                "nameLocation": "279:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "271:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "is_verified",
                "nameLocation": "302:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "297:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 14,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "297:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "data_hash",
                "nameLocation": "331:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "323:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 16,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "323:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Achievement",
            "nameLocation": "107:11:0",
            "nodeType": "StructDefinition",
            "scope": 44,
            "src": "100:247:0",
            "visibility": "public"
          },
          {
            "functionSelector": "f3913577",
            "id": 24,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "362:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_achievementData",
                  "nameLocation": "386:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "367:35:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Achievement_$18_memory_ptr",
                    "typeString": "struct SBT_achievement_interface.Achievement"
                  },
                  "typeName": {
                    "id": 20,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19,
                      "name": "Achievement",
                      "nameLocations": [
                        "367:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18,
                      "src": "367:11:0"
                    },
                    "referencedDeclaration": 18,
                    "src": "367:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Achievement_$18_storage_ptr",
                      "typeString": "struct SBT_achievement_interface.Achievement"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "366:37:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:0"
            },
            "scope": 44,
            "src": "353:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "42966c68",
            "id": 29,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "428:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_achievementId",
                  "nameLocation": "438:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "433:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:21:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:0"
            },
            "scope": 44,
            "src": "419:44:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "7192711f",
            "id": 36,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwner",
            "nameLocation": "478:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_achievementId",
                  "nameLocation": "495:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "490:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "519:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "511:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:40:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:0"
            },
            "scope": 44,
            "src": "469:70:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "fb17cac9",
            "id": 43,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "changeAchievementVerification",
            "nameLocation": "554:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_achievementId",
                  "nameLocation": "589:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "584:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_newStatus",
                  "nameLocation": "610:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "605:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:38:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "638:0:0"
            },
            "scope": 44,
            "src": "545:94:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 478,
        "src": "58:583:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SBT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 477,
        "linearizedBaseContracts": [
          477
        ],
        "name": "SBT",
        "nameLocation": "652:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "697:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 49,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "715:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 51,
                          "indexExpression": {
                            "id": 50,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "729:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "715:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "750:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "742:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 52,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "742:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "742:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "715:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20646f65736e2774206578697374",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "754:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        },
                        "value": "Soul doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "707:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "707:68:0"
                },
                {
                  "id": 60,
                  "nodeType": "PlaceholderStatement",
                  "src": "785:1:0"
                }
              ]
            },
            "id": 62,
            "name": "soulExists",
            "nameLocation": "671:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "687:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "682:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:15:0"
            },
            "src": "662:131:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "848:199:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 67,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "879:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 69,
                          "indexExpression": {
                            "id": 68,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "893:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "879:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "914:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "906:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 70,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "906:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "906:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "879:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20697320616c726561647920636c61696d6564",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "930:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d39c9e6cb452b6bbdf84404464d4ec4366033e704f753c984cc7a9fee4e24c9",
                          "typeString": "literal_string \"Soul is already claimed\""
                        },
                        "value": "Soul is already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d39c9e6cb452b6bbdf84404464d4ec4366033e704f753c984cc7a9fee4e24c9",
                          "typeString": "literal_string \"Soul is already claimed\""
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "858:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "858:107:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 79,
                          "name": "mintedNotClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "983:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 81,
                        "indexExpression": {
                          "id": 80,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1000:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "983:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e206d696e74656420736f756c",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1011:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65c2c533625d1749fb6bbe85fb96e791d2703d53c2542b484e969e587ca0b05b",
                          "typeString": "literal_string \"Non minted soul\""
                        },
                        "value": "Non minted soul"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65c2c533625d1749fb6bbe85fb96e791d2703d53c2542b484e969e587ca0b05b",
                          "typeString": "literal_string \"Non minted soul\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "975:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "975:54:0"
                },
                {
                  "id": 85,
                  "nodeType": "PlaceholderStatement",
                  "src": "1039:1:0"
                }
              ]
            },
            "id": 87,
            "name": "mintedNotClaimedModifier",
            "nameLocation": "808:24:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "838:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "833:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "832:15:0"
            },
            "src": "799:248:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1087:170:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 92,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "1105:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 94,
                          "indexExpression": {
                            "id": 93,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "1119:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1105:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1140:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1132:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 95,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1132:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1132:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1105:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20657869737473",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1144:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5712a0b6990d8393f8bdfbec613fb6b339845140e0b59a8a22fe68d059fef309",
                          "typeString": "literal_string \"Soul exists\""
                        },
                        "value": "Soul exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5712a0b6990d8393f8bdfbec613fb6b339845140e0b59a8a22fe68d059fef309",
                          "typeString": "literal_string \"Soul exists\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1097:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1176:27:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 104,
                            "name": "mintedNotClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "1177:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 106,
                          "indexExpression": {
                            "id": 105,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "1194:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1177:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1205:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48abde2d233cd5cc62bc8080455522b9ff216703e948a24d5acfb7583dcef108",
                          "typeString": "literal_string \"Soul is minted, but not claimed\""
                        },
                        "value": "Soul is minted, but not claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48abde2d233cd5cc62bc8080455522b9ff216703e948a24d5acfb7583dcef108",
                          "typeString": "literal_string \"Soul is minted, but not claimed\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1168:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1168:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:71:0"
                },
                {
                  "id": 111,
                  "nodeType": "PlaceholderStatement",
                  "src": "1249:1:0"
                }
              ]
            },
            "id": 113,
            "name": "notMinted",
            "nameLocation": "1062:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1077:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1072:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1071:15:0"
            },
            "src": "1053:204:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "SBT.PersonalDataHashed",
            "id": 118,
            "members": [
              {
                "constant": false,
                "id": 115,
                "mutability": "mutable",
                "name": "github_hash",
                "nameLocation": "1307:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "1299:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 114,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1299:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 117,
                "mutability": "mutable",
                "name": "email_address_hash",
                "nameLocation": "1336:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "1328:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 116,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1328:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PersonalDataHashed",
            "nameLocation": "1270:18:0",
            "nodeType": "StructDefinition",
            "scope": 477,
            "src": "1263:98:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SBT.PersonalData",
            "id": 123,
            "members": [
              {
                "constant": false,
                "id": 120,
                "mutability": "mutable",
                "name": "github_url",
                "nameLocation": "1404:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1397:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 119,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1397:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 122,
                "mutability": "mutable",
                "name": "email_address",
                "nameLocation": "1431:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1424:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 121,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1424:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PersonalData",
            "nameLocation": "1374:12:0",
            "nodeType": "StructDefinition",
            "scope": 477,
            "src": "1367:84:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SBT.Soul",
            "id": 129,
            "members": [
              {
                "constant": false,
                "id": 125,
                "mutability": "mutable",
                "name": "soul_id",
                "nameLocation": "1484:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 129,
                "src": "1479:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1479:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 128,
                "mutability": "mutable",
                "name": "hashedData",
                "nameLocation": "1520:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 129,
                "src": "1501:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                  "typeString": "struct SBT.PersonalDataHashed"
                },
                "typeName": {
                  "id": 127,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 126,
                    "name": "PersonalDataHashed",
                    "nameLocations": [
                      "1501:18:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 118,
                    "src": "1501:18:0"
                  },
                  "referencedDeclaration": 118,
                  "src": "1501:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Soul",
            "nameLocation": "1464:4:0",
            "nodeType": "StructDefinition",
            "scope": 477,
            "src": "1457:80:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "570ca735",
            "id": 131,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1558:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "1543:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 130,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1543:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "df8d8159",
            "id": 134,
            "mutability": "mutable",
            "name": "kAchevementsContract",
            "nameLocation": "1587:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "1572:88:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 132,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1572:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838303136363139323831463838386430313163383464324532613533343864393431376337373542",
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1618:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x8016619281F888d011c84d2E2a5348d9417c775B"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 137,
            "mutability": "mutable",
            "name": "SBT_achievement",
            "nameLocation": "1693:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "1667:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
              "typeString": "contract SBT_achievement_interface"
            },
            "typeName": {
              "id": 136,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 135,
                "name": "SBT_achievement_interface",
                "nameLocations": [
                  "1667:25:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44,
                "src": "1667:25:0"
              },
              "referencedDeclaration": 44,
              "src": "1667:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                "typeString": "contract SBT_achievement_interface"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a84665",
            "id": 141,
            "name": "Mint",
            "nameLocation": "1720:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1730:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1725:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:15:0"
            },
            "src": "1714:26:0"
          },
          {
            "anonymous": false,
            "eventSelector": "7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f7",
            "id": 145,
            "name": "Claim",
            "nameLocation": "1751:5:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1762:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1757:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:15:0"
            },
            "src": "1745:27:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d49a4559bddcf9b3f02926936008febf67b424d2f0e30b5cbb9d954b8d7a68fb",
            "id": 149,
            "name": "MintAchievement",
            "nameLocation": "1783:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1804:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1799:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1798:15:0"
            },
            "src": "1777:37:0"
          },
          {
            "anonymous": false,
            "eventSelector": "b90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb",
            "id": 153,
            "name": "Burn",
            "nameLocation": "1825:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id_to_burn",
                  "nameLocation": "1835:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1830:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:23:0"
            },
            "src": "1819:34:0"
          },
          {
            "anonymous": false,
            "eventSelector": "164f7b2ab803097dab5e39f06d2e4f3c3ddc5d4171abbdcc3e76443b8359c7f5",
            "id": 157,
            "name": "Update",
            "nameLocation": "1864:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id_to_update",
                  "nameLocation": "1876:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1871:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1870:25:0"
            },
            "src": "1858:38:0"
          },
          {
            "anonymous": false,
            "eventSelector": "0763c88eaa6a598acce6051f1d0326944c2b7166cc9512b51414a5aadab51a9c",
            "id": 161,
            "name": "SetAchevementsContractAddress",
            "nameLocation": "1907:29:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_new_address",
                  "nameLocation": "1945:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1937:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1936:22:0"
            },
            "src": "1901:58:0"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "1979:113:0",
              "statements": [
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "SBT_achievement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1989:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                        "typeString": "contract SBT_achievement_interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 166,
                          "name": "kAchevementsContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "2033:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 165,
                        "name": "SBT_achievement_interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2007:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SBT_achievement_interface_$44_$",
                          "typeString": "type(contract SBT_achievement_interface)"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2007:47:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                        "typeString": "contract SBT_achievement_interface"
                      }
                    },
                    "src": "1989:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                      "typeString": "contract SBT_achievement_interface"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:65:0"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "2064:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 171,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2075:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2079:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2075:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2064:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:21:0"
                }
              ]
            },
            "id": 176,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1976:2:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:0:0"
            },
            "scope": 477,
            "src": "1965:127:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 180,
            "mutability": "mutable",
            "name": "addressOfSoul",
            "nameLocation": "2131:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "2098:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 179,
              "keyType": {
                "id": 177,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2106:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2098:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 178,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2114:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 184,
            "mutability": "mutable",
            "name": "soulIdOfAddress",
            "nameLocation": "2205:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "2180:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 183,
              "keyType": {
                "id": 181,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2188:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2180:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 182,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2199:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 189,
            "mutability": "mutable",
            "name": "souls",
            "nameLocation": "2277:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "2247:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
              "typeString": "mapping(uint256 => struct SBT.Soul)"
            },
            "typeName": {
              "id": 188,
              "keyType": {
                "id": 185,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2255:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2247:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                "typeString": "mapping(uint256 => struct SBT.Soul)"
              },
              "valueType": {
                "id": 187,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 186,
                  "name": "Soul",
                  "nameLocations": [
                    "2263:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "2263:4:0"
                },
                "referencedDeclaration": 129,
                "src": "2263:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Soul_$129_storage_ptr",
                  "typeString": "struct SBT.Soul"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 193,
            "mutability": "mutable",
            "name": "mintedNotClaimed",
            "nameLocation": "2318:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 477,
            "src": "2288:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 192,
              "keyType": {
                "id": 190,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2296:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2288:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 191,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2304:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "2579:272:0",
              "statements": [
                {
                  "assignments": [
                    204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "hashedData",
                      "nameLocation": "2615:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "2589:36:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 203,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 202,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "2589:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 118,
                          "src": "2589:18:0"
                        },
                        "referencedDeclaration": 118,
                        "src": "2589:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 205,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2589:36:0"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 206,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "2635:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2646:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117,
                      "src": "2635:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 212,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "2707:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2713:13:0",
                              "memberName": "email_address",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 122,
                              "src": "2707:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 210,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2690:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2694:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2690:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2690:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 209,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2667:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2667:70:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2635:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:102:0"
                },
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 218,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "2747:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2758:11:0",
                      "memberName": "github_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "2747:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 224,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "2799:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2805:10:0",
                              "memberName": "github_url",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 120,
                              "src": "2799:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 222,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2782:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2786:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2782:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2782:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 221,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2772:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2772:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2747:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:70:0"
                },
                {
                  "expression": {
                    "id": 230,
                    "name": "hashedData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 204,
                    "src": "2834:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                      "typeString": "struct SBT.PersonalDataHashed memory"
                    }
                  },
                  "functionReturnParameters": 201,
                  "id": 231,
                  "nodeType": "Return",
                  "src": "2827:17:0"
                }
              ]
            },
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashPersonalData",
            "nameLocation": "2457:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2494:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2474:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                    "typeString": "struct SBT.PersonalData"
                  },
                  "typeName": {
                    "id": 195,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 194,
                      "name": "PersonalData",
                      "nameLocations": [
                        "2474:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "2474:12:0"
                    },
                    "referencedDeclaration": 123,
                    "src": "2474:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalData_$123_storage_ptr",
                      "typeString": "struct SBT.PersonalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2473:27:0"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2548:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 199,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 198,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "2548:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 118,
                      "src": "2548:18:0"
                    },
                    "referencedDeclaration": 118,
                    "src": "2548:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:27:0"
            },
            "scope": 477,
            "src": "2448:403:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "2927:228:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 239,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2958:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2962:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2958:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 241,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "2972:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2958:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468697320636f6e74726163742063616e2073657420746869732061646472657373",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2994:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e226851fdfdcc57de5d73b9939f78f7b382abe858dc46b5ff524bd7f72d1419",
                          "typeString": "literal_string \"Only this contract can set this address\""
                        },
                        "value": "Only this contract can set this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e226851fdfdcc57de5d73b9939f78f7b382abe858dc46b5ff524bd7f72d1419",
                          "typeString": "literal_string \"Only this contract can set this address\""
                        }
                      ],
                      "id": 238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2937:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2937:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2937:108:0"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 246,
                      "name": "kAchevementsContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3055:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 247,
                      "name": "_new_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "3078:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3055:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "_new_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3135:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 250,
                      "name": "SetAchevementsContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "3105:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "EmitStatement",
                  "src": "3100:48:0"
                }
              ]
            },
            "functionSelector": "f72aabf3",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAchevementsContractAddress",
            "nameLocation": "2866:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_new_address",
                  "nameLocation": "2904:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2896:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2896:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2895:22:0"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2927:0:0"
            },
            "scope": 477,
            "src": "2857:298:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "3362:207:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 266,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3380:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3384:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3380:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 268,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "3394:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3380:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c73",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3404:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be1622ce1e42e9a17530ea674400f0d6d3e7ed52ff5b74a970e36309147e85d9",
                          "typeString": "literal_string \"Only operator can mint new souls\""
                        },
                        "value": "Only operator can mint new souls"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be1622ce1e42e9a17530ea674400f0d6d3e7ed52ff5b74a970e36309147e85d9",
                          "typeString": "literal_string \"Only operator can mint new souls\""
                        }
                      ],
                      "id": 265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3372:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3372:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3372:67:0"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 273,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "3449:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 275,
                      "indexExpression": {
                        "id": 274,
                        "name": "_soul_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3465:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3449:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 276,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "3482:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3449:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:41:0"
                },
                {
                  "expression": {
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 279,
                        "name": "mintedNotClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3500:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 281,
                      "indexExpression": {
                        "id": 280,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3517:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3500:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3529:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3500:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:33:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3553:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "3548:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "EmitStatement",
                  "src": "3543:19:0"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 262,
                    "name": "_soul_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 259,
                    "src": "3348:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 261,
                  "name": "notMinted",
                  "nameLocations": [
                    "3338:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "3338:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3338:19:0"
              }
            ],
            "name": "mint",
            "nameLocation": "3270:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_soul_address",
                  "nameLocation": "3283:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "3275:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "3303:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "3298:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3298:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3274:38:0"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3362:0:0"
            },
            "scope": 477,
            "src": "3261:308:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "3776:271:0",
              "statements": [
                {
                  "assignments": [
                    303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "_soul_id",
                      "nameLocation": "3791:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "3786:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3786:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 308,
                  "initialValue": {
                    "baseExpression": {
                      "id": 304,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "3802:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 307,
                    "indexExpression": {
                      "expression": {
                        "id": 305,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3818:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3822:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3818:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3802:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3786:43:0"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3839:33:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 309,
                        "name": "mintedNotClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3846:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 311,
                      "indexExpression": {
                        "id": 310,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3863:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3846:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3839:33:0"
                },
                {
                  "expression": {
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 314,
                        "name": "addressOfSoul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "3882:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 316,
                      "indexExpression": {
                        "id": 315,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3896:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3882:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3908:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3912:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3908:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3882:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "3882:36:0"
                },
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 321,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "3928:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 323,
                        "indexExpression": {
                          "id": 322,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "3934:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3928:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$129_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3944:7:0",
                      "memberName": "soul_id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 125,
                      "src": "3928:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 325,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "3954:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3928:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3928:34:0"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 328,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "3972:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "id": 329,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "3978:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3972:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$129_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3988:10:0",
                      "memberName": "hashedData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 128,
                      "src": "3972:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage",
                        "typeString": "struct SBT.PersonalDataHashed storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 332,
                      "name": "_soulData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "4001:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed memory"
                      }
                    },
                    "src": "3972:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "3972:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 336,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "4031:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 335,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4025:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4025:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "4020:20:0"
                }
              ]
            },
            "functionSelector": "886fc93f",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 296,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "3743:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 299,
                    "indexExpression": {
                      "expression": {
                        "id": 297,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3759:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3763:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3759:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3743:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 300,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 295,
                  "name": "mintedNotClaimedModifier",
                  "nameLocations": [
                    "3718:24:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "3718:24:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3718:53:0"
              }
            ],
            "name": "claim",
            "nameLocation": "3650:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "_soulData",
                  "nameLocation": "3682:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "3656:35:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 292,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 291,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "3656:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 118,
                      "src": "3656:18:0"
                    },
                    "referencedDeclaration": 118,
                    "src": "3656:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3655:37:0"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3776:0:0"
            },
            "scope": 477,
            "src": "3641:406:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "4271:114:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 355,
                        "name": "_achievementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "4302:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Achievement_$18_memory_ptr",
                          "typeString": "struct SBT_achievement_interface.Achievement memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Achievement_$18_memory_ptr",
                          "typeString": "struct SBT_achievement_interface.Achievement memory"
                        }
                      ],
                      "expression": {
                        "id": 352,
                        "name": "SBT_achievement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4281:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                          "typeString": "contract SBT_achievement_interface"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4297:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "4281:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Achievement_$18_memory_ptr_$returns$__$",
                        "typeString": "function (struct SBT_achievement_interface.Achievement memory) external"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4281:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "4281:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 359,
                          "name": "soulIdOfAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "4350:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 362,
                        "indexExpression": {
                          "expression": {
                            "id": 360,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4366:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4370:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4366:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4350:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 358,
                      "name": "MintAchievement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "4334:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4334:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "EmitStatement",
                  "src": "4329:49:0"
                }
              ]
            },
            "functionSelector": "07a7d436",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 346,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "4242:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 349,
                    "indexExpression": {
                      "expression": {
                        "id": 347,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4258:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4262:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4258:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4242:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 345,
                  "name": "soulExists",
                  "nameLocations": [
                    "4231:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62,
                  "src": "4231:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4231:39:0"
              }
            ],
            "name": "mint_achievement",
            "nameLocation": "4128:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_achievementData",
                  "nameLocation": "4199:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "4154:61:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Achievement_$18_memory_ptr",
                    "typeString": "struct SBT_achievement_interface.Achievement"
                  },
                  "typeName": {
                    "id": 342,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 341,
                      "name": "SBT_achievement_interface.Achievement",
                      "nameLocations": [
                        "4154:25:0",
                        "4180:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18,
                      "src": "4154:37:0"
                    },
                    "referencedDeclaration": 18,
                    "src": "4154:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Achievement_$18_storage_ptr",
                      "typeString": "struct SBT_achievement_interface.Achievement"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4144:77:0"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4271:0:0"
            },
            "scope": 477,
            "src": "4119:266:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "4503:237:0",
              "statements": [
                {
                  "assignments": [
                    376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 376,
                      "mutability": "mutable",
                      "name": "_soul_id_to_burn",
                      "nameLocation": "4518:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 402,
                      "src": "4513:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 375,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4513:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 381,
                  "initialValue": {
                    "baseExpression": {
                      "id": 377,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "4537:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 380,
                    "indexExpression": {
                      "expression": {
                        "id": 378,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4553:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4557:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4553:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4537:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4513:51:0"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4574:30:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 382,
                        "name": "souls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "4581:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                          "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                        }
                      },
                      "id": 384,
                      "indexExpression": {
                        "id": 383,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "4587:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4581:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Soul_$129_storage",
                        "typeString": "struct SBT.Soul storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "4574:30:0"
                },
                {
                  "expression": {
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4614:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 387,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "4621:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 390,
                      "indexExpression": {
                        "expression": {
                          "id": 388,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4637:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4641:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4637:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4621:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "4614:34:0"
                },
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4658:38:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 393,
                        "name": "addressOfSoul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "4665:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 395,
                      "indexExpression": {
                        "id": 394,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "4679:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4665:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "4658:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 399,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "4716:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 398,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "4711:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4711:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "EmitStatement",
                  "src": "4706:27:0"
                }
              ]
            },
            "functionSelector": "44df8e70",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 369,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "4474:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 372,
                    "indexExpression": {
                      "expression": {
                        "id": 370,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4490:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4494:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4490:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4474:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 368,
                  "name": "soulExists",
                  "nameLocations": [
                    "4463:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62,
                  "src": "4463:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4463:39:0"
              }
            ],
            "name": "burn",
            "nameLocation": "4447:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4451:2:0"
            },
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4503:0:0"
            },
            "scope": 477,
            "src": "4438:302:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "4866:51:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 410,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "4883:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 412,
                      "indexExpression": {
                        "id": 411,
                        "name": "_soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "4899:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4883:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4909:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4883:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 409,
                  "id": 415,
                  "nodeType": "Return",
                  "src": "4876:34:0"
                }
              ]
            },
            "functionSelector": "bdd75202",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasSoul",
            "nameLocation": "4814:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "4830:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "4822:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4822:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4821:15:0"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "4860:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4859:6:0"
            },
            "scope": 477,
            "src": "4805:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "5072:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 426,
                            "name": "soulIdOfAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "5090:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 428,
                          "indexExpression": {
                            "id": 427,
                            "name": "_soul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "5106:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5090:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5116:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5090:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20646f65736e2774206578697374",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5119:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        },
                        "value": "Soul doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5082:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5082:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "5082:58:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 434,
                      "name": "souls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "5157:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                        "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                      }
                    },
                    "id": 438,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 435,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "5163:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 437,
                      "indexExpression": {
                        "id": 436,
                        "name": "_soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "5179:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5163:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5157:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Soul_$129_storage",
                      "typeString": "struct SBT.Soul storage ref"
                    }
                  },
                  "functionReturnParameters": 424,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "5150:36:0"
                }
              ]
            },
            "functionSelector": "66cfe97f",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSoul",
            "nameLocation": "5013:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "5029:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "5021:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5021:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5020:15:0"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "5059:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Soul_$129_memory_ptr",
                    "typeString": "struct SBT.Soul"
                  },
                  "typeName": {
                    "id": 422,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 421,
                      "name": "Soul",
                      "nameLocations": [
                        "5059:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 129,
                      "src": "5059:4:0"
                    },
                    "referencedDeclaration": 129,
                    "src": "5059:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Soul_$129_storage_ptr",
                      "typeString": "struct SBT.Soul"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5058:13:0"
            },
            "scope": 477,
            "src": "5004:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 460,
              "nodeType": "Block",
              "src": "5355:170:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 449,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5386:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5390:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5386:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 451,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "5400:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5386:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468697320636f6e74726163742063616e20766965772074686973206861736865642064617461",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5422:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27b7e863d546f07584cece8c5abbb10f897c1d51b8b6e9abb975f221a2867c6e",
                          "typeString": "literal_string \"Only this contract can view this hashed data\""
                        },
                        "value": "Only this contract can view this hashed data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27b7e863d546f07584cece8c5abbb10f897c1d51b8b6e9abb975f221a2867c6e",
                          "typeString": "literal_string \"Only this contract can view this hashed data\""
                        }
                      ],
                      "id": 448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5365:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5365:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:113:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 456,
                      "name": "addressOfSoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "5495:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 458,
                    "indexExpression": {
                      "id": 457,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "5509:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5495:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 447,
                  "id": 459,
                  "nodeType": "Return",
                  "src": "5488:30:0"
                }
              ]
            },
            "functionSelector": "c41a360a",
            "id": 461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nameLocation": "5299:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "5313:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 461,
                  "src": "5308:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5308:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5307:15:0"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 461,
                  "src": "5346:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5346:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5345:9:0"
            },
            "scope": 477,
            "src": "5290:235:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 475,
              "nodeType": "Block",
              "src": "5738:69:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 467,
                        "name": "souls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "5755:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                          "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                        }
                      },
                      "id": 472,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 468,
                          "name": "soulIdOfAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "5761:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 471,
                        "indexExpression": {
                          "expression": {
                            "id": 469,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5777:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5781:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5777:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5761:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5755:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Soul_$129_storage",
                        "typeString": "struct SBT.Soul storage ref"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5790:10:0",
                    "memberName": "hashedData",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 128,
                    "src": "5755:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "functionReturnParameters": 466,
                  "id": 474,
                  "nodeType": "Return",
                  "src": "5748:52:0"
                }
              ]
            },
            "functionSelector": "28f36fe7",
            "id": 476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyDataCorrectness",
            "nameLocation": "5636:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5657:2:0"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 476,
                  "src": "5707:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 464,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 463,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "5707:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 118,
                      "src": "5707:18:0"
                    },
                    "referencedDeclaration": 118,
                    "src": "5707:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5706:27:0"
            },
            "scope": 477,
            "src": "5627:180:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 478,
        "src": "643:5166:0",
        "usedErrors": []
      }
    ],
    "src": "32:5778:0"
  },
  "bytecode": "6080604052600180546001600160a01b031916738016619281f888d011c84d2e2a5348d9417c775b17905534801561003657600080fd5b50600154600280546001600160a01b03199081166001600160a01b039093169290921790556000805490911633179055610b14806100756000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806366cfe97f1161007157806366cfe97f14610166578063886fc93f1461019d578063bdd75202146101b0578063c41a360a146101eb578063df8d8159146101fe578063f72aabf31461021157600080fd5b806307a7d436146100ae57806328f36fe7146100c357806340c10f191461012057806344df8e7014610133578063570ca7351461013b575b600080fd5b6100c16100bc36600461092f565b610224565b005b60408051808201825260008082526020918201819052338152600482528281205481526005825282902082518084018452600182015480825260029092015490830190815283519182525191810191909152015b60405180910390f35b6100c161012e3660046109f0565b610370565b6100c16104e8565b60005461014e906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b610179610174366004610a1a565b6105a0565b60408051825181526020928301518051848301529092015190820152606001610117565b6100c16101ab366004610a3c565b610633565b6101db6101be366004610a1a565b6001600160a01b0316600090815260046020526040902054151590565b6040519015158152602001610117565b61014e6101f9366004610a99565b61077f565b60015461014e906001600160a01b031681565b6100c161021f366004610a1a565b61080b565b336000908152600460209081526040808320548084526003909252909120546001600160a01b03166102715760405162461bcd60e51b815260040161026890610ab2565b60405180910390fd5b6002546040805163f391357760e01b81528451600482015260208501516024820152908401516001600160a01b03908116604483015260608501511515606483015260808501518116608483015260a0850151811660a483015260c0850151151560c483015260e085015160e48301529091169063f39135779061010401600060405180830381600087803b15801561030957600080fd5b505af115801561031d573d6000803e3d6000fd5b505033600090815260046020526040908190205490517fd49a4559bddcf9b3f02926936008febf67b424d2f0e30b5cbb9d954b8d7a68fb9350610364925090815260200190565b60405180910390a15050565b60008181526003602052604090205481906001600160a01b0316156103c55760405162461bcd60e51b815260206004820152600b60248201526a536f756c2065786973747360a81b6044820152606401610268565b60008181526006602052604090205460ff16156104245760405162461bcd60e51b815260206004820152601f60248201527f536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564006044820152606401610268565b6000546001600160a01b0316331461047e5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c736044820152606401610268565b6001600160a01b03831660009081526004602090815260408083208590558483526006825291829020805460ff1916600117905590518381527f07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a8466591015b60405180910390a1505050565b336000908152600460209081526040808320548084526003909252909120546001600160a01b031661052c5760405162461bcd60e51b815260040161026890610ab2565b3360009081526004602090815260408083208054808552600584528285208581556001810186905560020185905590849055600383529281902080546001600160a01b0319169055518281527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb9101610364565b6105a86108c9565b6001600160a01b03821660009081526004602052604081205490036105df5760405162461bcd60e51b815260040161026890610ab2565b506001600160a01b0316600090815260046020908152604080832054835260058252918290208251808401845281548152835180850190945260018201548452600290910154838301529081019190915290565b336000908152600460209081526040808320548084526003909252909120546001600160a01b0316156106a85760405162461bcd60e51b815260206004820152601760248201527f536f756c20697320616c726561647920636c61696d65640000000000000000006044820152606401610268565b60008181526006602052604090205460ff166106f85760405162461bcd60e51b815260206004820152600f60248201526e139bdb881b5a5b9d1959081cdbdd5b608a1b6044820152606401610268565b3360008181526004602090815260408083205480845260068352818420805460ff191690556003835281842080546001600160a01b0319169095179094556005825291829020838155855160018201558582015160029091015590518281527f7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f791016104db565b600080546001600160a01b031633146107ef5760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468697320636f6e74726163742063616e2076696577207468697360448201526b20686173686564206461746160a01b6064820152608401610268565b506000908152600360205260409020546001600160a01b031690565b6000546001600160a01b031633146108755760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79207468697320636f6e74726163742063616e207365742074686973206044820152666164647265737360c81b6064820152608401610268565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f0763c88eaa6a598acce6051f1d0326944c2b7166cc9512b51414a5aadab51a9c9060200160405180910390a150565b6040518060400160405280600081526020016108fe604051806040016040528060008019168152602001600080191681525090565b905290565b80356001600160a01b038116811461091a57600080fd5b919050565b8035801515811461091a57600080fd5b600061010080838503121561094357600080fd5b6040519081019067ffffffffffffffff8211818310171561097457634e487b7160e01b600052604160045260246000fd5b81604052833581526020840135602082015261099260408501610903565b60408201526109a36060850161091f565b60608201526109b460808501610903565b60808201526109c560a08501610903565b60a08201526109d660c0850161091f565b60c082015260e084013560e0820152809250505092915050565b60008060408385031215610a0357600080fd5b610a0c83610903565b946020939093013593505050565b600060208284031215610a2c57600080fd5b610a3582610903565b9392505050565b600060408284031215610a4e57600080fd5b6040516040810181811067ffffffffffffffff82111715610a7f57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600060208284031215610aab57600080fd5b5035919050565b60208082526012908201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b60408201526060019056fea2646970667358221220f13390c335651c8b194e903b5ac94bb04a55d5dcaa8833e5afc3bcb388b2116764736f6c63430008110033",
  "bytecodeSha1": "c99319daf560f49cae691919cf58e7a2808240b8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "SBT",
  "coverageMap": {
    "branches": {
      "0": {
        "SBT.claim": {
          "26": [
            983,
            1009,
            true
          ]
        },
        "SBT.getOwner": {
          "27": [
            5386,
            5408,
            true
          ]
        },
        "SBT.getSoul": {
          "25": [
            5090,
            5117,
            true
          ]
        },
        "SBT.mint": {
          "24": [
            3380,
            3402,
            true
          ]
        },
        "SBT.setAchevementsContractAddress": {
          "28": [
            2958,
            2980,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SBT.burn": {
          "8": [
            4574,
            4604
          ],
          "9": [
            4614,
            4648
          ],
          "10": [
            4658,
            4696
          ],
          "11": [
            4706,
            4733
          ]
        },
        "SBT.claim": {
          "14": [
            3839,
            3872
          ],
          "15": [
            3882,
            3918
          ],
          "16": [
            3928,
            3962
          ],
          "17": [
            3972,
            4010
          ],
          "18": [
            4020,
            4040
          ]
        },
        "SBT.getOwner": {
          "19": [
            5365,
            5478
          ],
          "20": [
            5488,
            5518
          ]
        },
        "SBT.getSoul": {
          "12": [
            5082,
            5140
          ],
          "13": [
            5150,
            5186
          ]
        },
        "SBT.hasSoul": {
          "1": [
            4876,
            4910
          ]
        },
        "SBT.mint": {
          "4": [
            3372,
            3439
          ],
          "5": [
            3449,
            3490
          ],
          "6": [
            3500,
            3533
          ],
          "7": [
            3543,
            3562
          ]
        },
        "SBT.mint_achievement": {
          "2": [
            4281,
            4319
          ],
          "3": [
            4329,
            4378
          ]
        },
        "SBT.setAchevementsContractAddress": {
          "21": [
            2937,
            3045
          ],
          "22": [
            3055,
            3090
          ],
          "23": [
            3100,
            3148
          ]
        },
        "SBT.verifyDataCorrectness": {
          "0": [
            5748,
            5800
          ]
        }
      }
    }
  },
  "dependencies": [
    "SBT_achievement_interface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806366cfe97f1161007157806366cfe97f14610166578063886fc93f1461019d578063bdd75202146101b0578063c41a360a146101eb578063df8d8159146101fe578063f72aabf31461021157600080fd5b806307a7d436146100ae57806328f36fe7146100c357806340c10f191461012057806344df8e7014610133578063570ca7351461013b575b600080fd5b6100c16100bc36600461092f565b610224565b005b60408051808201825260008082526020918201819052338152600482528281205481526005825282902082518084018452600182015480825260029092015490830190815283519182525191810191909152015b60405180910390f35b6100c161012e3660046109f0565b610370565b6100c16104e8565b60005461014e906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b610179610174366004610a1a565b6105a0565b60408051825181526020928301518051848301529092015190820152606001610117565b6100c16101ab366004610a3c565b610633565b6101db6101be366004610a1a565b6001600160a01b0316600090815260046020526040902054151590565b6040519015158152602001610117565b61014e6101f9366004610a99565b61077f565b60015461014e906001600160a01b031681565b6100c161021f366004610a1a565b61080b565b336000908152600460209081526040808320548084526003909252909120546001600160a01b03166102715760405162461bcd60e51b815260040161026890610ab2565b60405180910390fd5b6002546040805163f391357760e01b81528451600482015260208501516024820152908401516001600160a01b03908116604483015260608501511515606483015260808501518116608483015260a0850151811660a483015260c0850151151560c483015260e085015160e48301529091169063f39135779061010401600060405180830381600087803b15801561030957600080fd5b505af115801561031d573d6000803e3d6000fd5b505033600090815260046020526040908190205490517fd49a4559bddcf9b3f02926936008febf67b424d2f0e30b5cbb9d954b8d7a68fb9350610364925090815260200190565b60405180910390a15050565b60008181526003602052604090205481906001600160a01b0316156103c55760405162461bcd60e51b815260206004820152600b60248201526a536f756c2065786973747360a81b6044820152606401610268565b60008181526006602052604090205460ff16156104245760405162461bcd60e51b815260206004820152601f60248201527f536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564006044820152606401610268565b6000546001600160a01b0316331461047e5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c736044820152606401610268565b6001600160a01b03831660009081526004602090815260408083208590558483526006825291829020805460ff1916600117905590518381527f07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a8466591015b60405180910390a1505050565b336000908152600460209081526040808320548084526003909252909120546001600160a01b031661052c5760405162461bcd60e51b815260040161026890610ab2565b3360009081526004602090815260408083208054808552600584528285208581556001810186905560020185905590849055600383529281902080546001600160a01b0319169055518281527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb9101610364565b6105a86108c9565b6001600160a01b03821660009081526004602052604081205490036105df5760405162461bcd60e51b815260040161026890610ab2565b506001600160a01b0316600090815260046020908152604080832054835260058252918290208251808401845281548152835180850190945260018201548452600290910154838301529081019190915290565b336000908152600460209081526040808320548084526003909252909120546001600160a01b0316156106a85760405162461bcd60e51b815260206004820152601760248201527f536f756c20697320616c726561647920636c61696d65640000000000000000006044820152606401610268565b60008181526006602052604090205460ff166106f85760405162461bcd60e51b815260206004820152600f60248201526e139bdb881b5a5b9d1959081cdbdd5b608a1b6044820152606401610268565b3360008181526004602090815260408083205480845260068352818420805460ff191690556003835281842080546001600160a01b0319169095179094556005825291829020838155855160018201558582015160029091015590518281527f7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f791016104db565b600080546001600160a01b031633146107ef5760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468697320636f6e74726163742063616e2076696577207468697360448201526b20686173686564206461746160a01b6064820152608401610268565b506000908152600360205260409020546001600160a01b031690565b6000546001600160a01b031633146108755760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79207468697320636f6e74726163742063616e207365742074686973206044820152666164647265737360c81b6064820152608401610268565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f0763c88eaa6a598acce6051f1d0326944c2b7166cc9512b51414a5aadab51a9c9060200160405180910390a150565b6040518060400160405280600081526020016108fe604051806040016040528060008019168152602001600080191681525090565b905290565b80356001600160a01b038116811461091a57600080fd5b919050565b8035801515811461091a57600080fd5b600061010080838503121561094357600080fd5b6040519081019067ffffffffffffffff8211818310171561097457634e487b7160e01b600052604160045260246000fd5b81604052833581526020840135602082015261099260408501610903565b60408201526109a36060850161091f565b60608201526109b460808501610903565b60808201526109c560a08501610903565b60a08201526109d660c0850161091f565b60c082015260e084013560e0820152809250505092915050565b60008060408385031215610a0357600080fd5b610a0c83610903565b946020939093013593505050565b600060208284031215610a2c57600080fd5b610a3582610903565b9392505050565b600060408284031215610a4e57600080fd5b6040516040810181811067ffffffffffffffff82111715610a7f57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600060208284031215610aab57600080fd5b5035919050565b60208082526012908201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b60408201526060019056fea2646970667358221220f13390c335651c8b194e903b5ac94bb04a55d5dcaa8833e5afc3bcb388b2116764736f6c63430008110033",
  "deployedSourceMap": "643:5166:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4119:266;;;;;;:::i;:::-;;:::i;:::-;;5627:180;-1:-1:-1;;;;;;;;;;;;;;;;;;;5777:10:0;5761:27;;:15;:27;;;;;;5755:34;;:5;:34;;;;;5748:52;;;;;;;5755:45;;;5748:52;;;;;;;;;;;;;;;5627:180;;1487:25:1;;;1544:23;1528:14;;;1521:47;;;;1768:18;5627:180:0;;;;;;;;3261:308;;;;;;:::i;:::-;;:::i;4438:302::-;;;:::i;1543:23::-;;;;;-1:-1:-1;;;;;1543:23:0;;;;;;-1:-1:-1;;;;;2284:32:1;;;2266:51;;2254:2;2239:18;1543:23:0;2120:203:1;5004:189:0;;;;;;:::i;:::-;;:::i;:::-;;;;2725:13:1;;2707:32;;2786:4;2774:17;;;2768:24;1499:12;;2852:20;;;1487:25;1550:16;;;1544:23;1528:14;;;1521:47;2695:2;2680:18;5004:189:0;2519:360:1;3641:406:0;;;;;;:::i;:::-;;:::i;4805:112::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4883:22:0;4860:4;4883:22;;;:15;:22;;;;;;:27;;;4805:112;;;;3665:14:1;;3658:22;3640:41;;3628:2;3613:18;4805:112:0;3500:187:1;5290:235:0;;;;;;:::i;:::-;;:::i;1572:88::-;;;;;-1:-1:-1;;;;;1572:88:0;;;2857:298;;;;;;:::i;:::-;;:::i;4119:266::-;4258:10;4242:27;;;;:15;:27;;;;;;;;;715:23;;;:13;:23;;;;;;;-1:-1:-1;;;;;715:23:0;707:68;;;;-1:-1:-1;;;707:68:0;;;;;;;:::i;:::-;;;;;;;;;4281:15:::1;::::0;:38:::1;::::0;;-1:-1:-1;;;4281:38:0;;4443:13:1;;4281:38:0::1;::::0;::::1;4425:32:1::0;4513:4;4501:17;;4495:24;4473:20;;;4466:54;4555:17;;;4549:24;-1:-1:-1;;;;;4649:21:1;;;4627:20;;;4620:51;4741:4;4729:17;;4723:24;4716:32;4709:40;4687:20;;;4680:70;4810:4;4798:17;;4792:24;4788:33;;4766:20;;;4759:63;4600:3;4870:17;;4864:24;4860:33;;4838:20;;;4831:63;4964:4;4952:17;;4946:24;4939:32;4932:40;4910:20;;;4903:70;5029:4;5017:17;;5011:24;4989:20;;;4982:54;4281:15:0;;::::1;::::0;:20:::1;::::0;4397:19:1;;4281:38:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4366:10:0::1;4350:27;::::0;;;:15:::1;:27;::::0;;;;;;;4334:44;;::::1;::::0;-1:-1:-1;4334:44:0::1;::::0;-1:-1:-1;5193:25:1;;;5181:2;5166:18;;5047:177;4334:44:0::1;;;;;;;;4119:266:::0;;:::o;3261:308::-;1140:1;1105:23;;;:13;:23;;;;;;3348:8;;-1:-1:-1;;;;;1105:23:0;:37;1097:61;;;;-1:-1:-1;;;1097:61:0;;5431:2:1;1097:61:0;;;5413:21:1;5470:2;5450:18;;;5443:30;-1:-1:-1;;;5489:18:1;;;5482:41;5540:18;;1097:61:0;5229:335:1;1097:61:0;1177:26;;;;:16;:26;;;;;;;;1176:27;1168:71;;;;-1:-1:-1;;;1168:71:0;;5771:2:1;1168:71:0;;;5753:21:1;5810:2;5790:18;;;5783:30;5849:33;5829:18;;;5822:61;5900:18;;1168:71:0;5569:355:1;1168:71:0;3394:8:::1;::::0;-1:-1:-1;;;;;3394:8:0::1;3380:10;:22;3372:67;;;::::0;-1:-1:-1;;;3372:67:0;;6131:2:1;3372:67:0::1;::::0;::::1;6113:21:1::0;;;6150:18;;;6143:30;6209:34;6189:18;;;6182:62;6261:18;;3372:67:0::1;5929:356:1::0;3372:67:0::1;-1:-1:-1::0;;;;;3449:30:0;::::1;;::::0;;;:15:::1;:30;::::0;;;;;;;:41;;;3500:26;;;:16:::1;:26:::0;;;;;;:33;;-1:-1:-1;;3500:33:0::1;3529:4;3500:33;::::0;;3548:14;;5193:25:1;;;3548:14:0::1;::::0;5166:18:1;3548:14:0::1;;;;;;;;3261:308:::0;;;:::o;4438:302::-;4490:10;4474:27;;;;:15;:27;;;;;;;;;715:23;;;:13;:23;;;;;;;-1:-1:-1;;;;;715:23:0;707:68;;;;-1:-1:-1;;;707:68:0;;;;;;;:::i;:::-;4553:10:::1;4513:21;4537:27:::0;;;:15:::1;:27;::::0;;;;;;;;;4581:23;;;:5:::1;:23:::0;;;;;4574:30;;;::::1;::::0;::::1;::::0;;;;;;;;4614:34;;;;4665:13:::1;:31:::0;;;;;;4658:38;;-1:-1:-1;;;;;;4658:38:0::1;::::0;;4711:22;5193:25:1;;;4711:22:0::1;::::0;5166:18:1;4711:22:0::1;5047:177:1::0;5004:189:0;5059:11;;:::i;:::-;-1:-1:-1;;;;;5090:22:0;;;;;;:15;:22;;;;;;:27;;5082:58;;;;-1:-1:-1;;;5082:58:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5163:22:0;5157:29;5163:22;;;:15;:22;;;;;;;;;5157:29;;:5;:29;;;;;;5150:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5004:189::o;3641:406::-;3759:10;3743:27;;;;:15;:27;;;;;;;;;879:23;;;:13;:23;;;;;;;-1:-1:-1;;;;;879:23:0;:37;858:107;;;;-1:-1:-1;;;858:107:0;;6492:2:1;858:107:0;;;6474:21:1;6531:2;6511:18;;;6504:30;6570:25;6550:18;;;6543:53;6613:18;;858:107:0;6290:347:1;858:107:0;983:26;;;;:16;:26;;;;;;;;975:54;;;;-1:-1:-1;;;975:54:0;;6844:2:1;975:54:0;;;6826:21:1;6883:2;6863:18;;;6856:30;-1:-1:-1;;;6902:18:1;;;6895:45;6957:18;;975:54:0;6642:339:1;975:54:0;3818:10:::1;3786:13;3802:27:::0;;;:15:::1;:27;::::0;;;;;;;;3846:26;;;:16:::1;:26:::0;;;;;3839:33;;-1:-1:-1;;3839:33:0::1;::::0;;3882:13:::1;:23:::0;;;;;:36;;-1:-1:-1;;;;;;3882:36:0::1;::::0;;::::1;::::0;;;3928:5:::1;:15:::0;;;;;;:34;;;3972:38;;-1:-1:-1;3972:26:0;::::1;:38:::0;;;::::1;::::0;;;;;;4025:15;;5193:25:1;;;4025:15:0::1;::::0;5166:18:1;4025:15:0::1;5047:177:1::0;5290:235:0;5346:7;5400:8;;-1:-1:-1;;;;;5400:8:0;5386:10;:22;5365:113;;;;-1:-1:-1;;;5365:113:0;;7188:2:1;5365:113:0;;;7170:21:1;7227:2;7207:18;;;7200:30;7266:34;7246:18;;;7239:62;-1:-1:-1;;;7317:18:1;;;7310:42;7369:19;;5365:113:0;6986:408:1;5365:113:0;-1:-1:-1;5495:23:0;;;;:13;:23;;;;;;-1:-1:-1;;;;;5495:23:0;;5290:235::o;2857:298::-;2972:8;;-1:-1:-1;;;;;2972:8:0;2958:10;:22;2937:108;;;;-1:-1:-1;;;2937:108:0;;7601:2:1;2937:108:0;;;7583:21:1;7640:2;7620:18;;;7613:30;7679:34;7659:18;;;7652:62;-1:-1:-1;;;7730:18:1;;;7723:37;7777:19;;2937:108:0;7399:403:1;2937:108:0;3055:20;:35;;-1:-1:-1;;;;;;3055:35:0;-1:-1:-1;;;;;3055:35:0;;;;;;;;3105:43;;2266:51:1;;;3105:43:0;;2254:2:1;2239:18;3105:43:0;;;;;;;2857:298;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:160::-;257:20;;313:13;;306:21;296:32;;286:60;;342:1;339;332:12;357:1053;443:6;474:3;518:2;506:9;497:7;493:23;489:32;486:52;;;534:1;531;524:12;486:52;567:2;561:9;597:15;;;;642:18;627:34;;663:22;;;624:62;621:185;;;728:10;723:3;719:20;716:1;709:31;763:4;760:1;753:15;791:4;788:1;781:15;621:185;826:10;822:2;815:22;874:9;861:23;853:6;846:39;946:2;935:9;931:18;918:32;913:2;905:6;901:15;894:57;984:38;1018:2;1007:9;1003:18;984:38;:::i;:::-;979:2;971:6;967:15;960:63;1056:35;1087:2;1076:9;1072:18;1056:35;:::i;:::-;1051:2;1043:6;1039:15;1032:60;1126:39;1160:3;1149:9;1145:19;1126:39;:::i;:::-;1120:3;1112:6;1108:16;1101:65;1200:39;1234:3;1223:9;1219:19;1200:39;:::i;:::-;1194:3;1186:6;1182:16;1175:65;1274:36;1305:3;1294:9;1290:19;1274:36;:::i;:::-;1268:3;1260:6;1256:16;1249:62;1373:3;1362:9;1358:19;1345:33;1339:3;1331:6;1327:16;1320:59;1398:6;1388:16;;;;357:1053;;;;:::o;1861:254::-;1929:6;1937;1990:2;1978:9;1969:7;1965:23;1961:32;1958:52;;;2006:1;2003;1996:12;1958:52;2029:29;2048:9;2029:29;:::i;:::-;2019:39;2105:2;2090:18;;;;2077:32;;-1:-1:-1;;;1861:254:1:o;2328:186::-;2387:6;2440:2;2428:9;2419:7;2415:23;2411:32;2408:52;;;2456:1;2453;2446:12;2408:52;2479:29;2498:9;2479:29;:::i;:::-;2469:39;2328:186;-1:-1:-1;;;2328:186:1:o;2884:611::-;2978:6;3031:2;3019:9;3010:7;3006:23;3002:32;2999:52;;;3047:1;3044;3037:12;2999:52;3080:2;3074:9;3122:2;3114:6;3110:15;3191:6;3179:10;3176:22;3155:18;3143:10;3140:34;3137:62;3134:185;;;3241:10;3236:3;3232:20;3229:1;3222:31;3276:4;3273:1;3266:15;3304:4;3301:1;3294:15;3134:185;3335:2;3328:22;3374:23;;3359:39;;3459:2;3444:18;;;3431:32;3414:15;;;3407:57;;;;-1:-1:-1;3366:6:1;2884:611;-1:-1:-1;2884:611:1:o;3692:180::-;3751:6;3804:2;3792:9;3783:7;3779:23;3775:32;3772:52;;;3820:1;3817;3810:12;3772:52;-1:-1:-1;3843:23:1;;3692:180;-1:-1:-1;3692:180:1:o;3877:342::-;4079:2;4061:21;;;4118:2;4098:18;;;4091:30;-1:-1:-1;;;4152:2:1;4137:18;;4130:48;4210:2;4195:18;;3877:342::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    643,
    5809
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66CFE97F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x66CFE97F EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x886FC93F EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xBDD75202 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xC41A360A EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xDF8D8159 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xF72AABF3 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7A7D436 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x28F36FE7 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE CALLER DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE DUP3 DUP2 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x14E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD DUP1 MLOAD DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x117 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH2 0x1DB PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF3913577 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 MLOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD DUP2 AND PUSH1 0xA4 DUP4 ADD MSTORE PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0xC4 DUP4 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0xE4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF3913577 SWAP1 PUSH2 0x104 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0xD49A4559BDDCF9B3F02926936008FEBF67B424D2F0E30B5CBB9D954B8D7A68FB SWAP4 POP PUSH2 0x364 SWAP3 POP SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x536F756C20657869737473 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C206973206D696E7465642C20627574206E6F7420636C61696D656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F70657261746F722063616E206D696E74206E657720736F756C73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0x7883703ED0E86588A40D76551C92F8A4B329E3BF19765E0E6749473C1A84665 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP6 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 ADD DUP6 SWAP1 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x3 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 DUP2 MSTORE PUSH32 0xB90306AD06B2A6FF86DDC9327DB583062895EF6540E62DC50ADD009DB5B356EB SWAP2 ADD PUSH2 0x364 JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0xAB2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 DUP4 ADD MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C20697320616C726561647920636C61696D6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDB881B5A5B9D1959081CDBDD5B PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x268 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 DUP2 SSTORE DUP6 MLOAD PUSH1 0x1 DUP3 ADD SSTORE DUP6 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0x7BB2B3C10797BACCB6F8C4791F1EDD6CA2F0D028EE0EDA64B01A9A57E3A653F7 SWAP2 ADD PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468697320636F6E74726163742063616E20766965772074686973 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x206861736865642064617461 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468697320636F6E74726163742063616E20736574207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x763C88EAA6A598ACCE6051F1D0326944C2B7166CC9512B51414A5AADAB51A9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8FE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x974 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x992 PUSH1 0x40 DUP6 ADD PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x9A3 PUSH1 0x60 DUP6 ADD PUSH2 0x91F JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x9B4 PUSH1 0x80 DUP6 ADD PUSH2 0x903 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x9C5 PUSH1 0xA0 DUP6 ADD PUSH2 0x903 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x9D6 PUSH1 0xC0 DUP6 ADD PUSH2 0x91F JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0C DUP4 PUSH2 0x903 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA35 DUP3 PUSH2 0x903 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x14DBDD5B08191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL CALLER SWAP1 0xC3 CALLDATALOAD PUSH6 0x1C8B194E903B GAS 0xC9 0x4B 0xB0 0x4A SSTORE 0xD5 0xDC 0xAA DUP9 CALLER 0xE5 0xAF 0xC3 0xBC 0xB3 DUP9 0xB2 GT PUSH8 0x64736F6C63430008 GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        643,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66CFE97F"
    },
    "38": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66CFE97F"
    },
    "49": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "53": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x886FC93F"
    },
    "60": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "64": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDD75202"
    },
    "71": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0"
    },
    "75": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC41A360A"
    },
    "82": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB"
    },
    "86": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDF8D8159"
    },
    "93": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FE"
    },
    "97": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF72AABF3"
    },
    "104": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "108": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7A7D436"
    },
    "120": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x28F36FE7"
    },
    "131": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x40C10F19"
    },
    "142": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "146": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x44DF8E70"
    },
    "153": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133"
    },
    "157": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x570CA735"
    },
    "164": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "168": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        643,
        5809
      ],
      "op": "REVERT",
      "path": "0"
    },
    "174": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "178": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC"
    },
    "181": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "182": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "184": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "187": {
      "fn": "SBT.mint_achievement",
      "jump": "i",
      "offset": [
        4119,
        4385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "188": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "189": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224"
    },
    "192": {
      "fn": "SBT.mint_achievement",
      "jump": "i",
      "offset": [
        4119,
        4385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "STOP",
      "path": "0"
    },
    "195": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "198": {
      "op": "DUP1"
    },
    "199": {
      "op": "MLOAD"
    },
    "200": {
      "op": "DUP1"
    },
    "201": {
      "op": "DUP3"
    },
    "202": {
      "op": "ADD"
    },
    "203": {
      "op": "DUP3"
    },
    "204": {
      "op": "MSTORE"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "207": {
      "op": "DUP1"
    },
    "208": {
      "op": "DUP3"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "SWAP2"
    },
    "213": {
      "op": "DUP3"
    },
    "214": {
      "op": "ADD"
    },
    "215": {
      "op": "DUP2"
    },
    "216": {
      "op": "SWAP1"
    },
    "217": {
      "op": "MSTORE"
    },
    "218": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5777,
        5787
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "219": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "220": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5788
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "221": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "223": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5788
      ],
      "op": "DUP3",
      "path": "0"
    },
    "224": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5788
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "225": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5788
      ],
      "op": "DUP3",
      "path": "0"
    },
    "226": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "227": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5788
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "228": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5761,
        5788
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "229": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5789
      ],
      "op": "DUP2",
      "path": "0"
    },
    "230": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5789
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "231": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "233": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5789
      ],
      "op": "DUP3",
      "path": "0"
    },
    "234": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5789
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "235": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5789
      ],
      "op": "DUP3",
      "path": "0"
    },
    "236": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "237": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5789
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "238": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "239": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "240": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "DUP5",
      "path": "0"
    },
    "242": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "ADD",
      "path": "0"
    },
    "243": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "DUP5",
      "path": "0"
    },
    "244": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "245": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "247": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "248": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5755,
        5800
      ],
      "op": "ADD",
      "path": "0"
    },
    "249": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "250": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "251": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "252": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "253": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "255": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "256": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "257": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "ADD",
      "path": "0"
    },
    "258": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "259": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "260": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "DUP4",
      "path": "0"
    },
    "261": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "ADD",
      "path": "0"
    },
    "262": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "263": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "264": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5748,
        5800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "265": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "266": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "267": {
      "op": "SWAP2"
    },
    "268": {
      "op": "DUP3"
    },
    "269": {
      "op": "MSTORE"
    },
    "270": {
      "op": "MLOAD"
    },
    "271": {
      "op": "SWAP2"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "ADD"
    },
    "274": {
      "op": "SWAP2"
    },
    "275": {
      "op": "SWAP1"
    },
    "276": {
      "op": "SWAP2"
    },
    "277": {
      "op": "MSTORE"
    },
    "278": {
      "op": "ADD"
    },
    "279": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "282": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "283": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "DUP1",
      "path": "0"
    },
    "284": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "285": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "SUB",
      "path": "0"
    },
    "286": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "287": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5627,
        5807
      ],
      "op": "RETURN",
      "path": "0"
    },
    "288": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "292": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "295": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "296": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "298": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F0"
    },
    "301": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        3261,
        3569
      ],
      "op": "JUMP",
      "path": "0"
    },
    "302": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "303": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x370"
    },
    "306": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        3261,
        3569
      ],
      "op": "JUMP",
      "path": "0"
    },
    "307": {
      "fn": "SBT.burn",
      "offset": [
        4438,
        4740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "fn": "SBT.burn",
      "offset": [
        4438,
        4740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "311": {
      "fn": "SBT.burn",
      "offset": [
        4438,
        4740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E8"
    },
    "314": {
      "fn": "SBT.burn",
      "jump": "i",
      "offset": [
        4438,
        4740
      ],
      "op": "JUMP",
      "path": "0"
    },
    "315": {
      "offset": [
        1543,
        1566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "318": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "319": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E"
    },
    "322": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "offset": [
        1543,
        1566
      ],
      "op": "AND",
      "path": "0"
    },
    "332": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "DUP2",
      "path": "0"
    },
    "333": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "JUMP",
      "path": "0"
    },
    "334": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "335": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "337": {
      "fn": "SBT.burn",
      "offset": [
        1543,
        1566
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "344": {
      "op": "SHL"
    },
    "345": {
      "op": "SUB"
    },
    "346": {
      "op": "SWAP1"
    },
    "347": {
      "op": "SWAP2"
    },
    "348": {
      "op": "AND"
    },
    "349": {
      "op": "DUP2"
    },
    "350": {
      "op": "MSTORE"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "offset": [
        1543,
        1566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "357": {
      "op": "JUMP"
    },
    "358": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x179"
    },
    "362": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "365": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "366": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "368": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1A"
    },
    "371": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        5004,
        5193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "372": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "373": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A0"
    },
    "376": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        5004,
        5193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "377": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "378": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "380": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "381": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "382": {
      "op": "DUP3"
    },
    "383": {
      "op": "MLOAD"
    },
    "384": {
      "op": "DUP2"
    },
    "385": {
      "op": "MSTORE"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "388": {
      "op": "SWAP3"
    },
    "389": {
      "op": "DUP4"
    },
    "390": {
      "op": "ADD"
    },
    "391": {
      "op": "MLOAD"
    },
    "392": {
      "op": "DUP1"
    },
    "393": {
      "op": "MLOAD"
    },
    "394": {
      "op": "DUP5"
    },
    "395": {
      "op": "DUP4"
    },
    "396": {
      "op": "ADD"
    },
    "397": {
      "op": "MSTORE"
    },
    "398": {
      "op": "SWAP1"
    },
    "399": {
      "op": "SWAP3"
    },
    "400": {
      "op": "ADD"
    },
    "401": {
      "op": "MLOAD"
    },
    "402": {
      "op": "SWAP1"
    },
    "403": {
      "op": "DUP3"
    },
    "404": {
      "op": "ADD"
    },
    "405": {
      "op": "MSTORE"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "408": {
      "op": "ADD"
    },
    "409": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "412": {
      "op": "JUMP"
    },
    "413": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "417": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB"
    },
    "420": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "421": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "423": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3C"
    },
    "426": {
      "fn": "SBT.claim",
      "jump": "i",
      "offset": [
        3641,
        4047
      ],
      "op": "JUMP",
      "path": "0"
    },
    "427": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "428": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x633"
    },
    "431": {
      "fn": "SBT.claim",
      "jump": "i",
      "offset": [
        3641,
        4047
      ],
      "op": "JUMP",
      "path": "0"
    },
    "432": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "433": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DB"
    },
    "436": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "439": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "440": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "442": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1A"
    },
    "445": {
      "fn": "SBT.hasSoul",
      "jump": "i",
      "offset": [
        4805,
        4917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "446": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "453": {
      "op": "SHL"
    },
    "454": {
      "op": "SUB"
    },
    "455": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "AND",
      "path": "0",
      "statement": 1
    },
    "456": {
      "fn": "SBT.hasSoul",
      "offset": [
        4860,
        4864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "458": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "460": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "461": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4898
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "463": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "465": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "466": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "468": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "469": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "470": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4905
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "471": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "472": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4910
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "473": {
      "fn": "SBT.hasSoul",
      "offset": [
        4883,
        4910
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "474": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "475": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "478": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "479": {
      "op": "SWAP1"
    },
    "480": {
      "op": "ISZERO"
    },
    "481": {
      "op": "ISZERO"
    },
    "482": {
      "op": "DUP2"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "fn": "SBT.hasSoul",
      "offset": [
        4805,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "490": {
      "op": "JUMP"
    },
    "491": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "492": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E"
    },
    "495": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F9"
    },
    "498": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "499": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "501": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA99"
    },
    "504": {
      "fn": "SBT.getOwner",
      "jump": "i",
      "offset": [
        5290,
        5525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "505": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "506": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77F"
    },
    "509": {
      "fn": "SBT.getOwner",
      "jump": "i",
      "offset": [
        5290,
        5525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "510": {
      "offset": [
        1572,
        1660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "511": {
      "fn": "SBT.getOwner",
      "offset": [
        1572,
        1660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "513": {
      "fn": "SBT.getOwner",
      "offset": [
        1572,
        1660
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "514": {
      "fn": "SBT.getOwner",
      "offset": [
        1572,
        1660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E"
    },
    "517": {
      "fn": "SBT.getOwner",
      "offset": [
        1572,
        1660
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "524": {
      "op": "SHL"
    },
    "525": {
      "op": "SUB"
    },
    "526": {
      "offset": [
        1572,
        1660
      ],
      "op": "AND",
      "path": "0"
    },
    "527": {
      "fn": "SBT.getOwner",
      "offset": [
        1572,
        1660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "528": {
      "fn": "SBT.getOwner",
      "offset": [
        1572,
        1660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "529": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "533": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21F"
    },
    "536": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "537": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "539": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1A"
    },
    "542": {
      "fn": "SBT.setAchevementsContractAddress",
      "jump": "i",
      "offset": [
        2857,
        3155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "543": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "544": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80B"
    },
    "547": {
      "fn": "SBT.setAchevementsContractAddress",
      "jump": "i",
      "offset": [
        2857,
        3155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "548": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "549": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4258,
        4268
      ],
      "op": "CALLER",
      "path": "0"
    },
    "550": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "552": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "553": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "554": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "555": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4257
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "557": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "559": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "560": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "561": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "562": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "564": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "DUP1",
      "path": "0"
    },
    "565": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "DUP4",
      "path": "0"
    },
    "566": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "567": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4242,
        4269
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "568": {
      "offset": [
        715,
        738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "569": {
      "fn": "SBT.mint_achievement",
      "offset": [
        715,
        738
      ],
      "op": "DUP5",
      "path": "0"
    },
    "570": {
      "fn": "SBT.mint_achievement",
      "offset": [
        715,
        738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "571": {
      "offset": [
        715,
        728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "573": {
      "offset": [
        715,
        738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "574": {
      "fn": "SBT.mint_achievement",
      "offset": [
        715,
        738
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "575": {
      "fn": "SBT.mint_achievement",
      "offset": [
        715,
        738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "576": {
      "fn": "SBT.mint_achievement",
      "offset": [
        715,
        738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "577": {
      "fn": "SBT.mint_achievement",
      "offset": [
        715,
        738
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "578": {
      "fn": "SBT.mint_achievement",
      "offset": [
        715,
        738
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "579": {
      "fn": "SBT.mint_achievement",
      "offset": [
        715,
        738
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "op": "SUB"
    },
    "588": {
      "offset": [
        715,
        738
      ],
      "op": "AND",
      "path": "0"
    },
    "589": {
      "offset": [
        707,
        775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "592": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "593": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "595": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "offset": [
        707,
        775
      ],
      "op": "DUP2",
      "path": "0"
    },
    "604": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "605": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "607": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "ADD",
      "path": "0"
    },
    "608": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "611": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "612": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB2"
    },
    "615": {
      "fn": "SBT.mint_achievement",
      "jump": "i",
      "offset": [
        707,
        775
      ],
      "op": "JUMP",
      "path": "0"
    },
    "616": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "617": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "619": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "620": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "DUP1",
      "path": "0"
    },
    "621": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "622": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "SUB",
      "path": "0"
    },
    "623": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "624": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "625": {
      "fn": "SBT.mint_achievement",
      "offset": [
        707,
        775
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "626": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4296
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x2"
    },
    "628": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4296
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "629": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "631": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "632": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "633": {
      "op": "PUSH4",
      "value": "0xF3913577"
    },
    "638": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "640": {
      "op": "SHL"
    },
    "641": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "642": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "643": {
      "op": "DUP5"
    },
    "644": {
      "op": "MLOAD"
    },
    "645": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "647": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP3",
      "path": "0"
    },
    "648": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "ADD",
      "path": "0"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "652": {
      "op": "DUP6"
    },
    "653": {
      "op": "ADD"
    },
    "654": {
      "op": "MLOAD"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "657": {
      "op": "DUP3"
    },
    "658": {
      "op": "ADD"
    },
    "659": {
      "op": "MSTORE"
    },
    "660": {
      "op": "SWAP1"
    },
    "661": {
      "op": "DUP5"
    },
    "662": {
      "op": "ADD"
    },
    "663": {
      "op": "MLOAD"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "670": {
      "op": "SHL"
    },
    "671": {
      "op": "SUB"
    },
    "672": {
      "op": "SWAP1"
    },
    "673": {
      "op": "DUP2"
    },
    "674": {
      "op": "AND"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "677": {
      "op": "DUP4"
    },
    "678": {
      "op": "ADD"
    },
    "679": {
      "op": "MSTORE"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "682": {
      "op": "DUP6"
    },
    "683": {
      "op": "ADD"
    },
    "684": {
      "op": "MLOAD"
    },
    "685": {
      "op": "ISZERO"
    },
    "686": {
      "op": "ISZERO"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "689": {
      "op": "DUP4"
    },
    "690": {
      "op": "ADD"
    },
    "691": {
      "op": "MSTORE"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "694": {
      "op": "DUP6"
    },
    "695": {
      "op": "ADD"
    },
    "696": {
      "op": "MLOAD"
    },
    "697": {
      "op": "DUP2"
    },
    "698": {
      "op": "AND"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "701": {
      "op": "DUP4"
    },
    "702": {
      "op": "ADD"
    },
    "703": {
      "op": "MSTORE"
    },
    "704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "706": {
      "op": "DUP6"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "op": "MLOAD"
    },
    "709": {
      "op": "DUP2"
    },
    "710": {
      "op": "AND"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "713": {
      "op": "DUP4"
    },
    "714": {
      "op": "ADD"
    },
    "715": {
      "op": "MSTORE"
    },
    "716": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "718": {
      "op": "DUP6"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "op": "MLOAD"
    },
    "721": {
      "op": "ISZERO"
    },
    "722": {
      "op": "ISZERO"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "725": {
      "op": "DUP4"
    },
    "726": {
      "op": "ADD"
    },
    "727": {
      "op": "MSTORE"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "730": {
      "op": "DUP6"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "MLOAD"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "735": {
      "op": "DUP4"
    },
    "736": {
      "op": "ADD"
    },
    "737": {
      "op": "MSTORE"
    },
    "738": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4296
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "740": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4296
      ],
      "op": "AND",
      "path": "0"
    },
    "741": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "742": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4301
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF3913577"
    },
    "747": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "748": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "751": {
      "op": "ADD"
    },
    "752": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "754": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "756": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "757": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "758": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP4",
      "path": "0"
    },
    "759": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "SUB",
      "path": "0"
    },
    "760": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "761": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "763": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP8",
      "path": "0"
    },
    "764": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "765": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "766": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "767": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "768": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "769": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309"
    },
    "772": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "773": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "775": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "776": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "REVERT",
      "path": "0"
    },
    "777": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "778": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "POP",
      "path": "0"
    },
    "779": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "GAS",
      "path": "0"
    },
    "780": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "CALL",
      "path": "0"
    },
    "781": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "782": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "783": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "784": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31D"
    },
    "787": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "788": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "789": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "791": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "792": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "793": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "794": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "796": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "REVERT",
      "path": "0"
    },
    "797": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4281,
        4319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "798": {
      "op": "POP"
    },
    "799": {
      "op": "POP"
    },
    "800": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4366,
        4376
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 3
    },
    "801": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "803": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "804": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "805": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "806": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "808": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "810": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "813": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "814": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "815": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "816": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "817": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4350,
        4377
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "818": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "819": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "820": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xD49A4559BDDCF9B3F02926936008FEBF67B424D2F0E30B5CBB9D954B8D7A68FB"
    },
    "853": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x364"
    },
    "858": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "op": "SWAP1"
    },
    "861": {
      "op": "DUP2"
    },
    "862": {
      "op": "MSTORE"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "SWAP1"
    },
    "867": {
      "op": "JUMP"
    },
    "868": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "869": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "871": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "872": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "DUP1",
      "path": "0"
    },
    "873": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "874": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "SUB",
      "path": "0"
    },
    "875": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "876": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4334,
        4378
      ],
      "op": "LOG1",
      "path": "0"
    },
    "877": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "POP",
      "path": "0"
    },
    "878": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4119,
        4385
      ],
      "op": "POP",
      "path": "0"
    },
    "879": {
      "fn": "SBT.mint_achievement",
      "jump": "o",
      "offset": [
        4119,
        4385
      ],
      "op": "JUMP",
      "path": "0"
    },
    "880": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "881": {
      "offset": [
        1140,
        1141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "883": {
      "offset": [
        1105,
        1128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "884": {
      "fn": "SBT.mint",
      "offset": [
        1105,
        1128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "885": {
      "fn": "SBT.mint",
      "offset": [
        1105,
        1128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "886": {
      "offset": [
        1105,
        1118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "888": {
      "offset": [
        1105,
        1128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "890": {
      "fn": "SBT.mint",
      "offset": [
        1105,
        1128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "891": {
      "fn": "SBT.mint",
      "offset": [
        1105,
        1128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "893": {
      "fn": "SBT.mint",
      "offset": [
        1105,
        1128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "SBT.mint",
      "offset": [
        1105,
        1128
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "895": {
      "fn": "SBT.mint",
      "offset": [
        1105,
        1128
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "896": {
      "fn": "SBT.mint",
      "offset": [
        3348,
        3356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "897": {
      "fn": "SBT.mint",
      "offset": [
        3348,
        3356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "SUB"
    },
    "906": {
      "offset": [
        1105,
        1128
      ],
      "op": "AND",
      "path": "0"
    },
    "907": {
      "offset": [
        1105,
        1142
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "908": {
      "offset": [
        1097,
        1158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C5"
    },
    "911": {
      "offset": [
        1097,
        1158
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "912": {
      "fn": "SBT.mint",
      "offset": [
        1097,
        1158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "914": {
      "fn": "SBT.mint",
      "offset": [
        1097,
        1158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "915": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "919": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "921": {
      "op": "SHL"
    },
    "922": {
      "offset": [
        1097,
        1158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "923": {
      "fn": "SBT.mint",
      "offset": [
        1097,
        1158
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "926": {
      "offset": [
        1097,
        1158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "928": {
      "fn": "SBT.mint",
      "offset": [
        1097,
        1158
      ],
      "op": "DUP3",
      "path": "0"
    },
    "929": {
      "fn": "SBT.mint",
      "offset": [
        1097,
        1158
      ],
      "op": "ADD",
      "path": "0"
    },
    "930": {
      "op": "MSTORE"
    },
    "931": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "935": {
      "op": "DUP3"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "op": "MSTORE"
    },
    "938": {
      "op": "PUSH11",
      "value": "0x536F756C20657869737473"
    },
    "950": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "952": {
      "op": "SHL"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "955": {
      "op": "DUP3"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "op": "MSTORE"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "offset": [
        1097,
        1158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "964": {
      "op": "JUMP"
    },
    "965": {
      "offset": [
        1097,
        1158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "966": {
      "offset": [
        1177,
        1203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "968": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "969": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "DUP2",
      "path": "0"
    },
    "970": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "971": {
      "offset": [
        1177,
        1193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "973": {
      "offset": [
        1177,
        1203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "975": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "976": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "978": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "979": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "980": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "981": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "983": {
      "fn": "SBT.mint",
      "offset": [
        1177,
        1203
      ],
      "op": "AND",
      "path": "0"
    },
    "984": {
      "offset": [
        1176,
        1203
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "985": {
      "offset": [
        1168,
        1239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x424"
    },
    "988": {
      "offset": [
        1168,
        1239
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "989": {
      "fn": "SBT.mint",
      "offset": [
        1168,
        1239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "991": {
      "fn": "SBT.mint",
      "offset": [
        1168,
        1239
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "992": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "offset": [
        1168,
        1239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1000": {
      "fn": "SBT.mint",
      "offset": [
        1168,
        1239
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1003": {
      "offset": [
        1168,
        1239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1005": {
      "fn": "SBT.mint",
      "offset": [
        1168,
        1239
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1006": {
      "fn": "SBT.mint",
      "offset": [
        1168,
        1239
      ],
      "op": "ADD",
      "path": "0"
    },
    "1007": {
      "op": "MSTORE"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1012": {
      "op": "DUP3"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "op": "MSTORE"
    },
    "1015": {
      "op": "PUSH32",
      "value": "0x536F756C206973206D696E7465642C20627574206E6F7420636C61696D656400"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1050": {
      "op": "DUP3"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "MSTORE"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "offset": [
        1168,
        1239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "1059": {
      "op": "JUMP"
    },
    "1060": {
      "offset": [
        1168,
        1239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1061": {
      "fn": "SBT.mint",
      "offset": [
        3394,
        3402
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "1063": {
      "fn": "SBT.mint",
      "offset": [
        3394,
        3402
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1070": {
      "op": "SHL"
    },
    "1071": {
      "op": "SUB"
    },
    "1072": {
      "fn": "SBT.mint",
      "offset": [
        3394,
        3402
      ],
      "op": "AND",
      "path": "0"
    },
    "1073": {
      "fn": "SBT.mint",
      "offset": [
        3380,
        3390
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1074": {
      "branch": 24,
      "fn": "SBT.mint",
      "offset": [
        3380,
        3402
      ],
      "op": "EQ",
      "path": "0"
    },
    "1075": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47E"
    },
    "1078": {
      "branch": 24,
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1079": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1081": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1090": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1093": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1095": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1096": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "ADD",
      "path": "0"
    },
    "1097": {
      "op": "DUP2"
    },
    "1098": {
      "op": "SWAP1"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1102": {
      "op": "DUP3"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F70657261746F722063616E206D696E74206E657720736F756C73"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1140": {
      "op": "DUP3"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "op": "MSTORE"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1145": {
      "op": "ADD"
    },
    "1146": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "1149": {
      "op": "JUMP"
    },
    "1150": {
      "fn": "SBT.mint",
      "offset": [
        3372,
        3439
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1157": {
      "op": "SHL"
    },
    "1158": {
      "op": "SUB"
    },
    "1159": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 5
    },
    "1160": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "AND",
      "path": "0"
    },
    "1161": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1163": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1164": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1165": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1166": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1168": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1170": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1171": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1172": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1173": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1175": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1176": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1177": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3479
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1178": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3490
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1179": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1180": {
      "fn": "SBT.mint",
      "offset": [
        3449,
        3490
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1181": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 6
    },
    "1182": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1183": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1184": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1186": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1187": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1188": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1189": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1190": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1191": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3526
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1192": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1193": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3533
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1196": {
      "op": "NOT"
    },
    "1197": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3533
      ],
      "op": "AND",
      "path": "0"
    },
    "1198": {
      "fn": "SBT.mint",
      "offset": [
        3529,
        3533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1200": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3533
      ],
      "op": "OR",
      "path": "0"
    },
    "1201": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1202": {
      "fn": "SBT.mint",
      "offset": [
        3500,
        3533
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1203": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 7
    },
    "1204": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1205": {
      "op": "DUP4"
    },
    "1206": {
      "op": "DUP2"
    },
    "1207": {
      "op": "MSTORE"
    },
    "1208": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7883703ED0E86588A40D76551C92F8A4B329E3BF19765E0E6749473C1A84665"
    },
    "1241": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1242": {
      "op": "ADD"
    },
    "1243": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1244": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1246": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1247": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1248": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1249": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "SUB",
      "path": "0"
    },
    "1250": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "SBT.mint",
      "offset": [
        3548,
        3562
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1252": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "POP",
      "path": "0"
    },
    "1253": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "POP",
      "path": "0"
    },
    "1254": {
      "fn": "SBT.mint",
      "offset": [
        3261,
        3569
      ],
      "op": "POP",
      "path": "0"
    },
    "1255": {
      "fn": "SBT.mint",
      "jump": "o",
      "offset": [
        3261,
        3569
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1256": {
      "fn": "SBT.burn",
      "offset": [
        4438,
        4740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1257": {
      "fn": "SBT.burn",
      "offset": [
        4490,
        4500
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1258": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1260": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1261": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1262": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1263": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1265": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1267": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1268": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1269": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1270": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1272": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1273": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1274": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1275": {
      "fn": "SBT.burn",
      "offset": [
        4474,
        4501
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1276": {
      "offset": [
        715,
        738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1277": {
      "fn": "SBT.burn",
      "offset": [
        715,
        738
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1278": {
      "fn": "SBT.burn",
      "offset": [
        715,
        738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1279": {
      "offset": [
        715,
        728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1281": {
      "offset": [
        715,
        738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1282": {
      "fn": "SBT.burn",
      "offset": [
        715,
        738
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1283": {
      "fn": "SBT.burn",
      "offset": [
        715,
        738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1284": {
      "fn": "SBT.burn",
      "offset": [
        715,
        738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1285": {
      "fn": "SBT.burn",
      "offset": [
        715,
        738
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1286": {
      "fn": "SBT.burn",
      "offset": [
        715,
        738
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1287": {
      "fn": "SBT.burn",
      "offset": [
        715,
        738
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "op": "SUB"
    },
    "1296": {
      "offset": [
        715,
        738
      ],
      "op": "AND",
      "path": "0"
    },
    "1297": {
      "offset": [
        707,
        775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52C"
    },
    "1300": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1301": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1303": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1304": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "offset": [
        707,
        775
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1312": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1313": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1315": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "ADD",
      "path": "0"
    },
    "1316": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "1319": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1320": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB2"
    },
    "1323": {
      "fn": "SBT.burn",
      "jump": "i",
      "offset": [
        707,
        775
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1324": {
      "fn": "SBT.burn",
      "offset": [
        707,
        775
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1325": {
      "fn": "SBT.burn",
      "offset": [
        4553,
        4563
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1326": {
      "fn": "SBT.burn",
      "offset": [
        4513,
        4534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1328": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1329": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1330": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1331": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1333": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1335": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1336": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1338": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1340": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1341": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1342": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1343": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1344": {
      "fn": "SBT.burn",
      "offset": [
        4537,
        4564
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1345": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4604
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "1346": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4604
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1347": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1348": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1350": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4604
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1351": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1352": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1353": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4604
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1354": {
      "fn": "SBT.burn",
      "offset": [
        4581,
        4604
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1355": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1356": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1357": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1358": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1360": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1361": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "ADD",
      "path": "0"
    },
    "1362": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1363": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1364": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1365": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1367": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "ADD",
      "path": "0"
    },
    "1368": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1369": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1370": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4604
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1371": {
      "fn": "SBT.burn",
      "offset": [
        4614,
        4648
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "1372": {
      "fn": "SBT.burn",
      "offset": [
        4614,
        4648
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1373": {
      "fn": "SBT.burn",
      "offset": [
        4614,
        4648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1374": {
      "fn": "SBT.burn",
      "offset": [
        4614,
        4648
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1375": {
      "fn": "SBT.burn",
      "offset": [
        4665,
        4678
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x3"
    },
    "1377": {
      "fn": "SBT.burn",
      "offset": [
        4665,
        4696
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1378": {
      "fn": "SBT.burn",
      "offset": [
        4665,
        4696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1379": {
      "fn": "SBT.burn",
      "offset": [
        4665,
        4696
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1380": {
      "fn": "SBT.burn",
      "offset": [
        4665,
        4696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1381": {
      "fn": "SBT.burn",
      "offset": [
        4665,
        4696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1382": {
      "fn": "SBT.burn",
      "offset": [
        4665,
        4696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1383": {
      "fn": "SBT.burn",
      "offset": [
        4658,
        4696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1384": {
      "fn": "SBT.burn",
      "offset": [
        4658,
        4696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "op": "SUB"
    },
    "1393": {
      "op": "NOT"
    },
    "1394": {
      "fn": "SBT.burn",
      "offset": [
        4658,
        4696
      ],
      "op": "AND",
      "path": "0"
    },
    "1395": {
      "fn": "SBT.burn",
      "offset": [
        4658,
        4696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1396": {
      "fn": "SBT.burn",
      "offset": [
        4658,
        4696
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1397": {
      "fn": "SBT.burn",
      "offset": [
        4711,
        4733
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 11
    },
    "1398": {
      "op": "DUP3"
    },
    "1399": {
      "op": "DUP2"
    },
    "1400": {
      "op": "MSTORE"
    },
    "1401": {
      "fn": "SBT.burn",
      "offset": [
        4711,
        4733
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB90306AD06B2A6FF86DDC9327DB583062895EF6540E62DC50ADD009DB5B356EB"
    },
    "1434": {
      "fn": "SBT.burn",
      "offset": [
        4711,
        4733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1435": {
      "op": "ADD"
    },
    "1436": {
      "fn": "SBT.burn",
      "offset": [
        4711,
        4733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x364"
    },
    "1439": {
      "op": "JUMP"
    },
    "1440": {
      "fn": "SBT.getSoul",
      "offset": [
        5004,
        5193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1441": {
      "fn": "SBT.getSoul",
      "offset": [
        5059,
        5070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A8"
    },
    "1444": {
      "fn": "SBT.getSoul",
      "offset": [
        5059,
        5070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "1447": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        5059,
        5070
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1448": {
      "fn": "SBT.getSoul",
      "offset": [
        5059,
        5070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "SUB"
    },
    "1457": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 12
    },
    "1458": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "AND",
      "path": "0"
    },
    "1459": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1461": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1462": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1463": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1464": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1466": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1468": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1469": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1471": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1472": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1473": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5112
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1474": {
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5117
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1475": {
      "branch": 25,
      "fn": "SBT.getSoul",
      "offset": [
        5090,
        5117
      ],
      "op": "SUB",
      "path": "0"
    },
    "1476": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DF"
    },
    "1479": {
      "branch": 25,
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1480": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1482": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1491": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1492": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1494": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "ADD",
      "path": "0"
    },
    "1495": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "1498": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1499": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB2"
    },
    "1502": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        5082,
        5140
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1503": {
      "fn": "SBT.getSoul",
      "offset": [
        5082,
        5140
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "op": "SUB"
    },
    "1513": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "AND",
      "path": "0",
      "statement": 13
    },
    "1514": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1516": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1517": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1518": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1519": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1521": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1523": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1524": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1525": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1526": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1528": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1529": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1530": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1531": {
      "fn": "SBT.getSoul",
      "offset": [
        5163,
        5185
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1532": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1533": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1534": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1536": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1537": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1538": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1539": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1540": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1541": {
      "fn": "SBT.getSoul",
      "offset": [
        5157,
        5186
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1542": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1543": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1544": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1545": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1546": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "ADD",
      "path": "0"
    },
    "1547": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1548": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1549": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1550": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1551": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1552": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1553": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1554": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1555": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1556": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1557": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "ADD",
      "path": "0"
    },
    "1558": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1559": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1560": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1561": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1563": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1564": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "ADD",
      "path": "0"
    },
    "1565": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1566": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1567": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1568": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1570": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1571": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1572": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "ADD",
      "path": "0"
    },
    "1573": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1574": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1575": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1576": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "ADD",
      "path": "0"
    },
    "1577": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1578": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1579": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1580": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "ADD",
      "path": "0"
    },
    "1581": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1582": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1583": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1584": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1585": {
      "fn": "SBT.getSoul",
      "offset": [
        5150,
        5186
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1586": {
      "fn": "SBT.getSoul",
      "jump": "o",
      "offset": [
        5004,
        5193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1587": {
      "fn": "SBT.claim",
      "offset": [
        3641,
        4047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1588": {
      "fn": "SBT.claim",
      "offset": [
        3759,
        3769
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1589": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1591": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1592": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1593": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1594": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1596": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1598": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1599": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1600": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1601": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1603": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1604": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1605": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1606": {
      "fn": "SBT.claim",
      "offset": [
        3743,
        3770
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1607": {
      "offset": [
        879,
        902
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1608": {
      "fn": "SBT.claim",
      "offset": [
        879,
        902
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1609": {
      "fn": "SBT.claim",
      "offset": [
        879,
        902
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1610": {
      "offset": [
        879,
        892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1612": {
      "offset": [
        879,
        902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1613": {
      "fn": "SBT.claim",
      "offset": [
        879,
        902
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1614": {
      "fn": "SBT.claim",
      "offset": [
        879,
        902
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1615": {
      "fn": "SBT.claim",
      "offset": [
        879,
        902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1616": {
      "fn": "SBT.claim",
      "offset": [
        879,
        902
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1617": {
      "fn": "SBT.claim",
      "offset": [
        879,
        902
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1618": {
      "fn": "SBT.claim",
      "offset": [
        879,
        902
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "op": "SUB"
    },
    "1627": {
      "offset": [
        879,
        902
      ],
      "op": "AND",
      "path": "0"
    },
    "1628": {
      "offset": [
        879,
        916
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1629": {
      "offset": [
        858,
        965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A8"
    },
    "1632": {
      "offset": [
        858,
        965
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1633": {
      "fn": "SBT.claim",
      "offset": [
        858,
        965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1635": {
      "fn": "SBT.claim",
      "offset": [
        858,
        965
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "offset": [
        858,
        965
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1644": {
      "fn": "SBT.claim",
      "offset": [
        858,
        965
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1647": {
      "offset": [
        858,
        965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1649": {
      "fn": "SBT.claim",
      "offset": [
        858,
        965
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1650": {
      "fn": "SBT.claim",
      "offset": [
        858,
        965
      ],
      "op": "ADD",
      "path": "0"
    },
    "1651": {
      "op": "MSTORE"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1656": {
      "op": "DUP3"
    },
    "1657": {
      "op": "ADD"
    },
    "1658": {
      "op": "MSTORE"
    },
    "1659": {
      "op": "PUSH32",
      "value": "0x536F756C20697320616C726561647920636C61696D6564000000000000000000"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1694": {
      "op": "DUP3"
    },
    "1695": {
      "op": "ADD"
    },
    "1696": {
      "op": "MSTORE"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "offset": [
        858,
        965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "1703": {
      "op": "JUMP"
    },
    "1704": {
      "offset": [
        858,
        965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1705": {
      "offset": [
        983,
        1009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1707": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1708": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1709": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1710": {
      "offset": [
        983,
        999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1712": {
      "offset": [
        983,
        1009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1714": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1715": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1717": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1718": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1719": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1720": {
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1722": {
      "branch": 26,
      "fn": "SBT.claim",
      "offset": [
        983,
        1009
      ],
      "op": "AND",
      "path": "0"
    },
    "1723": {
      "offset": [
        975,
        1029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F8"
    },
    "1726": {
      "branch": 26,
      "offset": [
        975,
        1029
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1727": {
      "fn": "SBT.claim",
      "offset": [
        975,
        1029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1729": {
      "fn": "SBT.claim",
      "offset": [
        975,
        1029
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "offset": [
        975,
        1029
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1738": {
      "fn": "SBT.claim",
      "offset": [
        975,
        1029
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1741": {
      "offset": [
        975,
        1029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1743": {
      "fn": "SBT.claim",
      "offset": [
        975,
        1029
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1744": {
      "fn": "SBT.claim",
      "offset": [
        975,
        1029
      ],
      "op": "ADD",
      "path": "0"
    },
    "1745": {
      "op": "MSTORE"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1750": {
      "op": "DUP3"
    },
    "1751": {
      "op": "ADD"
    },
    "1752": {
      "op": "MSTORE"
    },
    "1753": {
      "op": "PUSH15",
      "value": "0x139BDB881B5A5B9D1959081CDBDD5B"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1771": {
      "op": "SHL"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "MSTORE"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1779": {
      "op": "ADD"
    },
    "1780": {
      "offset": [
        975,
        1029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "1783": {
      "op": "JUMP"
    },
    "1784": {
      "offset": [
        975,
        1029
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1785": {
      "fn": "SBT.claim",
      "offset": [
        3818,
        3828
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1786": {
      "fn": "SBT.claim",
      "offset": [
        3786,
        3799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1788": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1789": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1790": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1791": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1793": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1795": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1796": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1797": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1798": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1800": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1801": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1802": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1803": {
      "fn": "SBT.claim",
      "offset": [
        3802,
        3829
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1804": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3872
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 14
    },
    "1805": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3872
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1806": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3872
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1807": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1809": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3872
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1810": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3872
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1811": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3872
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1812": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3872
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1813": {
      "fn": "SBT.claim",
      "offset": [
        3846,
        3872
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1814": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3872
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1815": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3872
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1818": {
      "op": "NOT"
    },
    "1819": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3872
      ],
      "op": "AND",
      "path": "0"
    },
    "1820": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3872
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1821": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3872
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1822": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3895
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x3"
    },
    "1824": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3905
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1825": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1826": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1827": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3905
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1828": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3905
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1829": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1830": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1837": {
      "op": "SHL"
    },
    "1838": {
      "op": "SUB"
    },
    "1839": {
      "op": "NOT"
    },
    "1840": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "AND",
      "path": "0"
    },
    "1841": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1842": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1843": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "OR",
      "path": "0"
    },
    "1844": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1845": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1846": {
      "fn": "SBT.claim",
      "offset": [
        3882,
        3918
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1847": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3933
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x5"
    },
    "1849": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3943
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1850": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3943
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1851": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3943
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1852": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3943
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1853": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3943
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1854": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3943
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1855": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3962
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1856": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3962
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1857": {
      "fn": "SBT.claim",
      "offset": [
        3928,
        3962
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1858": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 17
    },
    "1859": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        3998
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1863": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        3998
      ],
      "op": "ADD",
      "path": "0"
    },
    "1864": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1865": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1866": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1867": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "ADD",
      "path": "0"
    },
    "1868": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1869": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1871": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1872": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1873": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "ADD",
      "path": "0"
    },
    "1874": {
      "fn": "SBT.claim",
      "offset": [
        3972,
        4010
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1875": {
      "fn": "SBT.claim",
      "offset": [
        4025,
        4040
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 18
    },
    "1876": {
      "fn": "SBT.claim",
      "offset": [
        4025,
        4040
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1877": {
      "op": "DUP3"
    },
    "1878": {
      "op": "DUP2"
    },
    "1879": {
      "op": "MSTORE"
    },
    "1880": {
      "fn": "SBT.claim",
      "offset": [
        4025,
        4040
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7BB2B3C10797BACCB6F8C4791F1EDD6CA2F0D028EE0EDA64B01A9A57E3A653F7"
    },
    "1913": {
      "fn": "SBT.claim",
      "offset": [
        4025,
        4040
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1914": {
      "op": "ADD"
    },
    "1915": {
      "fn": "SBT.claim",
      "offset": [
        4025,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DB"
    },
    "1918": {
      "op": "JUMP"
    },
    "1919": {
      "fn": "SBT.getOwner",
      "offset": [
        5290,
        5525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1920": {
      "fn": "SBT.getOwner",
      "offset": [
        5346,
        5353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1922": {
      "fn": "SBT.getOwner",
      "offset": [
        5400,
        5408
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 19
    },
    "1923": {
      "fn": "SBT.getOwner",
      "offset": [
        5400,
        5408
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "fn": "SBT.getOwner",
      "offset": [
        5400,
        5408
      ],
      "op": "AND",
      "path": "0"
    },
    "1933": {
      "fn": "SBT.getOwner",
      "offset": [
        5386,
        5396
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1934": {
      "branch": 27,
      "fn": "SBT.getOwner",
      "offset": [
        5386,
        5408
      ],
      "op": "EQ",
      "path": "0"
    },
    "1935": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EF"
    },
    "1938": {
      "branch": 27,
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1939": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1941": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1950": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1953": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1955": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1956": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "ADD",
      "path": "0"
    },
    "1957": {
      "op": "MSTORE"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1962": {
      "op": "DUP3"
    },
    "1963": {
      "op": "ADD"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468697320636F6E74726163742063616E20766965772074686973"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2000": {
      "op": "DUP3"
    },
    "2001": {
      "op": "ADD"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "PUSH12",
      "value": "0x206861736865642064617461"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2018": {
      "op": "SHL"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2021": {
      "op": "DUP3"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "MSTORE"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2026": {
      "op": "ADD"
    },
    "2027": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "2030": {
      "op": "JUMP"
    },
    "2031": {
      "fn": "SBT.getOwner",
      "offset": [
        5365,
        5478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x0"
    },
    "2035": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2036": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2037": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2038": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2040": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2042": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2043": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2045": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2046": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2047": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "op": "SUB"
    },
    "2056": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "AND",
      "path": "0"
    },
    "2057": {
      "fn": "SBT.getOwner",
      "offset": [
        5495,
        5518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2058": {
      "fn": "SBT.getOwner",
      "jump": "o",
      "offset": [
        5290,
        5525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2059": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2060": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2972,
        2980
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "2062": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2972,
        2980
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2972,
        2980
      ],
      "op": "AND",
      "path": "0"
    },
    "2072": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2958,
        2968
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2073": {
      "branch": 28,
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2958,
        2980
      ],
      "op": "EQ",
      "path": "0"
    },
    "2074": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x875"
    },
    "2077": {
      "branch": 28,
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2078": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2080": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2089": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2092": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2094": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2095": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "ADD",
      "path": "0"
    },
    "2096": {
      "op": "MSTORE"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2101": {
      "op": "DUP3"
    },
    "2102": {
      "op": "ADD"
    },
    "2103": {
      "op": "MSTORE"
    },
    "2104": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468697320636F6E74726163742063616E20736574207468697320"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2139": {
      "op": "DUP3"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "op": "MSTORE"
    },
    "2142": {
      "op": "PUSH7",
      "value": "0x61646472657373"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2155": {
      "op": "DUP3"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2160": {
      "op": "ADD"
    },
    "2161": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "2164": {
      "op": "JUMP"
    },
    "2165": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2937,
        3045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2166": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3075
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x1"
    },
    "2168": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2169": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2176": {
      "op": "SHL"
    },
    "2177": {
      "op": "SUB"
    },
    "2178": {
      "op": "NOT"
    },
    "2179": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "AND",
      "path": "0"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2189": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "AND",
      "path": "0"
    },
    "2190": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2191": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2192": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "OR",
      "path": "0"
    },
    "2193": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2194": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2195": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3055,
        3090
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2196": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "2198": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2199": {
      "op": "SWAP1"
    },
    "2200": {
      "op": "DUP2"
    },
    "2201": {
      "op": "MSTORE"
    },
    "2202": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x763C88EAA6A598ACCE6051F1D0326944C2B7166CC9512B51414A5AADAB51A9C"
    },
    "2235": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2238": {
      "op": "ADD"
    },
    "2239": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2241": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2242": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2243": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2244": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "SUB",
      "path": "0"
    },
    "2245": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2246": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3105,
        3148
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2247": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2857,
        3155
      ],
      "op": "POP",
      "path": "0"
    },
    "2248": {
      "fn": "SBT.setAchevementsContractAddress",
      "jump": "o",
      "offset": [
        2857,
        3155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2249": {
      "op": "JUMPDEST"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2252": {
      "op": "MLOAD"
    },
    "2253": {
      "op": "DUP1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2259": {
      "op": "MSTORE"
    },
    "2260": {
      "op": "DUP1"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2263": {
      "op": "DUP2"
    },
    "2264": {
      "op": "MSTORE"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2267": {
      "op": "ADD"
    },
    "2268": {
      "op": "PUSH2",
      "value": "0x8FE"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2273": {
      "op": "MLOAD"
    },
    "2274": {
      "op": "DUP1"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2277": {
      "op": "ADD"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2280": {
      "op": "MSTORE"
    },
    "2281": {
      "op": "DUP1"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2284": {
      "op": "DUP1"
    },
    "2285": {
      "op": "NOT"
    },
    "2286": {
      "op": "AND"
    },
    "2287": {
      "op": "DUP2"
    },
    "2288": {
      "op": "MSTORE"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2291": {
      "op": "ADD"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2294": {
      "op": "DUP1"
    },
    "2295": {
      "op": "NOT"
    },
    "2296": {
      "op": "AND"
    },
    "2297": {
      "op": "DUP2"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "SWAP1"
    },
    "2301": {
      "op": "JUMP"
    },
    "2302": {
      "op": "JUMPDEST"
    },
    "2303": {
      "op": "SWAP1"
    },
    "2304": {
      "op": "MSTORE"
    },
    "2305": {
      "op": "SWAP1"
    },
    "2306": {
      "jump": "o",
      "op": "JUMP"
    },
    "2307": {
      "op": "JUMPDEST"
    },
    "2308": {
      "op": "DUP1"
    },
    "2309": {
      "op": "CALLDATALOAD"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2316": {
      "op": "SHL"
    },
    "2317": {
      "op": "SUB"
    },
    "2318": {
      "op": "DUP2"
    },
    "2319": {
      "op": "AND"
    },
    "2320": {
      "op": "DUP2"
    },
    "2321": {
      "op": "EQ"
    },
    "2322": {
      "op": "PUSH2",
      "value": "0x91A"
    },
    "2325": {
      "op": "JUMPI"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2328": {
      "op": "DUP1"
    },
    "2329": {
      "op": "REVERT"
    },
    "2330": {
      "op": "JUMPDEST"
    },
    "2331": {
      "op": "SWAP2"
    },
    "2332": {
      "op": "SWAP1"
    },
    "2333": {
      "op": "POP"
    },
    "2334": {
      "jump": "o",
      "op": "JUMP"
    },
    "2335": {
      "op": "JUMPDEST"
    },
    "2336": {
      "op": "DUP1"
    },
    "2337": {
      "op": "CALLDATALOAD"
    },
    "2338": {
      "op": "DUP1"
    },
    "2339": {
      "op": "ISZERO"
    },
    "2340": {
      "op": "ISZERO"
    },
    "2341": {
      "op": "DUP2"
    },
    "2342": {
      "op": "EQ"
    },
    "2343": {
      "op": "PUSH2",
      "value": "0x91A"
    },
    "2346": {
      "op": "JUMPI"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2349": {
      "op": "DUP1"
    },
    "2350": {
      "op": "REVERT"
    },
    "2351": {
      "op": "JUMPDEST"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2354": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2357": {
      "op": "DUP1"
    },
    "2358": {
      "op": "DUP4"
    },
    "2359": {
      "op": "DUP6"
    },
    "2360": {
      "op": "SUB"
    },
    "2361": {
      "op": "SLT"
    },
    "2362": {
      "op": "ISZERO"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x943"
    },
    "2366": {
      "op": "JUMPI"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2369": {
      "op": "DUP1"
    },
    "2370": {
      "op": "REVERT"
    },
    "2371": {
      "op": "JUMPDEST"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2374": {
      "op": "MLOAD"
    },
    "2375": {
      "op": "SWAP1"
    },
    "2376": {
      "op": "DUP2"
    },
    "2377": {
      "op": "ADD"
    },
    "2378": {
      "op": "SWAP1"
    },
    "2379": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2388": {
      "op": "DUP3"
    },
    "2389": {
      "op": "GT"
    },
    "2390": {
      "op": "DUP2"
    },
    "2391": {
      "op": "DUP4"
    },
    "2392": {
      "op": "LT"
    },
    "2393": {
      "op": "OR"
    },
    "2394": {
      "op": "ISZERO"
    },
    "2395": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2398": {
      "op": "JUMPI"
    },
    "2399": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2406": {
      "op": "SHL"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2409": {
      "op": "MSTORE"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2414": {
      "op": "MSTORE"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2419": {
      "op": "REVERT"
    },
    "2420": {
      "op": "JUMPDEST"
    },
    "2421": {
      "op": "DUP2"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2424": {
      "op": "MSTORE"
    },
    "2425": {
      "op": "DUP4"
    },
    "2426": {
      "op": "CALLDATALOAD"
    },
    "2427": {
      "op": "DUP2"
    },
    "2428": {
      "op": "MSTORE"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2431": {
      "op": "DUP5"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "op": "CALLDATALOAD"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2436": {
      "op": "DUP3"
    },
    "2437": {
      "op": "ADD"
    },
    "2438": {
      "op": "MSTORE"
    },
    "2439": {
      "op": "PUSH2",
      "value": "0x992"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2444": {
      "op": "DUP6"
    },
    "2445": {
      "op": "ADD"
    },
    "2446": {
      "op": "PUSH2",
      "value": "0x903"
    },
    "2449": {
      "jump": "i",
      "op": "JUMP"
    },
    "2450": {
      "op": "JUMPDEST"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2453": {
      "op": "DUP3"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "op": "MSTORE"
    },
    "2456": {
      "op": "PUSH2",
      "value": "0x9A3"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2461": {
      "op": "DUP6"
    },
    "2462": {
      "op": "ADD"
    },
    "2463": {
      "op": "PUSH2",
      "value": "0x91F"
    },
    "2466": {
      "jump": "i",
      "op": "JUMP"
    },
    "2467": {
      "op": "JUMPDEST"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "ADD"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH2",
      "value": "0x9B4"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2478": {
      "op": "DUP6"
    },
    "2479": {
      "op": "ADD"
    },
    "2480": {
      "op": "PUSH2",
      "value": "0x903"
    },
    "2483": {
      "jump": "i",
      "op": "JUMP"
    },
    "2484": {
      "op": "JUMPDEST"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2487": {
      "op": "DUP3"
    },
    "2488": {
      "op": "ADD"
    },
    "2489": {
      "op": "MSTORE"
    },
    "2490": {
      "op": "PUSH2",
      "value": "0x9C5"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2495": {
      "op": "DUP6"
    },
    "2496": {
      "op": "ADD"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x903"
    },
    "2500": {
      "jump": "i",
      "op": "JUMP"
    },
    "2501": {
      "op": "JUMPDEST"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2504": {
      "op": "DUP3"
    },
    "2505": {
      "op": "ADD"
    },
    "2506": {
      "op": "MSTORE"
    },
    "2507": {
      "op": "PUSH2",
      "value": "0x9D6"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2512": {
      "op": "DUP6"
    },
    "2513": {
      "op": "ADD"
    },
    "2514": {
      "op": "PUSH2",
      "value": "0x91F"
    },
    "2517": {
      "jump": "i",
      "op": "JUMP"
    },
    "2518": {
      "op": "JUMPDEST"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2521": {
      "op": "DUP3"
    },
    "2522": {
      "op": "ADD"
    },
    "2523": {
      "op": "MSTORE"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2526": {
      "op": "DUP5"
    },
    "2527": {
      "op": "ADD"
    },
    "2528": {
      "op": "CALLDATALOAD"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "DUP1"
    },
    "2535": {
      "op": "SWAP3"
    },
    "2536": {
      "op": "POP"
    },
    "2537": {
      "op": "POP"
    },
    "2538": {
      "op": "POP"
    },
    "2539": {
      "op": "SWAP3"
    },
    "2540": {
      "op": "SWAP2"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "jump": "o",
      "op": "JUMP"
    },
    "2544": {
      "op": "JUMPDEST"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2547": {
      "op": "DUP1"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2550": {
      "op": "DUP4"
    },
    "2551": {
      "op": "DUP6"
    },
    "2552": {
      "op": "SUB"
    },
    "2553": {
      "op": "SLT"
    },
    "2554": {
      "op": "ISZERO"
    },
    "2555": {
      "op": "PUSH2",
      "value": "0xA03"
    },
    "2558": {
      "op": "JUMPI"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2561": {
      "op": "DUP1"
    },
    "2562": {
      "op": "REVERT"
    },
    "2563": {
      "op": "JUMPDEST"
    },
    "2564": {
      "op": "PUSH2",
      "value": "0xA0C"
    },
    "2567": {
      "op": "DUP4"
    },
    "2568": {
      "op": "PUSH2",
      "value": "0x903"
    },
    "2571": {
      "jump": "i",
      "op": "JUMP"
    },
    "2572": {
      "op": "JUMPDEST"
    },
    "2573": {
      "op": "SWAP5"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2576": {
      "op": "SWAP4"
    },
    "2577": {
      "op": "SWAP1"
    },
    "2578": {
      "op": "SWAP4"
    },
    "2579": {
      "op": "ADD"
    },
    "2580": {
      "op": "CALLDATALOAD"
    },
    "2581": {
      "op": "SWAP4"
    },
    "2582": {
      "op": "POP"
    },
    "2583": {
      "op": "POP"
    },
    "2584": {
      "op": "POP"
    },
    "2585": {
      "jump": "o",
      "op": "JUMP"
    },
    "2586": {
      "op": "JUMPDEST"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2591": {
      "op": "DUP3"
    },
    "2592": {
      "op": "DUP5"
    },
    "2593": {
      "op": "SUB"
    },
    "2594": {
      "op": "SLT"
    },
    "2595": {
      "op": "ISZERO"
    },
    "2596": {
      "op": "PUSH2",
      "value": "0xA2C"
    },
    "2599": {
      "op": "JUMPI"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2602": {
      "op": "DUP1"
    },
    "2603": {
      "op": "REVERT"
    },
    "2604": {
      "op": "JUMPDEST"
    },
    "2605": {
      "op": "PUSH2",
      "value": "0xA35"
    },
    "2608": {
      "op": "DUP3"
    },
    "2609": {
      "op": "PUSH2",
      "value": "0x903"
    },
    "2612": {
      "jump": "i",
      "op": "JUMP"
    },
    "2613": {
      "op": "JUMPDEST"
    },
    "2614": {
      "op": "SWAP4"
    },
    "2615": {
      "op": "SWAP3"
    },
    "2616": {
      "op": "POP"
    },
    "2617": {
      "op": "POP"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "jump": "o",
      "op": "JUMP"
    },
    "2620": {
      "op": "JUMPDEST"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2625": {
      "op": "DUP3"
    },
    "2626": {
      "op": "DUP5"
    },
    "2627": {
      "op": "SUB"
    },
    "2628": {
      "op": "SLT"
    },
    "2629": {
      "op": "ISZERO"
    },
    "2630": {
      "op": "PUSH2",
      "value": "0xA4E"
    },
    "2633": {
      "op": "JUMPI"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2636": {
      "op": "DUP1"
    },
    "2637": {
      "op": "REVERT"
    },
    "2638": {
      "op": "JUMPDEST"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2641": {
      "op": "MLOAD"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2644": {
      "op": "DUP2"
    },
    "2645": {
      "op": "ADD"
    },
    "2646": {
      "op": "DUP2"
    },
    "2647": {
      "op": "DUP2"
    },
    "2648": {
      "op": "LT"
    },
    "2649": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2658": {
      "op": "DUP3"
    },
    "2659": {
      "op": "GT"
    },
    "2660": {
      "op": "OR"
    },
    "2661": {
      "op": "ISZERO"
    },
    "2662": {
      "op": "PUSH2",
      "value": "0xA7F"
    },
    "2665": {
      "op": "JUMPI"
    },
    "2666": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2673": {
      "op": "SHL"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2676": {
      "op": "MSTORE"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2681": {
      "op": "MSTORE"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2686": {
      "op": "REVERT"
    },
    "2687": {
      "op": "JUMPDEST"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "DUP3"
    },
    "2692": {
      "op": "CALLDATALOAD"
    },
    "2693": {
      "op": "DUP2"
    },
    "2694": {
      "op": "MSTORE"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2697": {
      "op": "SWAP3"
    },
    "2698": {
      "op": "DUP4"
    },
    "2699": {
      "op": "ADD"
    },
    "2700": {
      "op": "CALLDATALOAD"
    },
    "2701": {
      "op": "SWAP3"
    },
    "2702": {
      "op": "DUP2"
    },
    "2703": {
      "op": "ADD"
    },
    "2704": {
      "op": "SWAP3"
    },
    "2705": {
      "op": "SWAP1"
    },
    "2706": {
      "op": "SWAP3"
    },
    "2707": {
      "op": "MSTORE"
    },
    "2708": {
      "op": "POP"
    },
    "2709": {
      "op": "SWAP2"
    },
    "2710": {
      "op": "SWAP1"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "jump": "o",
      "op": "JUMP"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2718": {
      "op": "DUP3"
    },
    "2719": {
      "op": "DUP5"
    },
    "2720": {
      "op": "SUB"
    },
    "2721": {
      "op": "SLT"
    },
    "2722": {
      "op": "ISZERO"
    },
    "2723": {
      "op": "PUSH2",
      "value": "0xAAB"
    },
    "2726": {
      "op": "JUMPI"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2729": {
      "op": "DUP1"
    },
    "2730": {
      "op": "REVERT"
    },
    "2731": {
      "op": "JUMPDEST"
    },
    "2732": {
      "op": "POP"
    },
    "2733": {
      "op": "CALLDATALOAD"
    },
    "2734": {
      "op": "SWAP2"
    },
    "2735": {
      "op": "SWAP1"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "jump": "o",
      "op": "JUMP"
    },
    "2738": {
      "op": "JUMPDEST"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2741": {
      "op": "DUP1"
    },
    "2742": {
      "op": "DUP3"
    },
    "2743": {
      "op": "MSTORE"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2746": {
      "op": "SWAP1"
    },
    "2747": {
      "op": "DUP3"
    },
    "2748": {
      "op": "ADD"
    },
    "2749": {
      "op": "MSTORE"
    },
    "2750": {
      "op": "PUSH18",
      "value": "0x14DBDD5B08191BD95CDB89DD08195E1A5CDD"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2774": {
      "op": "DUP3"
    },
    "2775": {
      "op": "ADD"
    },
    "2776": {
      "op": "MSTORE"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2779": {
      "op": "ADD"
    },
    "2780": {
      "op": "SWAP1"
    },
    "2781": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "21eec919b7a3737b4406f56e3fd64f887b031f5c",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface SBT_achievement_interface {\n    struct Achievement {\n        uint achievement_id;\n        uint achievement_type;\n        address issuer;\n        bool can_owner_be_changed;\n        address owner;\n        address verifier;\n        bool is_verified;\n        bytes32 data_hash;\n    }\n\n    function mint(Achievement memory _achievementData) external;\n\n    function burn(uint _achievementId) external;\n\n    function updateOwner(uint _achievementId, address _newOwner) external;\n\n    function changeAchievementVerification(uint _achievementId, bool _newStatus)\n        external;\n}\n\ncontract SBT {\n    modifier soulExists(uint _soul_id) {\n        require(addressOfSoul[_soul_id] != address(0), \"Soul doesn't exist\");\n        _;\n    }\n\n    modifier mintedNotClaimedModifier(uint _soul_id) {\n        require(\n            addressOfSoul[_soul_id] == address(0),\n            \"Soul is already claimed\"\n        );\n        require(mintedNotClaimed[_soul_id], \"Non minted soul\");\n        _;\n    }\n\n    modifier notMinted(uint _soul_id) {\n        require(addressOfSoul[_soul_id] == address(0), \"Soul exists\");\n        require(!mintedNotClaimed[_soul_id], \"Soul is minted, but not claimed\");\n        _;\n    }\n\n    struct PersonalDataHashed {\n        bytes32 github_hash;\n        bytes32 email_address_hash;\n    }\n\n    struct PersonalData {\n        string github_url;\n        string email_address;\n    }\n\n    struct Soul {\n        uint soul_id;\n        PersonalDataHashed hashedData;\n    }\n\n    address public operator;\n    address public kAchevementsContract =\n        0x8016619281F888d011c84d2E2a5348d9417c775B;\n\n    SBT_achievement_interface SBT_achievement;\n    event Mint(uint _soul_id);\n    event Claim(uint _soul_id);\n    event MintAchievement(uint _soul_id);\n    event Burn(uint _soul_id_to_burn);\n    event Update(uint _soul_id_to_update);\n    event SetAchevementsContractAddress(address _new_address);\n\n    constructor() {\n        SBT_achievement = SBT_achievement_interface(kAchevementsContract);\n        operator = msg.sender;\n    }\n\n    mapping(uint => address) private addressOfSoul; //soul_id => address of owner\n    mapping(address => uint) soulIdOfAddress; //address => soul_id\n    mapping(uint => Soul) private souls;\n    mapping(uint => bool) private mintedNotClaimed;\n\n    // Function that hashes content of user's hashedData. Must be rewritten if PersonalData fields change.\n    function hashPersonalData(PersonalData memory _data)\n        internal\n        pure\n        returns (PersonalDataHashed memory)\n    {\n        PersonalDataHashed memory hashedData;\n        hashedData.email_address_hash = keccak256(\n            abi.encodePacked(_data.email_address)\n        );\n        hashedData.github_hash = keccak256(abi.encodePacked(_data.github_url));\n        return hashedData;\n    }\n\n    function setAchevementsContractAddress(address _new_address) external {\n        require(\n            msg.sender == operator,\n            \"Only this contract can set this address\"\n        );\n        kAchevementsContract = _new_address;\n        emit SetAchevementsContractAddress(_new_address);\n    }\n\n    // Mints the SBT for given address and with given soul_id. Can be called only by this contract.\n    function mint(address _soul_address, uint _soul_id)\n        external\n        notMinted(_soul_id)\n    {\n        require(msg.sender == operator, \"Only operator can mint new souls\");\n        soulIdOfAddress[_soul_address] = _soul_id;\n        mintedNotClaimed[_soul_id] = true;\n        emit Mint(_soul_id);\n    }\n\n    // After minting and SBT, user must claim ownership of SBT by\n    function claim(PersonalDataHashed memory _soulData)\n        external\n        mintedNotClaimedModifier(soulIdOfAddress[msg.sender])\n    {\n        uint _soul_id = soulIdOfAddress[msg.sender];\n        delete mintedNotClaimed[_soul_id];\n        addressOfSoul[_soul_id] = msg.sender;\n        souls[_soul_id].soul_id = _soul_id;\n        souls[_soul_id].hashedData = _soulData;\n        emit Claim(_soul_id);\n    }\n\n    // After minting and SBT, user must claim ownership of SBT by\n    function mint_achievement(\n        SBT_achievement_interface.Achievement memory _achievementData\n    ) external soulExists(soulIdOfAddress[msg.sender]) {\n        SBT_achievement.mint(_achievementData);\n        emit MintAchievement(soulIdOfAddress[msg.sender]);\n    }\n\n    // Deletes SBT of msg.sender from storage.\n    function burn() external soulExists(soulIdOfAddress[msg.sender]) {\n        uint _soul_id_to_burn = soulIdOfAddress[msg.sender];\n        delete souls[_soul_id_to_burn];\n        delete soulIdOfAddress[msg.sender];\n        delete addressOfSoul[_soul_id_to_burn];\n        emit Burn(_soul_id_to_burn);\n    }\n\n    // Returns true, if there is an SBT for given address.\n    function hasSoul(address _soul) external view returns (bool) {\n        return soulIdOfAddress[_soul] != 0;\n    }\n\n    // Returns SBT of given address, if there is one; otherwise throws an error.\n    function getSoul(address _soul) external view returns (Soul memory) {\n        require(soulIdOfAddress[_soul] != 0, \"Soul doesn't exist\");\n        return souls[soulIdOfAddress[_soul]];\n    }\n\n    // Returns owner of given '_soul_id', if there is one; otherwise returns NULL-address.\n    function getOwner(uint _soul_id) external view returns (address) {\n        require(\n            msg.sender == operator,\n            \"Only this contract can view this hashed data\"\n        );\n        return addressOfSoul[_soul_id];\n    }\n\n    // Allows user to verify, that their data stored in our app is it's own and doesn't change.\n    function verifyDataCorrectness()\n        external\n        view\n        returns (PersonalDataHashed memory)\n    {\n        return souls[soulIdOfAddress[msg.sender]].hashedData;\n    }\n}\n",
  "sourceMap": "643:5166:0:-:0;;;1572:88;;;-1:-1:-1;;;;;;1572:88:0;1618:42;1572:88;;;1965:127;;;;;;;;;-1:-1:-1;2033:20:0;;1989:15;:65;;-1:-1:-1;;;;;;1989:65:0;;;-1:-1:-1;;;;;2033:20:0;;;1989:65;;;;;;2033:20;2064:21;;;;;2075:10;2064:21;;;643:5166;;;;;;",
  "sourcePath": "contracts/sbt.sol",
  "type": "contract"
}