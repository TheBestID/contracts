{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id_to_burn",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id_to_update",
          "type": "uint256"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "github_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "email_address_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SBT.PersonalDataHashed",
          "name": "_soulData",
          "type": "tuple"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "getSoul",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "soul_id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "github_hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "email_address_hash",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct SBT.PersonalDataHashed",
              "name": "hashedData",
              "type": "tuple"
            }
          ],
          "internalType": "struct SBT.Soul",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "hasSoul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "github_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "email_address_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SBT.PersonalDataHashed",
          "name": "_newSoulData",
          "type": "tuple"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "github_url",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email_address",
              "type": "string"
            }
          ],
          "internalType": "struct SBT.PersonalData",
          "name": "_dataToVerify",
          "type": "tuple"
        }
      ],
      "name": "verifyDataCorrectness",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/sbt.sol"
  },
  "ast": {
    "absolutePath": "contracts/sbt.sol",
    "exportedSymbols": {
      "SBT": [
        424
      ]
    },
    "id": 425,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SBT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 424,
        "linearizedBaseContracts": [
          424
        ],
        "name": "SBT",
        "nameLocation": "104:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "149:92:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 6,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "167:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 8,
                          "indexExpression": {
                            "id": 7,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "181:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "167:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "202:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "194:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "194:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "194:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "167:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20736f756c20657869737473",
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "206:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0fa7e1c0630e9d3078aa7dbf80a562e7a7f758270d2544453d297ecd58a90b1",
                          "typeString": "literal_string \"No soul exists\""
                        },
                        "value": "No soul exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0fa7e1c0630e9d3078aa7dbf80a562e7a7f758270d2544453d297ecd58a90b1",
                          "typeString": "literal_string \"No soul exists\""
                        }
                      ],
                      "id": 5,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "159:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "159:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "159:64:0"
                },
                {
                  "id": 17,
                  "nodeType": "PlaceholderStatement",
                  "src": "233:1:0"
                }
              ]
            },
            "id": 19,
            "name": "soulExists",
            "nameLocation": "123:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "139:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "134:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "133:15:0"
            },
            "src": "114:127:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "288:155:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 24,
                          "name": "minted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "306:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 26,
                        "indexExpression": {
                          "id": 25,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "313:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "306:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e206d696e74656420736f756c",
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "324:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65c2c533625d1749fb6bbe85fb96e791d2703d53c2542b484e969e587ca0b05b",
                          "typeString": "literal_string \"Non minted soul\""
                        },
                        "value": "Non minted soul"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65c2c533625d1749fb6bbe85fb96e791d2703d53c2542b484e969e587ca0b05b",
                          "typeString": "literal_string \"Non minted soul\""
                        }
                      ],
                      "id": 23,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "298:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "298:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "298:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 31,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "360:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 33,
                          "indexExpression": {
                            "id": 32,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "374:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "360:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "395:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "387:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "387:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "387:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "360:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20697320616c726561647920636c61696d6564",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "399:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d39c9e6cb452b6bbdf84404464d4ec4366033e704f753c984cc7a9fee4e24c9",
                          "typeString": "literal_string \"Soul is already claimed\""
                        },
                        "value": "Soul is already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d39c9e6cb452b6bbdf84404464d4ec4366033e704f753c984cc7a9fee4e24c9",
                          "typeString": "literal_string \"Soul is already claimed\""
                        }
                      ],
                      "id": 30,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "352:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "352:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "352:73:0"
                },
                {
                  "id": 42,
                  "nodeType": "PlaceholderStatement",
                  "src": "435:1:0"
                }
              ]
            },
            "id": 44,
            "name": "mintedNotClaimed",
            "nameLocation": "256:16:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "278:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "273:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "272:15:0"
            },
            "src": "247:196:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "489:160:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 49,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "507:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 51,
                          "indexExpression": {
                            "id": 50,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "521:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "507:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "542:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "534:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 52,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "534:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "534:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "507:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20657869737473",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "546:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5712a0b6990d8393f8bdfbec613fb6b339845140e0b59a8a22fe68d059fef309",
                          "typeString": "literal_string \"Soul exists\""
                        },
                        "value": "Soul exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5712a0b6990d8393f8bdfbec613fb6b339845140e0b59a8a22fe68d059fef309",
                          "typeString": "literal_string \"Soul exists\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "499:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "499:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "499:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "578:17:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 61,
                            "name": "minted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "579:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 63,
                          "indexExpression": {
                            "id": 62,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "586:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "579:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "597:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48abde2d233cd5cc62bc8080455522b9ff216703e948a24d5acfb7583dcef108",
                          "typeString": "literal_string \"Soul is minted, but not claimed\""
                        },
                        "value": "Soul is minted, but not claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48abde2d233cd5cc62bc8080455522b9ff216703e948a24d5acfb7583dcef108",
                          "typeString": "literal_string \"Soul is minted, but not claimed\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "570:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "570:61:0"
                },
                {
                  "id": 68,
                  "nodeType": "PlaceholderStatement",
                  "src": "641:1:0"
                }
              ]
            },
            "id": 70,
            "name": "soulDoesntExist",
            "nameLocation": "458:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "479:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "474:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "473:15:0"
            },
            "src": "449:200:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "SBT.PersonalDataHashed",
            "id": 75,
            "members": [
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "github_hash",
                "nameLocation": "699:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 75,
                "src": "691:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 71,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "email_address_hash",
                "nameLocation": "728:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 75,
                "src": "720:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 73,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PersonalDataHashed",
            "nameLocation": "662:18:0",
            "nodeType": "StructDefinition",
            "scope": 424,
            "src": "655:98:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SBT.PersonalData",
            "id": 80,
            "members": [
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "github_url",
                "nameLocation": "796:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 80,
                "src": "789:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 76,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "789:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79,
                "mutability": "mutable",
                "name": "email_address",
                "nameLocation": "823:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 80,
                "src": "816:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 78,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "816:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PersonalData",
            "nameLocation": "766:12:0",
            "nodeType": "StructDefinition",
            "scope": 424,
            "src": "759:84:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SBT.Soul",
            "id": 86,
            "members": [
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "soul_id",
                "nameLocation": "876:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 86,
                "src": "871:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "871:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "hashedData",
                "nameLocation": "912:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 86,
                "src": "893:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage_ptr",
                  "typeString": "struct SBT.PersonalDataHashed"
                },
                "typeName": {
                  "id": 84,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 83,
                    "name": "PersonalDataHashed",
                    "nameLocations": [
                      "893:18:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 75,
                    "src": "893:18:0"
                  },
                  "referencedDeclaration": 75,
                  "src": "893:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Soul",
            "nameLocation": "856:4:0",
            "nodeType": "StructDefinition",
            "scope": 424,
            "src": "849:80:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "570ca735",
            "id": 88,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "950:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 424,
            "src": "935:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 87,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "935:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a84665",
            "id": 92,
            "name": "Mint",
            "nameLocation": "970:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "980:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "975:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:15:0"
            },
            "src": "964:26:0"
          },
          {
            "anonymous": false,
            "eventSelector": "7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f7",
            "id": 96,
            "name": "Claim",
            "nameLocation": "1001:5:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1012:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1007:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1006:15:0"
            },
            "src": "995:27:0"
          },
          {
            "anonymous": false,
            "eventSelector": "b90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb",
            "id": 100,
            "name": "Burn",
            "nameLocation": "1033:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id_to_burn",
                  "nameLocation": "1043:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1038:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:23:0"
            },
            "src": "1027:34:0"
          },
          {
            "anonymous": false,
            "eventSelector": "164f7b2ab803097dab5e39f06d2e4f3c3ddc5d4171abbdcc3e76443b8359c7f5",
            "id": 104,
            "name": "Update",
            "nameLocation": "1072:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id_to_update",
                  "nameLocation": "1084:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "1079:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1078:25:0"
            },
            "src": "1066:38:0"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1124:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "1134:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 108,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1145:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1149:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1145:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1134:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:21:0"
                }
              ]
            },
            "id": 113,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:2:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:0"
            },
            "scope": 424,
            "src": "1110:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 117,
            "mutability": "mutable",
            "name": "addressOfSoul",
            "nameLocation": "1201:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 424,
            "src": "1168:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 116,
              "keyType": {
                "id": 114,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1176:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1168:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 115,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1184:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 121,
            "mutability": "mutable",
            "name": "soulIdOfAddress",
            "nameLocation": "1275:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 424,
            "src": "1250:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 120,
              "keyType": {
                "id": 118,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1258:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1250:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 119,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1269:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 126,
            "mutability": "mutable",
            "name": "souls",
            "nameLocation": "1347:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 424,
            "src": "1317:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$86_storage_$",
              "typeString": "mapping(uint256 => struct SBT.Soul)"
            },
            "typeName": {
              "id": 125,
              "keyType": {
                "id": 122,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1325:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1317:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$86_storage_$",
                "typeString": "mapping(uint256 => struct SBT.Soul)"
              },
              "valueType": {
                "id": 124,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 123,
                  "name": "Soul",
                  "nameLocations": [
                    "1333:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86,
                  "src": "1333:4:0"
                },
                "referencedDeclaration": 86,
                "src": "1333:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Soul_$86_storage_ptr",
                  "typeString": "struct SBT.Soul"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 130,
            "mutability": "mutable",
            "name": "minted",
            "nameLocation": "1388:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 424,
            "src": "1358:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 129,
              "keyType": {
                "id": 127,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1366:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1358:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 128,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1374:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "1639:294:0",
              "statements": [
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "hashedData",
                      "nameLocation": "1675:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "1649:36:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 140,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 139,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "1649:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 75,
                          "src": "1649:18:0"
                        },
                        "referencedDeclaration": 75,
                        "src": "1649:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1649:36:0"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 143,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1695:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1706:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "1695:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 149,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "1767:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$80_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1773:13:0",
                              "memberName": "email_address",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 79,
                              "src": "1767:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 147,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1750:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1754:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1750:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1750:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 146,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1727:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1727:70:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1695:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:102:0"
                },
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 155,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1807:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1818:11:0",
                      "memberName": "github_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "1807:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 161,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "1872:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$80_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1878:10:0",
                              "memberName": "github_url",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 77,
                              "src": "1872:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 159,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1855:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1859:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1855:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 158,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1832:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1832:67:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1807:92:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:92:0"
                },
                {
                  "expression": {
                    "id": 167,
                    "name": "hashedData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 141,
                    "src": "1916:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                      "typeString": "struct SBT.PersonalDataHashed memory"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 168,
                  "nodeType": "Return",
                  "src": "1909:17:0"
                }
              ]
            },
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashPersonalData",
            "nameLocation": "1517:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1554:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1534:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalData_$80_memory_ptr",
                    "typeString": "struct SBT.PersonalData"
                  },
                  "typeName": {
                    "id": 132,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 131,
                      "name": "PersonalData",
                      "nameLocations": [
                        "1534:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80,
                      "src": "1534:12:0"
                    },
                    "referencedDeclaration": 80,
                    "src": "1534:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalData_$80_storage_ptr",
                      "typeString": "struct SBT.PersonalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1533:27:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1608:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 136,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 135,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "1608:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 75,
                      "src": "1608:18:0"
                    },
                    "referencedDeclaration": 75,
                    "src": "1608:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1607:27:0"
            },
            "scope": 424,
            "src": "1508:425:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "2146:197:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 181,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2164:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2168:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2164:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 183,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "2178:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2164:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c73",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2188:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be1622ce1e42e9a17530ea674400f0d6d3e7ed52ff5b74a970e36309147e85d9",
                          "typeString": "literal_string \"Only operator can mint new souls\""
                        },
                        "value": "Only operator can mint new souls"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be1622ce1e42e9a17530ea674400f0d6d3e7ed52ff5b74a970e36309147e85d9",
                          "typeString": "literal_string \"Only operator can mint new souls\""
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2156:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:67:0"
                },
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 188,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2233:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "id": 189,
                        "name": "_soul_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2249:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2233:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 191,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "2266:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2233:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:41:0"
                },
                {
                  "expression": {
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 194,
                        "name": "minted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "2284:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 196,
                      "indexExpression": {
                        "id": 195,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "2291:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2284:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2303:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2284:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 201,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "2327:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 200,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2322:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2322:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "EmitStatement",
                  "src": "2317:19:0"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 177,
                    "name": "_soul_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 174,
                    "src": "2132:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 178,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 176,
                  "name": "soulDoesntExist",
                  "nameLocations": [
                    "2116:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70,
                  "src": "2116:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2116:25:0"
              }
            ],
            "name": "mint",
            "nameLocation": "2048:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "_soul_address",
                  "nameLocation": "2061:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "2053:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "2081:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 205,
                  "src": "2076:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2052:38:0"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2146:0:0"
            },
            "scope": 424,
            "src": "2039:304:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "2476:228:0",
              "statements": [
                {
                  "assignments": [
                    218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 218,
                      "mutability": "mutable",
                      "name": "_soul_id",
                      "nameLocation": "2491:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 249,
                      "src": "2486:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 217,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2486:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "initialValue": {
                    "baseExpression": {
                      "id": 219,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "2502:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 222,
                    "indexExpression": {
                      "expression": {
                        "id": 220,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2518:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2522:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2518:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2502:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2486:43:0"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 224,
                        "name": "addressOfSoul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "2539:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "id": 225,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "2553:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2539:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 227,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2565:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2569:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2565:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2539:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2539:36:0"
                },
                {
                  "expression": {
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 231,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "2585:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$86_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "id": 232,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 218,
                          "src": "2591:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2585:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$86_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2601:7:0",
                      "memberName": "soul_id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "2585:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 235,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "2611:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2585:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:34:0"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 238,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "2629:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$86_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 240,
                        "indexExpression": {
                          "id": 239,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 218,
                          "src": "2635:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2629:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$86_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2645:10:0",
                      "memberName": "hashedData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "2629:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage",
                        "typeString": "struct SBT.PersonalDataHashed storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 242,
                      "name": "_soulData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2658:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed memory"
                      }
                    },
                    "src": "2629:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2629:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 246,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "2688:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 245,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "2682:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "EmitStatement",
                  "src": "2677:20:0"
                }
              ]
            },
            "functionSelector": "886fc93f",
            "id": 250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 211,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "2443:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 214,
                    "indexExpression": {
                      "expression": {
                        "id": 212,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2459:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2463:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2459:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2443:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 215,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 210,
                  "name": "mintedNotClaimed",
                  "nameLocations": [
                    "2426:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44,
                  "src": "2426:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2426:45:0"
              }
            ],
            "name": "claim",
            "nameLocation": "2358:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_soulData",
                  "nameLocation": "2390:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "2364:35:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 207,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 206,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "2364:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 75,
                      "src": "2364:18:0"
                    },
                    "referencedDeclaration": 75,
                    "src": "2364:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2363:37:0"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2476:0:0"
            },
            "scope": 424,
            "src": "2349:355:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "2782:299:0",
              "statements": [
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "_soul_id_to_burn",
                      "nameLocation": "2797:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 287,
                      "src": "2792:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2792:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 259,
                  "initialValue": {
                    "baseExpression": {
                      "id": 255,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "2816:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 258,
                    "indexExpression": {
                      "expression": {
                        "id": 256,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2832:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2836:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2832:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2816:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2792:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 261,
                          "name": "_soul_id_to_burn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "2861:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2881:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2861:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20646f65736e2774206578697374",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2884:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        },
                        "value": "Soul doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2853:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2853:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "2853:52:0"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2915:30:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 267,
                        "name": "souls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "2922:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$86_storage_$",
                          "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                        }
                      },
                      "id": 269,
                      "indexExpression": {
                        "id": 268,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "2928:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2922:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Soul_$86_storage",
                        "typeString": "struct SBT.Soul storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "2915:30:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2955:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 272,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2962:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 275,
                      "indexExpression": {
                        "expression": {
                          "id": 273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2978:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2982:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2978:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2962:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2955:34:0"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2999:38:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 278,
                        "name": "addressOfSoul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "3006:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "id": 279,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3020:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3006:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "2999:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 284,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3057:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 283,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "3052:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3052:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "EmitStatement",
                  "src": "3047:27:0"
                }
              ]
            },
            "functionSelector": "44df8e70",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2766:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2770:2:0"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2782:0:0"
            },
            "scope": 424,
            "src": "2757:324:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3292:127:0",
              "statements": [
                {
                  "expression": {
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 300,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "3302:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$86_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 305,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 301,
                            "name": "soulIdOfAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "3308:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 304,
                          "indexExpression": {
                            "expression": {
                              "id": 302,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3324:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3328:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3324:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3308:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3302:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$86_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3337:10:0",
                      "memberName": "hashedData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "3302:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage",
                        "typeString": "struct SBT.PersonalDataHashed storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 307,
                      "name": "_newSoulData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "3350:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed memory"
                      }
                    },
                    "src": "3302:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "3302:60:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 311,
                          "name": "soulIdOfAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "3384:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 314,
                        "indexExpression": {
                          "expression": {
                            "id": 312,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3400:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3404:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3400:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3384:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 310,
                      "name": "Update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "3377:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3377:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "EmitStatement",
                  "src": "3372:40:0"
                }
              ]
            },
            "functionSelector": "4b5c4a19",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 294,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "3259:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 297,
                    "indexExpression": {
                      "expression": {
                        "id": 295,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3275:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3279:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3275:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3259:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 298,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 293,
                  "name": "soulExists",
                  "nameLocations": [
                    "3248:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "3248:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3248:39:0"
              }
            ],
            "name": "update",
            "nameLocation": "3176:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "_newSoulData",
                  "nameLocation": "3209:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3183:38:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 290,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 289,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "3183:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 75,
                      "src": "3183:18:0"
                    },
                    "referencedDeclaration": 75,
                    "src": "3183:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3182:40:0"
            },
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3292:0:0"
            },
            "scope": 424,
            "src": "3167:252:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "3545:51:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 325,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "3562:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 327,
                      "indexExpression": {
                        "id": 326,
                        "name": "_soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3578:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3562:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3588:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3562:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 324,
                  "id": 330,
                  "nodeType": "Return",
                  "src": "3555:34:0"
                }
              ]
            },
            "functionSelector": "bdd75202",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasSoul",
            "nameLocation": "3493:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "3509:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "3501:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3501:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3500:15:0"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "3539:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3538:6:0"
            },
            "scope": 424,
            "src": "3484:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "3751:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 341,
                            "name": "soulIdOfAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "3769:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 343,
                          "indexExpression": {
                            "id": 342,
                            "name": "_soul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "3785:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3769:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3795:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3769:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20646f65736e2774206578697374",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3798:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        },
                        "value": "Soul doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3761:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3761:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:58:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 349,
                      "name": "souls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "3836:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$86_storage_$",
                        "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                      }
                    },
                    "id": 353,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 350,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "3842:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 352,
                      "indexExpression": {
                        "id": 351,
                        "name": "_soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "3858:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3842:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3836:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Soul_$86_storage",
                      "typeString": "struct SBT.Soul storage ref"
                    }
                  },
                  "functionReturnParameters": 339,
                  "id": 354,
                  "nodeType": "Return",
                  "src": "3829:36:0"
                }
              ]
            },
            "functionSelector": "66cfe97f",
            "id": 356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSoul",
            "nameLocation": "3692:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "3708:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "3700:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3699:15:0"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "3738:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Soul_$86_memory_ptr",
                    "typeString": "struct SBT.Soul"
                  },
                  "typeName": {
                    "id": 337,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 336,
                      "name": "Soul",
                      "nameLocations": [
                        "3738:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86,
                      "src": "3738:4:0"
                    },
                    "referencedDeclaration": 86,
                    "src": "3738:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Soul_$86_storage_ptr",
                      "typeString": "struct SBT.Soul"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3737:13:0"
            },
            "scope": 424,
            "src": "3683:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "4034:170:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 364,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4065:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4069:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4065:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 366,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "4079:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4065:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468697320636f6e74726163742063616e20766965772074686973206861736865642064617461",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4101:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27b7e863d546f07584cece8c5abbb10f897c1d51b8b6e9abb975f221a2867c6e",
                          "typeString": "literal_string \"Only this contract can view this hashed data\""
                        },
                        "value": "Only this contract can view this hashed data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27b7e863d546f07584cece8c5abbb10f897c1d51b8b6e9abb975f221a2867c6e",
                          "typeString": "literal_string \"Only this contract can view this hashed data\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4044:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4044:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "4044:113:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 371,
                      "name": "addressOfSoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "4174:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 373,
                    "indexExpression": {
                      "id": 372,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "4188:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4174:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 362,
                  "id": 374,
                  "nodeType": "Return",
                  "src": "4167:30:0"
                }
              ]
            },
            "functionSelector": "c41a360a",
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nameLocation": "3978:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "3992:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "3987:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3987:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3986:15:0"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "4025:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4025:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4024:9:0"
            },
            "scope": 424,
            "src": "3969:235:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "4429:585:0",
              "statements": [
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "hashedDataFromStorage",
                      "nameLocation": "4465:21:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 422,
                      "src": "4439:47:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 385,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 384,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "4439:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 75,
                          "src": "4439:18:0"
                        },
                        "referencedDeclaration": 75,
                        "src": "4439:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 387,
                        "name": "souls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "4489:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$86_storage_$",
                          "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                        }
                      },
                      "id": 392,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 388,
                          "name": "soulIdOfAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "4508:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 391,
                        "indexExpression": {
                          "expression": {
                            "id": 389,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4524:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4528:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4524:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4508:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4489:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Soul_$86_storage",
                        "typeString": "struct SBT.Soul storage ref"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4546:10:0",
                    "memberName": "hashedData",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 85,
                    "src": "4489:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4439:117:0"
                },
                {
                  "assignments": [
                    397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 397,
                      "mutability": "mutable",
                      "name": "hashedDataToVerify",
                      "nameLocation": "4592:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 422,
                      "src": "4566:44:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 396,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 395,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "4566:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 75,
                          "src": "4566:18:0"
                        },
                        "referencedDeclaration": 75,
                        "src": "4566:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 401,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 399,
                        "name": "_dataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "4643:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalData_$80_memory_ptr",
                          "typeString": "struct SBT.PersonalData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PersonalData_$80_memory_ptr",
                          "typeString": "struct SBT.PersonalData memory"
                        }
                      ],
                      "id": 398,
                      "name": "hashPersonalData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4613:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_PersonalData_$80_memory_ptr_$returns$_t_struct$_PersonalDataHashed_$75_memory_ptr_$",
                        "typeString": "function (struct SBT.PersonalData memory) pure returns (struct SBT.PersonalDataHashed memory)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4613:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                      "typeString": "struct SBT.PersonalDataHashed memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4566:100:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 402,
                        "name": "hashedDataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "4693:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4712:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "4693:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 404,
                        "name": "hashedDataFromStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "4746:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4768:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "4746:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4693:93:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 410,
                  "nodeType": "IfStatement",
                  "src": "4676:158:0",
                  "trueBody": {
                    "id": 409,
                    "nodeType": "Block",
                    "src": "4797:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4818:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 383,
                        "id": 408,
                        "nodeType": "Return",
                        "src": "4811:12:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 411,
                        "name": "hashedDataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "4860:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4879:11:0",
                      "memberName": "github_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "4860:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 413,
                        "name": "hashedDataFromStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "4906:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$75_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4928:11:0",
                      "memberName": "github_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "4906:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4860:79:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 419,
                  "nodeType": "IfStatement",
                  "src": "4843:144:0",
                  "trueBody": {
                    "id": 418,
                    "nodeType": "Block",
                    "src": "4950:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4971:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 383,
                        "id": 417,
                        "nodeType": "Return",
                        "src": "4964:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5003:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 383,
                  "id": 421,
                  "nodeType": "Return",
                  "src": "4996:11:0"
                }
              ]
            },
            "functionSelector": "08215c54",
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyDataCorrectness",
            "nameLocation": "4315:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_dataToVerify",
                  "nameLocation": "4357:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "4337:33:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalData_$80_memory_ptr",
                    "typeString": "struct SBT.PersonalData"
                  },
                  "typeName": {
                    "id": 378,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 377,
                      "name": "PersonalData",
                      "nameLocations": [
                        "4337:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80,
                      "src": "4337:12:0"
                    },
                    "referencedDeclaration": 80,
                    "src": "4337:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalData_$80_storage_ptr",
                      "typeString": "struct SBT.PersonalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4336:35:0"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "4419:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4419:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4418:6:0"
            },
            "scope": 424,
            "src": "4306:708:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 425,
        "src": "95:4921:0",
        "usedErrors": []
      }
    ],
    "src": "32:4985:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610af3806100326000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063570ca73511610066578063570ca735146100f057806366cfe97f1461011b578063886fc93f14610152578063bdd7520214610165578063c41a360a1461019057600080fd5b806308215c541461009857806340c10f19146100c057806344df8e70146100d55780634b5c4a19146100dd575b600080fd5b6100ab6100a6366004610917565b6101a3565b60405190151581526020015b60405180910390f35b6100d36100ce3660046109da565b610218565b005b6100d3610395565b6100d36100eb366004610a04565b610464565b600054610103906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b61012e610129366004610a53565b610532565b604080518251815260209283015180518483015290920151908201526060016100b7565b6100d3610160366004610a04565b6105e6565b6100ab610173366004610a53565b6001600160a01b0316600090815260026020526040902054151590565b61010361019e366004610a75565b610729565b336000908152600260208181526040808420548452600382528084208151808301909252600181015482529092015490820152816101e0846107b5565b905081602001518160200151146101fb575060009392505050565b815181511461020e575060009392505050565b5060019392505050565b60008181526001602052604090205481906001600160a01b0316156102725760405162461bcd60e51b815260206004820152600b60248201526a536f756c2065786973747360a81b60448201526064015b60405180910390fd5b60008181526004602052604090205460ff16156102d15760405162461bcd60e51b815260206004820152601f60248201527f536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564006044820152606401610269565b6000546001600160a01b0316331461032b5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c736044820152606401610269565b6001600160a01b03831660009081526002602090815260408083208590558483526004825291829020805460ff1916600117905590518381527f07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a8466591015b60405180910390a1505050565b33600090815260026020526040812054908190036103ea5760405162461bcd60e51b815260206004820152601260248201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b6044820152606401610269565b60008181526003602090815260408083208381556001808201859055600291820185905533855290835281842084905584845282529182902080546001600160a01b031916905590518281527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb910160405180910390a150565b336000908152600260209081526040808320548084526001909252909120546001600160a01b03166104c95760405162461bcd60e51b815260206004820152600e60248201526d4e6f20736f756c2065786973747360901b6044820152606401610269565b336000818152600260208181526040808420805485526003835281852088516001820155888401519085015594909352908152915490519081527f164f7b2ab803097dab5e39f06d2e4f3c3ddc5d4171abbdcc3e76443b8359c7f5910160405180910390a15050565b61053a61083a565b6001600160a01b03821660009081526002602052604081205490036105965760405162461bcd60e51b815260206004820152601260248201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b6044820152606401610269565b506001600160a01b03166000908152600260208181526040808420548452600382529283902083518085018552815481528451808601909552600182015485529201548382015281019190915290565b3360009081526002602090815260408083205480845260049092529091205460ff166106465760405162461bcd60e51b815260206004820152600f60248201526e139bdb881b5a5b9d1959081cdbdd5b608a1b6044820152606401610269565b6000818152600160205260409020546001600160a01b0316156106ab5760405162461bcd60e51b815260206004820152601760248201527f536f756c20697320616c726561647920636c61696d65640000000000000000006044820152606401610269565b33600081815260026020818152604080842054808552600180845282862080546001600160a01b03191690971790965560038352938190208481558751958101959095558682015194909201939093555181815290917f7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f79101610388565b600080546001600160a01b031633146107995760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468697320636f6e74726163742063616e2076696577207468697360448201526b20686173686564206461746160a01b6064820152608401610269565b506000908152600160205260409020546001600160a01b031690565b604080518082019091526000808252602082015260408051808201909152600080825260208201526020808401516040516107f09201610a8e565b60408051601f198184030181529181528151602092830120838301528451905161081a9201610a8e565b60408051601f198184030181529190528051602090910120815292915050565b60405180604001604052806000815260200161086f604051806040016040528060008019168152602001600080191681525090565b905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261089b57600080fd5b813567ffffffffffffffff808211156108b6576108b6610874565b604051601f8301601f19908116603f011681019082821181831017156108de576108de610874565b816040528381528660208588010111156108f757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561092957600080fd5b813567ffffffffffffffff8082111561094157600080fd5b908301906040828603121561095557600080fd5b60405160408101818110838211171561097057610970610874565b60405282358281111561098257600080fd5b61098e8782860161088a565b8252506020830135828111156109a357600080fd5b6109af8782860161088a565b60208301525095945050505050565b80356001600160a01b03811681146109d557600080fd5b919050565b600080604083850312156109ed57600080fd5b6109f6836109be565b946020939093013593505050565b600060408284031215610a1657600080fd5b6040516040810181811067ffffffffffffffff82111715610a3957610a39610874565b604052823581526020928301359281019290925250919050565b600060208284031215610a6557600080fd5b610a6e826109be565b9392505050565b600060208284031215610a8757600080fd5b5035919050565b6000825160005b81811015610aaf5760208186018101518583015201610a95565b50600092019182525091905056fea2646970667358221220b46ad84ac5bb54d0edf3f29fe7e5707b797fc2df0a9c747848eb4ba6c74186be64736f6c63430008110033",
  "bytecodeSha1": "02faf3366e9a7126418bf23c2c84fabd641bca2d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "SBT",
  "coverageMap": {
    "branches": {
      "0": {
        "SBT.burn": {
          "28": [
            2861,
            2882,
            true
          ]
        },
        "SBT.claim": {
          "30": [
            306,
            322,
            true
          ]
        },
        "SBT.getOwner": {
          "31": [
            4065,
            4087,
            true
          ]
        },
        "SBT.getSoul": {
          "29": [
            3769,
            3796,
            true
          ]
        },
        "SBT.mint": {
          "27": [
            2164,
            2186,
            true
          ]
        },
        "SBT.verifyDataCorrectness": {
          "25": [
            4693,
            4786,
            false
          ],
          "26": [
            4860,
            4939,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SBT.burn": {
          "8": [
            2853,
            2905
          ],
          "9": [
            2915,
            2945
          ],
          "10": [
            2955,
            2989
          ],
          "11": [
            2999,
            3037
          ],
          "12": [
            3047,
            3074
          ]
        },
        "SBT.claim": {
          "17": [
            2539,
            2575
          ],
          "18": [
            2585,
            2619
          ],
          "19": [
            2629,
            2667
          ],
          "20": [
            2677,
            2697
          ]
        },
        "SBT.getOwner": {
          "21": [
            4044,
            4157
          ],
          "22": [
            4167,
            4197
          ]
        },
        "SBT.getSoul": {
          "15": [
            3761,
            3819
          ],
          "16": [
            3829,
            3865
          ]
        },
        "SBT.hasSoul": {
          "0": [
            3555,
            3589
          ]
        },
        "SBT.hashPersonalData": {
          "23": [
            1695,
            1797
          ],
          "24": [
            1807,
            1899
          ]
        },
        "SBT.mint": {
          "4": [
            2156,
            2223
          ],
          "5": [
            2233,
            2274
          ],
          "6": [
            2284,
            2307
          ],
          "7": [
            2317,
            2336
          ]
        },
        "SBT.update": {
          "13": [
            3302,
            3362
          ],
          "14": [
            3372,
            3412
          ]
        },
        "SBT.verifyDataCorrectness": {
          "1": [
            4811,
            4823
          ],
          "2": [
            4964,
            4976
          ],
          "3": [
            4996,
            5007
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063570ca73511610066578063570ca735146100f057806366cfe97f1461011b578063886fc93f14610152578063bdd7520214610165578063c41a360a1461019057600080fd5b806308215c541461009857806340c10f19146100c057806344df8e70146100d55780634b5c4a19146100dd575b600080fd5b6100ab6100a6366004610917565b6101a3565b60405190151581526020015b60405180910390f35b6100d36100ce3660046109da565b610218565b005b6100d3610395565b6100d36100eb366004610a04565b610464565b600054610103906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b61012e610129366004610a53565b610532565b604080518251815260209283015180518483015290920151908201526060016100b7565b6100d3610160366004610a04565b6105e6565b6100ab610173366004610a53565b6001600160a01b0316600090815260026020526040902054151590565b61010361019e366004610a75565b610729565b336000908152600260208181526040808420548452600382528084208151808301909252600181015482529092015490820152816101e0846107b5565b905081602001518160200151146101fb575060009392505050565b815181511461020e575060009392505050565b5060019392505050565b60008181526001602052604090205481906001600160a01b0316156102725760405162461bcd60e51b815260206004820152600b60248201526a536f756c2065786973747360a81b60448201526064015b60405180910390fd5b60008181526004602052604090205460ff16156102d15760405162461bcd60e51b815260206004820152601f60248201527f536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564006044820152606401610269565b6000546001600160a01b0316331461032b5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c736044820152606401610269565b6001600160a01b03831660009081526002602090815260408083208590558483526004825291829020805460ff1916600117905590518381527f07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a8466591015b60405180910390a1505050565b33600090815260026020526040812054908190036103ea5760405162461bcd60e51b815260206004820152601260248201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b6044820152606401610269565b60008181526003602090815260408083208381556001808201859055600291820185905533855290835281842084905584845282529182902080546001600160a01b031916905590518281527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb910160405180910390a150565b336000908152600260209081526040808320548084526001909252909120546001600160a01b03166104c95760405162461bcd60e51b815260206004820152600e60248201526d4e6f20736f756c2065786973747360901b6044820152606401610269565b336000818152600260208181526040808420805485526003835281852088516001820155888401519085015594909352908152915490519081527f164f7b2ab803097dab5e39f06d2e4f3c3ddc5d4171abbdcc3e76443b8359c7f5910160405180910390a15050565b61053a61083a565b6001600160a01b03821660009081526002602052604081205490036105965760405162461bcd60e51b815260206004820152601260248201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b6044820152606401610269565b506001600160a01b03166000908152600260208181526040808420548452600382529283902083518085018552815481528451808601909552600182015485529201548382015281019190915290565b3360009081526002602090815260408083205480845260049092529091205460ff166106465760405162461bcd60e51b815260206004820152600f60248201526e139bdb881b5a5b9d1959081cdbdd5b608a1b6044820152606401610269565b6000818152600160205260409020546001600160a01b0316156106ab5760405162461bcd60e51b815260206004820152601760248201527f536f756c20697320616c726561647920636c61696d65640000000000000000006044820152606401610269565b33600081815260026020818152604080842054808552600180845282862080546001600160a01b03191690971790965560038352938190208481558751958101959095558682015194909201939093555181815290917f7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f79101610388565b600080546001600160a01b031633146107995760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468697320636f6e74726163742063616e2076696577207468697360448201526b20686173686564206461746160a01b6064820152608401610269565b506000908152600160205260409020546001600160a01b031690565b604080518082019091526000808252602082015260408051808201909152600080825260208201526020808401516040516107f09201610a8e565b60408051601f198184030181529181528151602092830120838301528451905161081a9201610a8e565b60408051601f198184030181529190528051602090910120815292915050565b60405180604001604052806000815260200161086f604051806040016040528060008019168152602001600080191681525090565b905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261089b57600080fd5b813567ffffffffffffffff808211156108b6576108b6610874565b604051601f8301601f19908116603f011681019082821181831017156108de576108de610874565b816040528381528660208588010111156108f757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561092957600080fd5b813567ffffffffffffffff8082111561094157600080fd5b908301906040828603121561095557600080fd5b60405160408101818110838211171561097057610970610874565b60405282358281111561098257600080fd5b61098e8782860161088a565b8252506020830135828111156109a357600080fd5b6109af8782860161088a565b60208301525095945050505050565b80356001600160a01b03811681146109d557600080fd5b919050565b600080604083850312156109ed57600080fd5b6109f6836109be565b946020939093013593505050565b600060408284031215610a1657600080fd5b6040516040810181811067ffffffffffffffff82111715610a3957610a39610874565b604052823581526020928301359281019290925250919050565b600060208284031215610a6557600080fd5b610a6e826109be565b9392505050565b600060208284031215610a8757600080fd5b5035919050565b6000825160005b81811015610aaf5760208186018101518583015201610a95565b50600092019182525091905056fea2646970667358221220b46ad84ac5bb54d0edf3f29fe7e5707b797fc2df0a9c747848eb4ba6c74186be64736f6c63430008110033",
  "deployedSourceMap": "95:4921:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4306:708;;;;;;:::i;:::-;;:::i;:::-;;;1976:14:1;;1969:22;1951:41;;1939:2;1924:18;4306:708:0;;;;;;;;2039:304;;;;;;:::i;:::-;;:::i;:::-;;2757:324;;;:::i;3167:252::-;;;;;;:::i;:::-;;:::i;935:23::-;;;;;-1:-1:-1;;;;;935:23:0;;;;;;-1:-1:-1;;;;;3122:32:1;;;3104:51;;3092:2;3077:18;935:23:0;2958:203:1;3683:189:0;;;;;;:::i;:::-;;:::i;:::-;;;;3561:13:1;;3543:32;;3622:4;3610:17;;;3604:24;3666:19;;3644:20;;;3637:49;3728:23;;;3722:30;3702:18;;;3695:58;3531:2;3516:18;3683:189:0;3357:402:1;2349:355:0;;;;;;:::i;:::-;;:::i;3484:112::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3562:22:0;3539:4;3562:22;;;:15;:22;;;;;;:27;;;3484:112;3969:235;;;;;;:::i;:::-;;:::i;4306:708::-;4524:10;4419:4;4508:27;;;:15;:27;;;;;;;;;4489:56;;:5;:56;;;;;4439:117;;;;;;;;4489:67;;;4439:117;;;;;;;;;;;4419:4;4613:53;4643:13;4613:16;:53::i;:::-;4566:100;;4746:21;:40;;;4693:18;:37;;;:93;4676:158;;-1:-1:-1;4818:5:0;;4306:708;-1:-1:-1;;;4306:708:0:o;4676:158::-;4906:33;;4860:30;;:79;4843:144;;-1:-1:-1;4971:5:0;;4306:708;-1:-1:-1;;;4306:708:0:o;4843:144::-;-1:-1:-1;5003:4:0;;4306:708;-1:-1:-1;;;4306:708:0:o;2039:304::-;542:1;507:23;;;:13;:23;;;;;;2132:8;;-1:-1:-1;;;;;507:23:0;:37;499:61;;;;-1:-1:-1;;;499:61:0;;4151:2:1;499:61:0;;;4133:21:1;4190:2;4170:18;;;4163:30;-1:-1:-1;;;4209:18:1;;;4202:41;4260:18;;499:61:0;;;;;;;;;579:16;;;;:6;:16;;;;;;;;578:17;570:61;;;;-1:-1:-1;;;570:61:0;;4491:2:1;570:61:0;;;4473:21:1;4530:2;4510:18;;;4503:30;4569:33;4549:18;;;4542:61;4620:18;;570:61:0;4289:355:1;570:61:0;2178:8:::1;::::0;-1:-1:-1;;;;;2178:8:0::1;2164:10;:22;2156:67;;;::::0;-1:-1:-1;;;2156:67:0;;4851:2:1;2156:67:0::1;::::0;::::1;4833:21:1::0;;;4870:18;;;4863:30;4929:34;4909:18;;;4902:62;4981:18;;2156:67:0::1;4649:356:1::0;2156:67:0::1;-1:-1:-1::0;;;;;2233:30:0;::::1;;::::0;;;:15:::1;:30;::::0;;;;;;;:41;;;2284:16;;;:6:::1;:16:::0;;;;;;:23;;-1:-1:-1;;2284:23:0::1;2303:4;2284:23;::::0;;2322:14;;5156:25:1;;;2322:14:0::1;::::0;5129:18:1;2322:14:0::1;;;;;;;;2039:304:::0;;;:::o;2757:324::-;2832:10;2792:21;2816:27;;;:15;:27;;;;;;;2861:21;;;2853:52;;;;-1:-1:-1;;;2853:52:0;;5394:2:1;2853:52:0;;;5376:21:1;5433:2;5413:18;;;5406:30;-1:-1:-1;;;5452:18:1;;;5445:48;5510:18;;2853:52:0;5192:342:1;2853:52:0;2922:23;;;;:5;:23;;;;;;;;2915:30;;;;;;;;;;;;;;;;;2978:10;2962:27;;;;;;;;2955:34;;;3006:31;;;;;;;;;2999:38;;-1:-1:-1;;;;;;2999:38:0;;;3052:22;;5156:25:1;;;3052:22:0;;5129:18:1;3052:22:0;;;;;;;2782:299;2757:324::o;3167:252::-;3275:10;3259:27;;;;:15;:27;;;;;;;;;167:23;;;:13;:23;;;;;;;-1:-1:-1;;;;;167:23:0;159:64;;;;-1:-1:-1;;;159:64:0;;5741:2:1;159:64:0;;;5723:21:1;5780:2;5760:18;;;5753:30;-1:-1:-1;;;5799:18:1;;;5792:44;5853:18;;159:64:0;5539:338:1;159:64:0;3324:10:::1;3302:34;3308:27:::0;;;:15:::1;:27;::::0;;;;;;;;;3302:34;;:5:::1;:34:::0;;;;;:60;;:45:::1;::::0;::::1;:60:::0;;;::::1;::::0;;;;;3384:27;;;;;;;;;3377:35;;5156:25:1;;;3377:35:0::1;::::0;5129:18:1;3377:35:0::1;;;;;;;3167:252:::0;;:::o;3683:189::-;3738:11;;:::i;:::-;-1:-1:-1;;;;;3769:22:0;;;;;;:15;:22;;;;;;:27;;3761:58;;;;-1:-1:-1;;;3761:58:0;;5394:2:1;3761:58:0;;;5376:21:1;5433:2;5413:18;;;5406:30;-1:-1:-1;;;5452:18:1;;;5445:48;5510:18;;3761:58:0;5192:342:1;3761:58:0;-1:-1:-1;;;;;;3842:22:0;3836:29;3842:22;;;:15;:22;;;;;;;;;3836:29;;:5;:29;;;;;;3829:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3683:189::o;2349:355::-;2459:10;2443:27;;;;:15;:27;;;;;;;;;306:16;;;:6;:16;;;;;;;;;298:44;;;;-1:-1:-1;;;298:44:0;;6084:2:1;298:44:0;;;6066:21:1;6123:2;6103:18;;;6096:30;-1:-1:-1;;;6142:18:1;;;6135:45;6197:18;;298:44:0;5882:339:1;298:44:0;395:1;360:23;;;:13;:23;;;;;;-1:-1:-1;;;;;360:23:0;:37;352:73;;;;-1:-1:-1;;;352:73:0;;6428:2:1;352:73:0;;;6410:21:1;6467:2;6447:18;;;6440:30;6506:25;6486:18;;;6479:53;6549:18;;352:73:0;6226:347:1;352:73:0;2518:10:::1;2486:13;2502:27:::0;;;:15:::1;:27;::::0;;;;;;;;2539:23;;;:13:::1;:23:::0;;;;;;:36;;-1:-1:-1;;;;;;2539:36:0::1;::::0;;::::1;::::0;;;2585:5:::1;:15:::0;;;;;;:34;;;2629:38;;:26;;::::1;:38:::0;;;;;;::::1;::::0;;;;;;;;;2682:15;5156:25:1;;;2502:27:0;;2682:15:::1;::::0;5129:18:1;2682:15:0::1;5010:177:1::0;3969:235:0;4025:7;4079:8;;-1:-1:-1;;;;;4079:8:0;4065:10;:22;4044:113;;;;-1:-1:-1;;;4044:113:0;;6780:2:1;4044:113:0;;;6762:21:1;6819:2;6799:18;;;6792:30;6858:34;6838:18;;;6831:62;-1:-1:-1;;;6909:18:1;;;6902:42;6961:19;;4044:113:0;6578:408:1;4044:113:0;-1:-1:-1;4174:23:0;;;;:13;:23;;;;;;-1:-1:-1;;;;;4174:23:0;;3969:235::o;1508:425::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:19:0;;;;;1750:37;;;;;;:::i;:::-;;;;-1:-1:-1;;1750:37:0;;;;;;;;;1727:70;;1750:37;1727:70;;;;1695:29;;;:102;1872:16;;1855:34;;;;;;:::i;:::-;;;;-1:-1:-1;;1855:34:0;;;;;;;;;1832:67;;1855:34;1832:67;;;;1807:92;;:10;1508:425;-1:-1:-1;;1508:425:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:1;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:936::-;957:6;1010:2;998:9;989:7;985:23;981:32;978:52;;;1026:1;1023;1016:12;978:52;1066:9;1053:23;1095:18;1136:2;1128:6;1125:14;1122:34;;;1152:1;1149;1142:12;1122:34;1175:22;;;;1231:4;1213:16;;;1209:27;1206:47;;;1249:1;1246;1239:12;1206:47;1282:4;1276:11;1326:4;1318:6;1314:17;1381:6;1369:10;1366:22;1361:2;1349:10;1346:18;1343:46;1340:72;;;1392:18;;:::i;:::-;1428:4;1421:24;1470:16;;1498;;;1495:36;;;1527:1;1524;1517:12;1495:36;1555:45;1592:7;1581:8;1577:2;1573:17;1555:45;:::i;:::-;1547:6;1540:61;;1647:2;1643;1639:11;1626:25;1676:2;1666:8;1663:16;1660:36;;;1692:1;1689;1682:12;1660:36;1729:45;1766:7;1755:8;1751:2;1747:17;1729:45;:::i;:::-;1724:2;1712:15;;1705:70;-1:-1:-1;1716:6:1;870:936;-1:-1:-1;;;;;870:936:1:o;2003:173::-;2071:20;;-1:-1:-1;;;;;2120:31:1;;2110:42;;2100:70;;2166:1;2163;2156:12;2100:70;2003:173;;;:::o;2181:254::-;2249:6;2257;2310:2;2298:9;2289:7;2285:23;2281:32;2278:52;;;2326:1;2323;2316:12;2278:52;2349:29;2368:9;2349:29;:::i;:::-;2339:39;2425:2;2410:18;;;;2397:32;;-1:-1:-1;;;2181:254:1:o;2440:513::-;2533:6;2586:2;2574:9;2565:7;2561:23;2557:32;2554:52;;;2602:1;2599;2592:12;2554:52;2635:2;2629:9;2677:2;2669:6;2665:15;2746:6;2734:10;2731:22;2710:18;2698:10;2695:34;2692:62;2689:88;;;2757:18;;:::i;:::-;2793:2;2786:22;2832:23;;2817:39;;2917:2;2902:18;;;2889:32;2872:15;;;2865:57;;;;-1:-1:-1;2824:6:1;2440:513;-1:-1:-1;2440:513:1:o;3166:186::-;3225:6;3278:2;3266:9;3257:7;3253:23;3249:32;3246:52;;;3294:1;3291;3284:12;3246:52;3317:29;3336:9;3317:29;:::i;:::-;3307:39;3166:186;-1:-1:-1;;;3166:186:1:o;3764:180::-;3823:6;3876:2;3864:9;3855:7;3851:23;3847:32;3844:52;;;3892:1;3889;3882:12;3844:52;-1:-1:-1;3915:23:1;;3764:180;-1:-1:-1;3764:180:1:o;6991:414::-;7122:3;7160:6;7154:13;7185:1;7195:129;7209:6;7206:1;7203:13;7195:129;;;7307:4;7291:14;;;7287:25;;7281:32;7268:11;;;7261:53;7224:12;7195:129;;;-1:-1:-1;7379:1:1;7343:16;;7368:13;;;-1:-1:-1;7343:16:1;6991:414;-1:-1:-1;6991:414:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    95,
    5016
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x66CFE97F EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x886FC93F EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xBDD75202 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xC41A360A EQ PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8215C54 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x4B5C4A19 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x917 JUMP JUMPDEST PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD3 PUSH2 0x395 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x103 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD DUP1 MLOAD DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x5E6 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP3 MSTORE SWAP1 SWAP3 ADD SLOAD SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x1E0 DUP5 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH2 0x1FB JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD EQ PUSH2 0x20E JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x536F756C20657869737473 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C206973206D696E7465642C20627574206E6F7420636C61696D656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F70657261746F722063616E206D696E74206E657720736F756C73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0x7883703ED0E86588A40D76551C92F8A4B329E3BF19765E0E6749473C1A84665 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DBDD5B08191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 SWAP2 DUP3 ADD DUP6 SWAP1 SSTORE CALLER DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP5 SWAP1 SSTORE DUP5 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0xB90306AD06B2A6FF86DDC9327DB583062895EF6540E62DC50ADD009DB5B356EB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F20736F756C20657869737473 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 MSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP9 MLOAD PUSH1 0x1 DUP3 ADD SSTORE DUP9 DUP5 ADD MLOAD SWAP1 DUP6 ADD SSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE SWAP2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x164F7B2AB803097DAB5E39F06D2E4F3C3DDC5D4171ABBDCC3E76443B8359C7F5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x53A PUSH2 0x83A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DBDD5B08191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP6 MSTORE SWAP3 ADD SLOAD DUP4 DUP3 ADD MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDB881B5A5B9D1959081CDBDD5B PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x6AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C20697320616C726561647920636C61696D6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x269 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP1 DUP6 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP8 OR SWAP1 SWAP7 SSTORE PUSH1 0x3 DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP5 DUP2 SSTORE DUP8 MLOAD SWAP6 DUP2 ADD SWAP6 SWAP1 SWAP6 SSTORE DUP7 DUP3 ADD MLOAD SWAP5 SWAP1 SWAP3 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP2 DUP2 MSTORE SWAP1 SWAP2 PUSH32 0x7BB2B3C10797BACCB6F8C4791F1EDD6CA2F0D028EE0EDA64B01A9A57E3A653F7 SWAP2 ADD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468697320636F6E74726163742063616E20766965772074686973 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x206861736865642064617461 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x269 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x7F0 SWAP3 ADD PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 MLOAD PUSH2 0x81A SWAP3 ADD PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x89B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B6 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8DE JUMPI PUSH2 0x8DE PUSH2 0x874 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x40 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0x970 JUMPI PUSH2 0x970 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98E DUP8 DUP3 DUP7 ADD PUSH2 0x88A JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AF DUP8 DUP3 DUP7 ADD PUSH2 0x88A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F6 DUP4 PUSH2 0x9BE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA39 JUMPI PUSH2 0xA39 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6E DUP3 PUSH2 0x9BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAAF JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xA95 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 PUSH11 0xD84AC5BB54D0EDF3F29FE7 0xE5 PUSH17 0x7B797FC2DF0A9C747848EB4BA6C74186BE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        95,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x570CA735"
    },
    "38": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x570CA735"
    },
    "49": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "53": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66CFE97F"
    },
    "60": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B"
    },
    "64": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x886FC93F"
    },
    "71": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152"
    },
    "75": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDD75202"
    },
    "82": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x165"
    },
    "86": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC41A360A"
    },
    "93": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x190"
    },
    "97": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8215C54"
    },
    "109": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x40C10F19"
    },
    "120": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "124": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x44DF8E70"
    },
    "131": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5"
    },
    "135": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4B5C4A19"
    },
    "142": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "146": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        95,
        5016
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "156": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6"
    },
    "159": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "160": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "162": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x917"
    },
    "165": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "166": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "167": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A3"
    },
    "170": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "171": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "174": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "175": {
      "op": "SWAP1"
    },
    "176": {
      "op": "ISZERO"
    },
    "177": {
      "op": "ISZERO"
    },
    "178": {
      "op": "DUP2"
    },
    "179": {
      "op": "MSTORE"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "182": {
      "op": "ADD"
    },
    "183": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "184": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "186": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "187": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "188": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "189": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "SUB",
      "path": "0"
    },
    "190": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "191": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "RETURN",
      "path": "0"
    },
    "192": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "196": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "199": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "200": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "202": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DA"
    },
    "205": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        2039,
        2343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "206": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218"
    },
    "210": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        2039,
        2343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "211": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "STOP",
      "path": "0"
    },
    "213": {
      "fn": "SBT.burn",
      "offset": [
        2757,
        3081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "fn": "SBT.burn",
      "offset": [
        2757,
        3081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "217": {
      "fn": "SBT.burn",
      "offset": [
        2757,
        3081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x395"
    },
    "220": {
      "fn": "SBT.burn",
      "jump": "i",
      "offset": [
        2757,
        3081
      ],
      "op": "JUMP",
      "path": "0"
    },
    "221": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "222": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "225": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB"
    },
    "228": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "229": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "231": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA04"
    },
    "234": {
      "fn": "SBT.update",
      "jump": "i",
      "offset": [
        3167,
        3419
      ],
      "op": "JUMP",
      "path": "0"
    },
    "235": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "236": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "239": {
      "fn": "SBT.update",
      "jump": "i",
      "offset": [
        3167,
        3419
      ],
      "op": "JUMP",
      "path": "0"
    },
    "240": {
      "offset": [
        935,
        958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "243": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "244": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "247": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "254": {
      "op": "SHL"
    },
    "255": {
      "op": "SUB"
    },
    "256": {
      "offset": [
        935,
        958
      ],
      "op": "AND",
      "path": "0"
    },
    "257": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "DUP2",
      "path": "0"
    },
    "258": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "262": {
      "fn": "SBT.update",
      "offset": [
        935,
        958
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "269": {
      "op": "SHL"
    },
    "270": {
      "op": "SUB"
    },
    "271": {
      "op": "SWAP1"
    },
    "272": {
      "op": "SWAP2"
    },
    "273": {
      "op": "AND"
    },
    "274": {
      "op": "DUP2"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "278": {
      "op": "ADD"
    },
    "279": {
      "offset": [
        935,
        958
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7"
    },
    "282": {
      "op": "JUMP"
    },
    "283": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "284": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "287": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "290": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "291": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "293": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA53"
    },
    "296": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        3683,
        3872
      ],
      "op": "JUMP",
      "path": "0"
    },
    "297": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x532"
    },
    "301": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        3683,
        3872
      ],
      "op": "JUMP",
      "path": "0"
    },
    "302": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "303": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "305": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "DUP1",
      "path": "0"
    },
    "306": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "307": {
      "op": "DUP3"
    },
    "308": {
      "op": "MLOAD"
    },
    "309": {
      "op": "DUP2"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "313": {
      "op": "SWAP3"
    },
    "314": {
      "op": "DUP4"
    },
    "315": {
      "op": "ADD"
    },
    "316": {
      "op": "MLOAD"
    },
    "317": {
      "op": "DUP1"
    },
    "318": {
      "op": "MLOAD"
    },
    "319": {
      "op": "DUP5"
    },
    "320": {
      "op": "DUP4"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "op": "MSTORE"
    },
    "323": {
      "op": "SWAP1"
    },
    "324": {
      "op": "SWAP3"
    },
    "325": {
      "op": "ADD"
    },
    "326": {
      "op": "MLOAD"
    },
    "327": {
      "op": "SWAP1"
    },
    "328": {
      "op": "DUP3"
    },
    "329": {
      "op": "ADD"
    },
    "330": {
      "op": "MSTORE"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "333": {
      "op": "ADD"
    },
    "334": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7"
    },
    "337": {
      "op": "JUMP"
    },
    "338": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3"
    },
    "342": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "345": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "346": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "348": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA04"
    },
    "351": {
      "fn": "SBT.claim",
      "jump": "i",
      "offset": [
        2349,
        2704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "352": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "353": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E6"
    },
    "356": {
      "fn": "SBT.claim",
      "jump": "i",
      "offset": [
        2349,
        2704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "357": {
      "fn": "SBT.hasSoul",
      "offset": [
        3484,
        3596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "358": {
      "fn": "SBT.hasSoul",
      "offset": [
        3484,
        3596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "361": {
      "fn": "SBT.hasSoul",
      "offset": [
        3484,
        3596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "364": {
      "fn": "SBT.hasSoul",
      "offset": [
        3484,
        3596
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "365": {
      "fn": "SBT.hasSoul",
      "offset": [
        3484,
        3596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "367": {
      "fn": "SBT.hasSoul",
      "offset": [
        3484,
        3596
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA53"
    },
    "370": {
      "fn": "SBT.hasSoul",
      "jump": "i",
      "offset": [
        3484,
        3596
      ],
      "op": "JUMP",
      "path": "0"
    },
    "371": {
      "fn": "SBT.hasSoul",
      "offset": [
        3484,
        3596
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "378": {
      "op": "SHL"
    },
    "379": {
      "op": "SUB"
    },
    "380": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "381": {
      "fn": "SBT.hasSoul",
      "offset": [
        3539,
        3543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "383": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "384": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "385": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "386": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3577
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "388": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "390": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "391": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "393": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "394": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "395": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3584
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "396": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "397": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3589
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "398": {
      "fn": "SBT.hasSoul",
      "offset": [
        3562,
        3589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "399": {
      "fn": "SBT.hasSoul",
      "offset": [
        3484,
        3596
      ],
      "op": "JUMP",
      "path": "0"
    },
    "400": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "401": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "404": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E"
    },
    "407": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "408": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "410": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA75"
    },
    "413": {
      "fn": "SBT.getOwner",
      "jump": "i",
      "offset": [
        3969,
        4204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "414": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "415": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x729"
    },
    "418": {
      "fn": "SBT.getOwner",
      "jump": "i",
      "offset": [
        3969,
        4204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "419": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "420": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4524,
        4534
      ],
      "op": "CALLER",
      "path": "0"
    },
    "421": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4419,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "423": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "425": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "426": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "428": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "430": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "431": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "432": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "433": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "435": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "436": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "DUP5",
      "path": "0"
    },
    "437": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "438": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4508,
        4535
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "439": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4545
      ],
      "op": "DUP5",
      "path": "0"
    },
    "440": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4545
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "441": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4494
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "443": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4545
      ],
      "op": "DUP3",
      "path": "0"
    },
    "444": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4545
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "445": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4545
      ],
      "op": "DUP1",
      "path": "0"
    },
    "446": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4545
      ],
      "op": "DUP5",
      "path": "0"
    },
    "447": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4545
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "448": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "DUP2",
      "path": "0"
    },
    "449": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "450": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "DUP1",
      "path": "0"
    },
    "451": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "DUP4",
      "path": "0"
    },
    "452": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "ADD",
      "path": "0"
    },
    "453": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "454": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "455": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "456": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "458": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4556
      ],
      "op": "DUP2",
      "path": "0"
    },
    "459": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4489,
        4556
      ],
      "op": "ADD",
      "path": "0"
    },
    "460": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "461": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "DUP3",
      "path": "0"
    },
    "462": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "463": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "464": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "465": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "ADD",
      "path": "0"
    },
    "466": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "467": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "468": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "DUP3",
      "path": "0"
    },
    "469": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "ADD",
      "path": "0"
    },
    "470": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4439,
        4556
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "471": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4419,
        4423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "472": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4613,
        4666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "475": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4643,
        4656
      ],
      "op": "DUP5",
      "path": "0"
    },
    "476": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4613,
        4629
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B5"
    },
    "479": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        4613,
        4666
      ],
      "op": "JUMP",
      "path": "0"
    },
    "480": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4613,
        4666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "481": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4566,
        4666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "482": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4566,
        4666
      ],
      "op": "POP",
      "path": "0"
    },
    "483": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4746,
        4767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "484": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4746,
        4786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "486": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4746,
        4786
      ],
      "op": "ADD",
      "path": "0"
    },
    "487": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4746,
        4786
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "488": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4693,
        4711
      ],
      "op": "DUP2",
      "path": "0"
    },
    "489": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4693,
        4730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "491": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4693,
        4730
      ],
      "op": "ADD",
      "path": "0"
    },
    "492": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4693,
        4730
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "493": {
      "branch": 25,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4693,
        4786
      ],
      "op": "EQ",
      "path": "0"
    },
    "494": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4676,
        4834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FB"
    },
    "497": {
      "branch": 25,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4676,
        4834
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4818,
        4823
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "501": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4818,
        4823
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "502": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "503": {
      "op": "POP"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "op": "POP"
    },
    "506": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "507": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4676,
        4834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "508": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4906,
        4939
      ],
      "op": "DUP2",
      "path": "0"
    },
    "509": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4906,
        4939
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "510": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4860,
        4890
      ],
      "op": "DUP2",
      "path": "0"
    },
    "511": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4860,
        4890
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "512": {
      "branch": 26,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4860,
        4939
      ],
      "op": "EQ",
      "path": "0"
    },
    "513": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4843,
        4987
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "516": {
      "branch": 26,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4843,
        4987
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "517": {
      "op": "POP"
    },
    "518": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4971,
        4976
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "520": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4971,
        4976
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "521": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "526": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4843,
        4987
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "527": {
      "op": "POP"
    },
    "528": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5003,
        5007
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "530": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        5003,
        5007
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "531": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4306,
        5014
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "532": {
      "op": "POP"
    },
    "533": {
      "op": "POP"
    },
    "534": {
      "op": "POP"
    },
    "535": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        4306,
        5014
      ],
      "op": "JUMP",
      "path": "0"
    },
    "536": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "537": {
      "offset": [
        542,
        543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "539": {
      "offset": [
        507,
        530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "540": {
      "fn": "SBT.mint",
      "offset": [
        507,
        530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "541": {
      "fn": "SBT.mint",
      "offset": [
        507,
        530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "542": {
      "offset": [
        507,
        520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "544": {
      "offset": [
        507,
        530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "546": {
      "fn": "SBT.mint",
      "offset": [
        507,
        530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "547": {
      "fn": "SBT.mint",
      "offset": [
        507,
        530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "549": {
      "fn": "SBT.mint",
      "offset": [
        507,
        530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "550": {
      "fn": "SBT.mint",
      "offset": [
        507,
        530
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "551": {
      "fn": "SBT.mint",
      "offset": [
        507,
        530
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "552": {
      "fn": "SBT.mint",
      "offset": [
        2132,
        2140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "553": {
      "fn": "SBT.mint",
      "offset": [
        2132,
        2140
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "op": "SUB"
    },
    "562": {
      "offset": [
        507,
        530
      ],
      "op": "AND",
      "path": "0"
    },
    "563": {
      "offset": [
        507,
        544
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "564": {
      "offset": [
        499,
        560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272"
    },
    "567": {
      "offset": [
        499,
        560
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "568": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "570": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "offset": [
        499,
        560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "579": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "582": {
      "offset": [
        499,
        560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "584": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "DUP3",
      "path": "0"
    },
    "585": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "ADD",
      "path": "0"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "591": {
      "op": "DUP3"
    },
    "592": {
      "op": "ADD"
    },
    "593": {
      "op": "MSTORE"
    },
    "594": {
      "op": "PUSH11",
      "value": "0x536F756C20657869737473"
    },
    "606": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "611": {
      "op": "DUP3"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "op": "MSTORE"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "616": {
      "op": "ADD"
    },
    "617": {
      "offset": [
        499,
        560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "618": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "620": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "621": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "DUP1",
      "path": "0"
    },
    "622": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "623": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "SUB",
      "path": "0"
    },
    "624": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "625": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "626": {
      "fn": "SBT.mint",
      "offset": [
        499,
        560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "627": {
      "offset": [
        579,
        595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "629": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "630": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "631": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "632": {
      "offset": [
        579,
        585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "634": {
      "offset": [
        579,
        595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "636": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "637": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "639": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "640": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "641": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "642": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "644": {
      "fn": "SBT.mint",
      "offset": [
        579,
        595
      ],
      "op": "AND",
      "path": "0"
    },
    "645": {
      "offset": [
        578,
        595
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "646": {
      "offset": [
        570,
        631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D1"
    },
    "649": {
      "offset": [
        570,
        631
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "650": {
      "fn": "SBT.mint",
      "offset": [
        570,
        631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "652": {
      "fn": "SBT.mint",
      "offset": [
        570,
        631
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "653": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "657": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "659": {
      "op": "SHL"
    },
    "660": {
      "offset": [
        570,
        631
      ],
      "op": "DUP2",
      "path": "0"
    },
    "661": {
      "fn": "SBT.mint",
      "offset": [
        570,
        631
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "664": {
      "offset": [
        570,
        631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "666": {
      "fn": "SBT.mint",
      "offset": [
        570,
        631
      ],
      "op": "DUP3",
      "path": "0"
    },
    "667": {
      "fn": "SBT.mint",
      "offset": [
        570,
        631
      ],
      "op": "ADD",
      "path": "0"
    },
    "668": {
      "op": "MSTORE"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "673": {
      "op": "DUP3"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "MSTORE"
    },
    "676": {
      "op": "PUSH32",
      "value": "0x536F756C206973206D696E7465642C20627574206E6F7420636C61696D656400"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "711": {
      "op": "DUP3"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "op": "MSTORE"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "716": {
      "op": "ADD"
    },
    "717": {
      "offset": [
        570,
        631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "720": {
      "op": "JUMP"
    },
    "721": {
      "offset": [
        570,
        631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "722": {
      "fn": "SBT.mint",
      "offset": [
        2178,
        2186
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "724": {
      "fn": "SBT.mint",
      "offset": [
        2178,
        2186
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "731": {
      "op": "SHL"
    },
    "732": {
      "op": "SUB"
    },
    "733": {
      "fn": "SBT.mint",
      "offset": [
        2178,
        2186
      ],
      "op": "AND",
      "path": "0"
    },
    "734": {
      "fn": "SBT.mint",
      "offset": [
        2164,
        2174
      ],
      "op": "CALLER",
      "path": "0"
    },
    "735": {
      "branch": 27,
      "fn": "SBT.mint",
      "offset": [
        2164,
        2186
      ],
      "op": "EQ",
      "path": "0"
    },
    "736": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "739": {
      "branch": 27,
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "740": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "742": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "751": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "754": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "756": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "DUP3",
      "path": "0"
    },
    "757": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "ADD",
      "path": "0"
    },
    "758": {
      "op": "DUP2"
    },
    "759": {
      "op": "SWAP1"
    },
    "760": {
      "op": "MSTORE"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "763": {
      "op": "DUP3"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F70657261746F722063616E206D696E74206E657720736F756C73"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "801": {
      "op": "DUP3"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "810": {
      "op": "JUMP"
    },
    "811": {
      "fn": "SBT.mint",
      "offset": [
        2156,
        2223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "op": "SUB"
    },
    "820": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 5
    },
    "821": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "AND",
      "path": "0"
    },
    "822": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "824": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "825": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "826": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "827": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "829": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "831": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "832": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "833": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "834": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "836": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "DUP1",
      "path": "0"
    },
    "837": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "DUP4",
      "path": "0"
    },
    "838": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2263
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "839": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2274
      ],
      "op": "DUP6",
      "path": "0"
    },
    "840": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2274
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "841": {
      "fn": "SBT.mint",
      "offset": [
        2233,
        2274
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "842": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 6
    },
    "843": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "DUP4",
      "path": "0"
    },
    "844": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "845": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "847": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "DUP3",
      "path": "0"
    },
    "848": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "849": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "850": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "DUP3",
      "path": "0"
    },
    "851": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "852": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2300
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "853": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "854": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "857": {
      "op": "NOT"
    },
    "858": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2307
      ],
      "op": "AND",
      "path": "0"
    },
    "859": {
      "fn": "SBT.mint",
      "offset": [
        2303,
        2307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "861": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2307
      ],
      "op": "OR",
      "path": "0"
    },
    "862": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "863": {
      "fn": "SBT.mint",
      "offset": [
        2284,
        2307
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "864": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 7
    },
    "865": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "866": {
      "op": "DUP4"
    },
    "867": {
      "op": "DUP2"
    },
    "868": {
      "op": "MSTORE"
    },
    "869": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7883703ED0E86588A40D76551C92F8A4B329E3BF19765E0E6749473C1A84665"
    },
    "902": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "905": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "907": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "908": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "DUP1",
      "path": "0"
    },
    "909": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "910": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "SUB",
      "path": "0"
    },
    "911": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "912": {
      "fn": "SBT.mint",
      "offset": [
        2322,
        2336
      ],
      "op": "LOG1",
      "path": "0"
    },
    "913": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "POP",
      "path": "0"
    },
    "914": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "POP",
      "path": "0"
    },
    "915": {
      "fn": "SBT.mint",
      "offset": [
        2039,
        2343
      ],
      "op": "POP",
      "path": "0"
    },
    "916": {
      "fn": "SBT.mint",
      "jump": "o",
      "offset": [
        2039,
        2343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "917": {
      "fn": "SBT.burn",
      "offset": [
        2757,
        3081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "918": {
      "fn": "SBT.burn",
      "offset": [
        2832,
        2842
      ],
      "op": "CALLER",
      "path": "0"
    },
    "919": {
      "fn": "SBT.burn",
      "offset": [
        2792,
        2813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "921": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "922": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "923": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "924": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "926": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "928": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "929": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "931": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "932": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "933": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "934": {
      "fn": "SBT.burn",
      "offset": [
        2816,
        2843
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "935": {
      "fn": "SBT.burn",
      "offset": [
        2861,
        2882
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 8
    },
    "936": {
      "fn": "SBT.burn",
      "offset": [
        2861,
        2882
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "937": {
      "branch": 28,
      "fn": "SBT.burn",
      "offset": [
        2861,
        2882
      ],
      "op": "SUB",
      "path": "0"
    },
    "938": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "941": {
      "branch": 28,
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "942": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "944": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "945": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "949": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "951": {
      "op": "SHL"
    },
    "952": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "DUP2",
      "path": "0"
    },
    "953": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "956": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "958": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "DUP3",
      "path": "0"
    },
    "959": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "ADD",
      "path": "0"
    },
    "960": {
      "op": "MSTORE"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH18",
      "value": "0x14DBDD5B08191BD95CDB89DD08195E1A5CDD"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "1001": {
      "op": "JUMP"
    },
    "1002": {
      "fn": "SBT.burn",
      "offset": [
        2853,
        2905
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1003": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "1005": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1006": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1007": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1008": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1010": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1012": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1013": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1014": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1015": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1017": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1018": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1019": {
      "fn": "SBT.burn",
      "offset": [
        2922,
        2945
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1020": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1021": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1022": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1023": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1025": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1026": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1027": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "ADD",
      "path": "0"
    },
    "1028": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1029": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1030": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1031": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1033": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1034": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1035": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "ADD",
      "path": "0"
    },
    "1036": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1037": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1038": {
      "fn": "SBT.burn",
      "offset": [
        2915,
        2945
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1039": {
      "fn": "SBT.burn",
      "offset": [
        2978,
        2988
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 10
    },
    "1040": {
      "fn": "SBT.burn",
      "offset": [
        2962,
        2989
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1041": {
      "fn": "SBT.burn",
      "offset": [
        2962,
        2989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1042": {
      "fn": "SBT.burn",
      "offset": [
        2962,
        2989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1043": {
      "fn": "SBT.burn",
      "offset": [
        2962,
        2989
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1044": {
      "fn": "SBT.burn",
      "offset": [
        2962,
        2989
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1045": {
      "fn": "SBT.burn",
      "offset": [
        2962,
        2989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1046": {
      "fn": "SBT.burn",
      "offset": [
        2962,
        2989
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1047": {
      "fn": "SBT.burn",
      "offset": [
        2962,
        2989
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1048": {
      "fn": "SBT.burn",
      "offset": [
        2955,
        2989
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1049": {
      "fn": "SBT.burn",
      "offset": [
        2955,
        2989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1050": {
      "fn": "SBT.burn",
      "offset": [
        2955,
        2989
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1051": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 11
    },
    "1052": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1053": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1054": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1055": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1056": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1057": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1058": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1059": {
      "fn": "SBT.burn",
      "offset": [
        3006,
        3037
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1060": {
      "fn": "SBT.burn",
      "offset": [
        2999,
        3037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1061": {
      "fn": "SBT.burn",
      "offset": [
        2999,
        3037
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1068": {
      "op": "SHL"
    },
    "1069": {
      "op": "SUB"
    },
    "1070": {
      "op": "NOT"
    },
    "1071": {
      "fn": "SBT.burn",
      "offset": [
        2999,
        3037
      ],
      "op": "AND",
      "path": "0"
    },
    "1072": {
      "fn": "SBT.burn",
      "offset": [
        2999,
        3037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1073": {
      "fn": "SBT.burn",
      "offset": [
        2999,
        3037
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1074": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 12
    },
    "1075": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "DUP2"
    },
    "1078": {
      "op": "MSTORE"
    },
    "1079": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB90306AD06B2A6FF86DDC9327DB583062895EF6540E62DC50ADD009DB5B356EB"
    },
    "1112": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1116": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1117": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1118": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1119": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "SUB",
      "path": "0"
    },
    "1120": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1121": {
      "fn": "SBT.burn",
      "offset": [
        3052,
        3074
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1122": {
      "fn": "SBT.burn",
      "offset": [
        2782,
        3081
      ],
      "op": "POP",
      "path": "0"
    },
    "1123": {
      "fn": "SBT.burn",
      "jump": "o",
      "offset": [
        2757,
        3081
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1124": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1125": {
      "fn": "SBT.update",
      "offset": [
        3275,
        3285
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1126": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1128": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1129": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1130": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1131": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1133": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1135": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1136": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1137": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1138": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1140": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1141": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1142": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1143": {
      "fn": "SBT.update",
      "offset": [
        3259,
        3286
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1144": {
      "offset": [
        167,
        190
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1145": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1146": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1147": {
      "offset": [
        167,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1149": {
      "offset": [
        167,
        190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1150": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1151": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1152": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1153": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1154": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1155": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "op": "SUB"
    },
    "1164": {
      "offset": [
        167,
        190
      ],
      "op": "AND",
      "path": "0"
    },
    "1165": {
      "offset": [
        159,
        223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "1168": {
      "fn": "SBT.update",
      "offset": [
        159,
        223
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1169": {
      "fn": "SBT.update",
      "offset": [
        159,
        223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1171": {
      "fn": "SBT.update",
      "offset": [
        159,
        223
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "offset": [
        159,
        223
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1180": {
      "fn": "SBT.update",
      "offset": [
        159,
        223
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1183": {
      "offset": [
        159,
        223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1185": {
      "fn": "SBT.update",
      "offset": [
        159,
        223
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1186": {
      "fn": "SBT.update",
      "offset": [
        159,
        223
      ],
      "op": "ADD",
      "path": "0"
    },
    "1187": {
      "op": "MSTORE"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1192": {
      "op": "DUP3"
    },
    "1193": {
      "op": "ADD"
    },
    "1194": {
      "op": "MSTORE"
    },
    "1195": {
      "op": "PUSH14",
      "value": "0x4E6F20736F756C20657869737473"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1220": {
      "op": "ADD"
    },
    "1221": {
      "offset": [
        159,
        223
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "1224": {
      "op": "JUMP"
    },
    "1225": {
      "offset": [
        159,
        223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1226": {
      "fn": "SBT.update",
      "offset": [
        3324,
        3334
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 13
    },
    "1227": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1229": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1230": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1231": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1232": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1234": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1236": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1237": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1238": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1239": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1241": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1242": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1243": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1244": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1245": {
      "fn": "SBT.update",
      "offset": [
        3308,
        3335
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1246": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3336
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1247": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1248": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1250": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3336
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1251": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1253": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3336
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1254": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3336
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1255": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1256": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1257": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1259": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3347
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1260": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3347
      ],
      "op": "ADD",
      "path": "0"
    },
    "1261": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1262": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1263": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1264": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "ADD",
      "path": "0"
    },
    "1265": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1266": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1267": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1268": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "ADD",
      "path": "0"
    },
    "1269": {
      "fn": "SBT.update",
      "offset": [
        3302,
        3362
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1270": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 14
    },
    "1271": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1273": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1274": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1275": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1276": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1277": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1278": {
      "fn": "SBT.update",
      "offset": [
        3384,
        3411
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1279": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1280": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1281": {
      "op": "SWAP1"
    },
    "1282": {
      "op": "DUP2"
    },
    "1283": {
      "op": "MSTORE"
    },
    "1284": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x164F7B2AB803097DAB5E39F06D2E4F3C3DDC5D4171ABBDCC3E76443B8359C7F5"
    },
    "1317": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1321": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1322": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1323": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1324": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "SUB",
      "path": "0"
    },
    "1325": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1326": {
      "fn": "SBT.update",
      "offset": [
        3377,
        3412
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1327": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "POP",
      "path": "0"
    },
    "1328": {
      "fn": "SBT.update",
      "offset": [
        3167,
        3419
      ],
      "op": "POP",
      "path": "0"
    },
    "1329": {
      "fn": "SBT.update",
      "jump": "o",
      "offset": [
        3167,
        3419
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1330": {
      "fn": "SBT.getSoul",
      "offset": [
        3683,
        3872
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1331": {
      "fn": "SBT.getSoul",
      "offset": [
        3738,
        3749
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53A"
    },
    "1334": {
      "fn": "SBT.getSoul",
      "offset": [
        3738,
        3749
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83A"
    },
    "1337": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        3738,
        3749
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1338": {
      "fn": "SBT.getSoul",
      "offset": [
        3738,
        3749
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1345": {
      "op": "SHL"
    },
    "1346": {
      "op": "SUB"
    },
    "1347": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1348": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "AND",
      "path": "0"
    },
    "1349": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1351": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1352": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1353": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1354": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1356": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1358": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1359": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1361": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1362": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1363": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1364": {
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1365": {
      "branch": 29,
      "fn": "SBT.getSoul",
      "offset": [
        3769,
        3796
      ],
      "op": "SUB",
      "path": "0"
    },
    "1366": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x596"
    },
    "1369": {
      "branch": 29,
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1370": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1372": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1379": {
      "op": "SHL"
    },
    "1380": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1381": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1384": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1386": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1387": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "ADD",
      "path": "0"
    },
    "1388": {
      "op": "MSTORE"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1393": {
      "op": "DUP3"
    },
    "1394": {
      "op": "ADD"
    },
    "1395": {
      "op": "MSTORE"
    },
    "1396": {
      "op": "PUSH18",
      "value": "0x14DBDD5B08191BD95CDB89DD08195E1A5CDD"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1420": {
      "op": "DUP3"
    },
    "1421": {
      "op": "ADD"
    },
    "1422": {
      "op": "MSTORE"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "1429": {
      "op": "JUMP"
    },
    "1430": {
      "fn": "SBT.getSoul",
      "offset": [
        3761,
        3819
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "AND",
      "path": "0",
      "statement": 16
    },
    "1441": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1443": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1444": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1445": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1446": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1448": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1450": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1451": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1452": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1453": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1455": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1456": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1457": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1458": {
      "fn": "SBT.getSoul",
      "offset": [
        3842,
        3864
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1459": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1460": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1461": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1463": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1464": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1465": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1466": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1467": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1468": {
      "fn": "SBT.getSoul",
      "offset": [
        3836,
        3865
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1469": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1470": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1471": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1472": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1473": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "ADD",
      "path": "0"
    },
    "1474": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1475": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1476": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1477": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1478": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1479": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1480": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1481": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1482": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1483": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1484": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "ADD",
      "path": "0"
    },
    "1485": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1486": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1487": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1488": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1490": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1491": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "ADD",
      "path": "0"
    },
    "1492": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1493": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1494": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1495": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1496": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "ADD",
      "path": "0"
    },
    "1497": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1498": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1499": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1500": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "ADD",
      "path": "0"
    },
    "1501": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1502": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1503": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "ADD",
      "path": "0"
    },
    "1504": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1505": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1507": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1508": {
      "fn": "SBT.getSoul",
      "offset": [
        3829,
        3865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1509": {
      "fn": "SBT.getSoul",
      "jump": "o",
      "offset": [
        3683,
        3872
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1510": {
      "fn": "SBT.claim",
      "offset": [
        2349,
        2704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1511": {
      "fn": "SBT.claim",
      "offset": [
        2459,
        2469
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1512": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1514": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1515": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1516": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1517": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1519": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1521": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1522": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1523": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1524": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1526": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1527": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1528": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1529": {
      "fn": "SBT.claim",
      "offset": [
        2443,
        2470
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1530": {
      "offset": [
        306,
        322
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1531": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1532": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1533": {
      "offset": [
        306,
        312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1535": {
      "offset": [
        306,
        322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1536": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1537": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1538": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1539": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1540": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1541": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1542": {
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1544": {
      "branch": 30,
      "fn": "SBT.claim",
      "offset": [
        306,
        322
      ],
      "op": "AND",
      "path": "0"
    },
    "1545": {
      "offset": [
        298,
        342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x646"
    },
    "1548": {
      "branch": 30,
      "offset": [
        298,
        342
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1549": {
      "fn": "SBT.claim",
      "offset": [
        298,
        342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1551": {
      "fn": "SBT.claim",
      "offset": [
        298,
        342
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "offset": [
        298,
        342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1560": {
      "fn": "SBT.claim",
      "offset": [
        298,
        342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1563": {
      "offset": [
        298,
        342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1565": {
      "fn": "SBT.claim",
      "offset": [
        298,
        342
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1566": {
      "fn": "SBT.claim",
      "offset": [
        298,
        342
      ],
      "op": "ADD",
      "path": "0"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1572": {
      "op": "DUP3"
    },
    "1573": {
      "op": "ADD"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "op": "PUSH15",
      "value": "0x139BDB881B5A5B9D1959081CDBDD5B"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1601": {
      "op": "ADD"
    },
    "1602": {
      "offset": [
        298,
        342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "1605": {
      "op": "JUMP"
    },
    "1606": {
      "offset": [
        298,
        342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1607": {
      "offset": [
        395,
        396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1609": {
      "offset": [
        360,
        383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1610": {
      "fn": "SBT.claim",
      "offset": [
        360,
        383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1611": {
      "fn": "SBT.claim",
      "offset": [
        360,
        383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1612": {
      "offset": [
        360,
        373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1614": {
      "offset": [
        360,
        383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1616": {
      "fn": "SBT.claim",
      "offset": [
        360,
        383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1617": {
      "fn": "SBT.claim",
      "offset": [
        360,
        383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1619": {
      "fn": "SBT.claim",
      "offset": [
        360,
        383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1620": {
      "fn": "SBT.claim",
      "offset": [
        360,
        383
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1621": {
      "fn": "SBT.claim",
      "offset": [
        360,
        383
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "op": "SUB"
    },
    "1630": {
      "offset": [
        360,
        383
      ],
      "op": "AND",
      "path": "0"
    },
    "1631": {
      "offset": [
        360,
        397
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1632": {
      "offset": [
        352,
        425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AB"
    },
    "1635": {
      "offset": [
        352,
        425
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1636": {
      "fn": "SBT.claim",
      "offset": [
        352,
        425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1638": {
      "fn": "SBT.claim",
      "offset": [
        352,
        425
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "offset": [
        352,
        425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1647": {
      "fn": "SBT.claim",
      "offset": [
        352,
        425
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1650": {
      "offset": [
        352,
        425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1652": {
      "fn": "SBT.claim",
      "offset": [
        352,
        425
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1653": {
      "fn": "SBT.claim",
      "offset": [
        352,
        425
      ],
      "op": "ADD",
      "path": "0"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1659": {
      "op": "DUP3"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH32",
      "value": "0x536F756C20697320616C726561647920636C61696D6564000000000000000000"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1697": {
      "op": "DUP3"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "op": "MSTORE"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1702": {
      "op": "ADD"
    },
    "1703": {
      "offset": [
        352,
        425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "1706": {
      "op": "JUMP"
    },
    "1707": {
      "offset": [
        352,
        425
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1708": {
      "fn": "SBT.claim",
      "offset": [
        2518,
        2528
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1709": {
      "fn": "SBT.claim",
      "offset": [
        2486,
        2499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1711": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1712": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1713": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1714": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1716": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1718": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1719": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1720": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1721": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1723": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1724": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1725": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1726": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1727": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 17
    },
    "1728": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1729": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1730": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1732": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1733": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1734": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1735": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1736": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1737": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2562
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1738": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1739": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "SUB"
    },
    "1748": {
      "op": "NOT"
    },
    "1749": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "AND",
      "path": "0"
    },
    "1750": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1751": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "1752": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "OR",
      "path": "0"
    },
    "1753": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1754": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "1755": {
      "fn": "SBT.claim",
      "offset": [
        2539,
        2575
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1756": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2590
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x3"
    },
    "1758": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2600
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1759": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1760": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2600
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1761": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1762": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1763": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2600
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1764": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2619
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1765": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2619
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1766": {
      "fn": "SBT.claim",
      "offset": [
        2585,
        2619
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1767": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 19
    },
    "1768": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1769": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2655
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1770": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2655
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1771": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2655
      ],
      "op": "ADD",
      "path": "0"
    },
    "1772": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1773": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1774": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1775": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1776": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1777": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1778": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "ADD",
      "path": "0"
    },
    "1779": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1780": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1781": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1782": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1783": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "ADD",
      "path": "0"
    },
    "1784": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1785": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1786": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1787": {
      "fn": "SBT.claim",
      "offset": [
        2629,
        2667
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1788": {
      "fn": "SBT.claim",
      "offset": [
        2682,
        2697
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 20
    },
    "1789": {
      "op": "DUP2"
    },
    "1790": {
      "op": "DUP2"
    },
    "1791": {
      "op": "MSTORE"
    },
    "1792": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1793": {
      "fn": "SBT.claim",
      "offset": [
        2502,
        2529
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1794": {
      "fn": "SBT.claim",
      "offset": [
        2682,
        2697
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7BB2B3C10797BACCB6F8C4791F1EDD6CA2F0D028EE0EDA64B01A9A57E3A653F7"
    },
    "1827": {
      "fn": "SBT.claim",
      "offset": [
        2682,
        2697
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1828": {
      "op": "ADD"
    },
    "1829": {
      "fn": "SBT.claim",
      "offset": [
        2682,
        2697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x388"
    },
    "1832": {
      "op": "JUMP"
    },
    "1833": {
      "fn": "SBT.getOwner",
      "offset": [
        3969,
        4204
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1834": {
      "fn": "SBT.getOwner",
      "offset": [
        4025,
        4032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1836": {
      "fn": "SBT.getOwner",
      "offset": [
        4079,
        4087
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "1837": {
      "fn": "SBT.getOwner",
      "offset": [
        4079,
        4087
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1844": {
      "op": "SHL"
    },
    "1845": {
      "op": "SUB"
    },
    "1846": {
      "fn": "SBT.getOwner",
      "offset": [
        4079,
        4087
      ],
      "op": "AND",
      "path": "0"
    },
    "1847": {
      "fn": "SBT.getOwner",
      "offset": [
        4065,
        4075
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1848": {
      "branch": 31,
      "fn": "SBT.getOwner",
      "offset": [
        4065,
        4087
      ],
      "op": "EQ",
      "path": "0"
    },
    "1849": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x799"
    },
    "1852": {
      "branch": 31,
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1853": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1855": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1864": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1867": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1869": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1870": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "ADD",
      "path": "0"
    },
    "1871": {
      "op": "MSTORE"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1876": {
      "op": "DUP3"
    },
    "1877": {
      "op": "ADD"
    },
    "1878": {
      "op": "MSTORE"
    },
    "1879": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468697320636F6E74726163742063616E20766965772074686973"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1914": {
      "op": "DUP3"
    },
    "1915": {
      "op": "ADD"
    },
    "1916": {
      "op": "MSTORE"
    },
    "1917": {
      "op": "PUSH12",
      "value": "0x206861736865642064617461"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1935": {
      "op": "DUP3"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "op": "MSTORE"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1940": {
      "op": "ADD"
    },
    "1941": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "1944": {
      "op": "JUMP"
    },
    "1945": {
      "fn": "SBT.getOwner",
      "offset": [
        4044,
        4157
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1946": {
      "op": "POP"
    },
    "1947": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "1949": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1950": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1951": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1952": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1954": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1956": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1957": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1959": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1960": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1961": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1968": {
      "op": "SHL"
    },
    "1969": {
      "op": "SUB"
    },
    "1970": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "AND",
      "path": "0"
    },
    "1971": {
      "fn": "SBT.getOwner",
      "offset": [
        4174,
        4197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1972": {
      "fn": "SBT.getOwner",
      "jump": "o",
      "offset": [
        3969,
        4204
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1973": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1508,
        1933
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1976": {
      "op": "DUP1"
    },
    "1977": {
      "op": "MLOAD"
    },
    "1978": {
      "op": "DUP1"
    },
    "1979": {
      "op": "DUP3"
    },
    "1980": {
      "op": "ADD"
    },
    "1981": {
      "op": "SWAP1"
    },
    "1982": {
      "op": "SWAP2"
    },
    "1983": {
      "op": "MSTORE"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1986": {
      "op": "DUP1"
    },
    "1987": {
      "op": "DUP3"
    },
    "1988": {
      "op": "MSTORE"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1991": {
      "op": "DUP3"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "op": "MSTORE"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1996": {
      "op": "DUP1"
    },
    "1997": {
      "op": "MLOAD"
    },
    "1998": {
      "op": "DUP1"
    },
    "1999": {
      "op": "DUP3"
    },
    "2000": {
      "op": "ADD"
    },
    "2001": {
      "op": "SWAP1"
    },
    "2002": {
      "op": "SWAP2"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2006": {
      "op": "DUP1"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2011": {
      "op": "DUP3"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "MSTORE"
    },
    "2014": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1767,
        1786
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x20"
    },
    "2016": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1767,
        1786
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2017": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1767,
        1786
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2018": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1767,
        1786
      ],
      "op": "ADD",
      "path": "0"
    },
    "2019": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1767,
        1786
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2020": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2022": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2023": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F0"
    },
    "2026": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2027": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "ADD",
      "path": "0"
    },
    "2028": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8E"
    },
    "2031": {
      "fn": "SBT.hashPersonalData",
      "jump": "i",
      "offset": [
        1750,
        1787
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2032": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2033": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2035": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2036": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2039": {
      "op": "NOT"
    },
    "2040": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2041": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2042": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "SUB",
      "path": "0"
    },
    "2043": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "ADD",
      "path": "0"
    },
    "2044": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2045": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2046": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2047": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2048": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2049": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1727,
        1797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2050": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1727,
        1797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2051": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1750,
        1787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2053": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1727,
        1797
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2054": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1727,
        1797
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2055": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1727,
        1797
      ],
      "op": "ADD",
      "path": "0"
    },
    "2056": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1727,
        1797
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2057": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1695,
        1724
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2058": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1695,
        1724
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2059": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1695,
        1724
      ],
      "op": "ADD",
      "path": "0"
    },
    "2060": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1695,
        1797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2061": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1872,
        1888
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 24
    },
    "2062": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1872,
        1888
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2063": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2064": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2065": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81A"
    },
    "2068": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2069": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "ADD",
      "path": "0"
    },
    "2070": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8E"
    },
    "2073": {
      "fn": "SBT.hashPersonalData",
      "jump": "i",
      "offset": [
        1855,
        1889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2074": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2075": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2077": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2078": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2081": {
      "op": "NOT"
    },
    "2082": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2083": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2084": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "SUB",
      "path": "0"
    },
    "2085": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "ADD",
      "path": "0"
    },
    "2086": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2087": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2088": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2089": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2090": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2091": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1832,
        1899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2092": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1832,
        1899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2093": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1855,
        1889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2095": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1832,
        1899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2096": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1832,
        1899
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2097": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1832,
        1899
      ],
      "op": "ADD",
      "path": "0"
    },
    "2098": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1832,
        1899
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2099": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1807,
        1899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2100": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1807,
        1899
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2101": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1807,
        1817
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2102": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1508,
        1933
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2103": {
      "op": "POP"
    },
    "2104": {
      "op": "POP"
    },
    "2105": {
      "fn": "SBT.hashPersonalData",
      "jump": "o",
      "offset": [
        1508,
        1933
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2106": {
      "op": "JUMPDEST"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2109": {
      "op": "MLOAD"
    },
    "2110": {
      "op": "DUP1"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2113": {
      "op": "ADD"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2116": {
      "op": "MSTORE"
    },
    "2117": {
      "op": "DUP1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2120": {
      "op": "DUP2"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "op": "PUSH2",
      "value": "0x86F"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2130": {
      "op": "MLOAD"
    },
    "2131": {
      "op": "DUP1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2134": {
      "op": "ADD"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2137": {
      "op": "MSTORE"
    },
    "2138": {
      "op": "DUP1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2141": {
      "op": "DUP1"
    },
    "2142": {
      "op": "NOT"
    },
    "2143": {
      "op": "AND"
    },
    "2144": {
      "op": "DUP2"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2151": {
      "op": "DUP1"
    },
    "2152": {
      "op": "NOT"
    },
    "2153": {
      "op": "AND"
    },
    "2154": {
      "op": "DUP2"
    },
    "2155": {
      "op": "MSTORE"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "op": "SWAP1"
    },
    "2158": {
      "op": "JUMP"
    },
    "2159": {
      "op": "JUMPDEST"
    },
    "2160": {
      "op": "SWAP1"
    },
    "2161": {
      "op": "MSTORE"
    },
    "2162": {
      "op": "SWAP1"
    },
    "2163": {
      "jump": "o",
      "op": "JUMP"
    },
    "2164": {
      "op": "JUMPDEST"
    },
    "2165": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2175": {
      "op": "MSTORE"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2180": {
      "op": "MSTORE"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2185": {
      "op": "REVERT"
    },
    "2186": {
      "op": "JUMPDEST"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2189": {
      "op": "DUP3"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2192": {
      "op": "DUP4"
    },
    "2193": {
      "op": "ADD"
    },
    "2194": {
      "op": "SLT"
    },
    "2195": {
      "op": "PUSH2",
      "value": "0x89B"
    },
    "2198": {
      "op": "JUMPI"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2201": {
      "op": "DUP1"
    },
    "2202": {
      "op": "REVERT"
    },
    "2203": {
      "op": "JUMPDEST"
    },
    "2204": {
      "op": "DUP2"
    },
    "2205": {
      "op": "CALLDATALOAD"
    },
    "2206": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2215": {
      "op": "DUP1"
    },
    "2216": {
      "op": "DUP3"
    },
    "2217": {
      "op": "GT"
    },
    "2218": {
      "op": "ISZERO"
    },
    "2219": {
      "op": "PUSH2",
      "value": "0x8B6"
    },
    "2222": {
      "op": "JUMPI"
    },
    "2223": {
      "op": "PUSH2",
      "value": "0x8B6"
    },
    "2226": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2229": {
      "jump": "i",
      "op": "JUMP"
    },
    "2230": {
      "op": "JUMPDEST"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2233": {
      "op": "MLOAD"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2236": {
      "op": "DUP4"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2240": {
      "op": "NOT"
    },
    "2241": {
      "op": "SWAP1"
    },
    "2242": {
      "op": "DUP2"
    },
    "2243": {
      "op": "AND"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "AND"
    },
    "2248": {
      "op": "DUP2"
    },
    "2249": {
      "op": "ADD"
    },
    "2250": {
      "op": "SWAP1"
    },
    "2251": {
      "op": "DUP3"
    },
    "2252": {
      "op": "DUP3"
    },
    "2253": {
      "op": "GT"
    },
    "2254": {
      "op": "DUP2"
    },
    "2255": {
      "op": "DUP4"
    },
    "2256": {
      "op": "LT"
    },
    "2257": {
      "op": "OR"
    },
    "2258": {
      "op": "ISZERO"
    },
    "2259": {
      "op": "PUSH2",
      "value": "0x8DE"
    },
    "2262": {
      "op": "JUMPI"
    },
    "2263": {
      "op": "PUSH2",
      "value": "0x8DE"
    },
    "2266": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2269": {
      "jump": "i",
      "op": "JUMP"
    },
    "2270": {
      "op": "JUMPDEST"
    },
    "2271": {
      "op": "DUP2"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2274": {
      "op": "MSTORE"
    },
    "2275": {
      "op": "DUP4"
    },
    "2276": {
      "op": "DUP2"
    },
    "2277": {
      "op": "MSTORE"
    },
    "2278": {
      "op": "DUP7"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2281": {
      "op": "DUP6"
    },
    "2282": {
      "op": "DUP9"
    },
    "2283": {
      "op": "ADD"
    },
    "2284": {
      "op": "ADD"
    },
    "2285": {
      "op": "GT"
    },
    "2286": {
      "op": "ISZERO"
    },
    "2287": {
      "op": "PUSH2",
      "value": "0x8F7"
    },
    "2290": {
      "op": "JUMPI"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2293": {
      "op": "DUP1"
    },
    "2294": {
      "op": "REVERT"
    },
    "2295": {
      "op": "JUMPDEST"
    },
    "2296": {
      "op": "DUP4"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2299": {
      "op": "DUP8"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2303": {
      "op": "DUP4"
    },
    "2304": {
      "op": "ADD"
    },
    "2305": {
      "op": "CALLDATACOPY"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2310": {
      "op": "DUP6"
    },
    "2311": {
      "op": "DUP4"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "ADD"
    },
    "2314": {
      "op": "MSTORE"
    },
    "2315": {
      "op": "DUP1"
    },
    "2316": {
      "op": "SWAP5"
    },
    "2317": {
      "op": "POP"
    },
    "2318": {
      "op": "POP"
    },
    "2319": {
      "op": "POP"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "op": "POP"
    },
    "2322": {
      "op": "SWAP3"
    },
    "2323": {
      "op": "SWAP2"
    },
    "2324": {
      "op": "POP"
    },
    "2325": {
      "op": "POP"
    },
    "2326": {
      "jump": "o",
      "op": "JUMP"
    },
    "2327": {
      "op": "JUMPDEST"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2332": {
      "op": "DUP3"
    },
    "2333": {
      "op": "DUP5"
    },
    "2334": {
      "op": "SUB"
    },
    "2335": {
      "op": "SLT"
    },
    "2336": {
      "op": "ISZERO"
    },
    "2337": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2340": {
      "op": "JUMPI"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2343": {
      "op": "DUP1"
    },
    "2344": {
      "op": "REVERT"
    },
    "2345": {
      "op": "JUMPDEST"
    },
    "2346": {
      "op": "DUP2"
    },
    "2347": {
      "op": "CALLDATALOAD"
    },
    "2348": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2357": {
      "op": "DUP1"
    },
    "2358": {
      "op": "DUP3"
    },
    "2359": {
      "op": "GT"
    },
    "2360": {
      "op": "ISZERO"
    },
    "2361": {
      "op": "PUSH2",
      "value": "0x941"
    },
    "2364": {
      "op": "JUMPI"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2367": {
      "op": "DUP1"
    },
    "2368": {
      "op": "REVERT"
    },
    "2369": {
      "op": "JUMPDEST"
    },
    "2370": {
      "op": "SWAP1"
    },
    "2371": {
      "op": "DUP4"
    },
    "2372": {
      "op": "ADD"
    },
    "2373": {
      "op": "SWAP1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2376": {
      "op": "DUP3"
    },
    "2377": {
      "op": "DUP7"
    },
    "2378": {
      "op": "SUB"
    },
    "2379": {
      "op": "SLT"
    },
    "2380": {
      "op": "ISZERO"
    },
    "2381": {
      "op": "PUSH2",
      "value": "0x955"
    },
    "2384": {
      "op": "JUMPI"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2387": {
      "op": "DUP1"
    },
    "2388": {
      "op": "REVERT"
    },
    "2389": {
      "op": "JUMPDEST"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2392": {
      "op": "MLOAD"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2395": {
      "op": "DUP2"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "op": "DUP2"
    },
    "2398": {
      "op": "DUP2"
    },
    "2399": {
      "op": "LT"
    },
    "2400": {
      "op": "DUP4"
    },
    "2401": {
      "op": "DUP3"
    },
    "2402": {
      "op": "GT"
    },
    "2403": {
      "op": "OR"
    },
    "2404": {
      "op": "ISZERO"
    },
    "2405": {
      "op": "PUSH2",
      "value": "0x970"
    },
    "2408": {
      "op": "JUMPI"
    },
    "2409": {
      "op": "PUSH2",
      "value": "0x970"
    },
    "2412": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2415": {
      "jump": "i",
      "op": "JUMP"
    },
    "2416": {
      "op": "JUMPDEST"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2419": {
      "op": "MSTORE"
    },
    "2420": {
      "op": "DUP3"
    },
    "2421": {
      "op": "CALLDATALOAD"
    },
    "2422": {
      "op": "DUP3"
    },
    "2423": {
      "op": "DUP2"
    },
    "2424": {
      "op": "GT"
    },
    "2425": {
      "op": "ISZERO"
    },
    "2426": {
      "op": "PUSH2",
      "value": "0x982"
    },
    "2429": {
      "op": "JUMPI"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2432": {
      "op": "DUP1"
    },
    "2433": {
      "op": "REVERT"
    },
    "2434": {
      "op": "JUMPDEST"
    },
    "2435": {
      "op": "PUSH2",
      "value": "0x98E"
    },
    "2438": {
      "op": "DUP8"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "DUP7"
    },
    "2441": {
      "op": "ADD"
    },
    "2442": {
      "op": "PUSH2",
      "value": "0x88A"
    },
    "2445": {
      "jump": "i",
      "op": "JUMP"
    },
    "2446": {
      "op": "JUMPDEST"
    },
    "2447": {
      "op": "DUP3"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "POP"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2452": {
      "op": "DUP4"
    },
    "2453": {
      "op": "ADD"
    },
    "2454": {
      "op": "CALLDATALOAD"
    },
    "2455": {
      "op": "DUP3"
    },
    "2456": {
      "op": "DUP2"
    },
    "2457": {
      "op": "GT"
    },
    "2458": {
      "op": "ISZERO"
    },
    "2459": {
      "op": "PUSH2",
      "value": "0x9A3"
    },
    "2462": {
      "op": "JUMPI"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2465": {
      "op": "DUP1"
    },
    "2466": {
      "op": "REVERT"
    },
    "2467": {
      "op": "JUMPDEST"
    },
    "2468": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2471": {
      "op": "DUP8"
    },
    "2472": {
      "op": "DUP3"
    },
    "2473": {
      "op": "DUP7"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "op": "PUSH2",
      "value": "0x88A"
    },
    "2478": {
      "jump": "i",
      "op": "JUMP"
    },
    "2479": {
      "op": "JUMPDEST"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2482": {
      "op": "DUP4"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "MSTORE"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "SWAP6"
    },
    "2487": {
      "op": "SWAP5"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "op": "POP"
    },
    "2492": {
      "op": "POP"
    },
    "2493": {
      "jump": "o",
      "op": "JUMP"
    },
    "2494": {
      "op": "JUMPDEST"
    },
    "2495": {
      "op": "DUP1"
    },
    "2496": {
      "op": "CALLDATALOAD"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2503": {
      "op": "SHL"
    },
    "2504": {
      "op": "SUB"
    },
    "2505": {
      "op": "DUP2"
    },
    "2506": {
      "op": "AND"
    },
    "2507": {
      "op": "DUP2"
    },
    "2508": {
      "op": "EQ"
    },
    "2509": {
      "op": "PUSH2",
      "value": "0x9D5"
    },
    "2512": {
      "op": "JUMPI"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2515": {
      "op": "DUP1"
    },
    "2516": {
      "op": "REVERT"
    },
    "2517": {
      "op": "JUMPDEST"
    },
    "2518": {
      "op": "SWAP2"
    },
    "2519": {
      "op": "SWAP1"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "jump": "o",
      "op": "JUMP"
    },
    "2522": {
      "op": "JUMPDEST"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2525": {
      "op": "DUP1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2528": {
      "op": "DUP4"
    },
    "2529": {
      "op": "DUP6"
    },
    "2530": {
      "op": "SUB"
    },
    "2531": {
      "op": "SLT"
    },
    "2532": {
      "op": "ISZERO"
    },
    "2533": {
      "op": "PUSH2",
      "value": "0x9ED"
    },
    "2536": {
      "op": "JUMPI"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2539": {
      "op": "DUP1"
    },
    "2540": {
      "op": "REVERT"
    },
    "2541": {
      "op": "JUMPDEST"
    },
    "2542": {
      "op": "PUSH2",
      "value": "0x9F6"
    },
    "2545": {
      "op": "DUP4"
    },
    "2546": {
      "op": "PUSH2",
      "value": "0x9BE"
    },
    "2549": {
      "jump": "i",
      "op": "JUMP"
    },
    "2550": {
      "op": "JUMPDEST"
    },
    "2551": {
      "op": "SWAP5"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2554": {
      "op": "SWAP4"
    },
    "2555": {
      "op": "SWAP1"
    },
    "2556": {
      "op": "SWAP4"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "CALLDATALOAD"
    },
    "2559": {
      "op": "SWAP4"
    },
    "2560": {
      "op": "POP"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "jump": "o",
      "op": "JUMP"
    },
    "2564": {
      "op": "JUMPDEST"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2569": {
      "op": "DUP3"
    },
    "2570": {
      "op": "DUP5"
    },
    "2571": {
      "op": "SUB"
    },
    "2572": {
      "op": "SLT"
    },
    "2573": {
      "op": "ISZERO"
    },
    "2574": {
      "op": "PUSH2",
      "value": "0xA16"
    },
    "2577": {
      "op": "JUMPI"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2580": {
      "op": "DUP1"
    },
    "2581": {
      "op": "REVERT"
    },
    "2582": {
      "op": "JUMPDEST"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2585": {
      "op": "MLOAD"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2588": {
      "op": "DUP2"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "DUP2"
    },
    "2591": {
      "op": "DUP2"
    },
    "2592": {
      "op": "LT"
    },
    "2593": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2602": {
      "op": "DUP3"
    },
    "2603": {
      "op": "GT"
    },
    "2604": {
      "op": "OR"
    },
    "2605": {
      "op": "ISZERO"
    },
    "2606": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2609": {
      "op": "JUMPI"
    },
    "2610": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2613": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2616": {
      "jump": "i",
      "op": "JUMP"
    },
    "2617": {
      "op": "JUMPDEST"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2620": {
      "op": "MSTORE"
    },
    "2621": {
      "op": "DUP3"
    },
    "2622": {
      "op": "CALLDATALOAD"
    },
    "2623": {
      "op": "DUP2"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2627": {
      "op": "SWAP3"
    },
    "2628": {
      "op": "DUP4"
    },
    "2629": {
      "op": "ADD"
    },
    "2630": {
      "op": "CALLDATALOAD"
    },
    "2631": {
      "op": "SWAP3"
    },
    "2632": {
      "op": "DUP2"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "op": "SWAP3"
    },
    "2635": {
      "op": "SWAP1"
    },
    "2636": {
      "op": "SWAP3"
    },
    "2637": {
      "op": "MSTORE"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "op": "SWAP2"
    },
    "2640": {
      "op": "SWAP1"
    },
    "2641": {
      "op": "POP"
    },
    "2642": {
      "jump": "o",
      "op": "JUMP"
    },
    "2643": {
      "op": "JUMPDEST"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2648": {
      "op": "DUP3"
    },
    "2649": {
      "op": "DUP5"
    },
    "2650": {
      "op": "SUB"
    },
    "2651": {
      "op": "SLT"
    },
    "2652": {
      "op": "ISZERO"
    },
    "2653": {
      "op": "PUSH2",
      "value": "0xA65"
    },
    "2656": {
      "op": "JUMPI"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2659": {
      "op": "DUP1"
    },
    "2660": {
      "op": "REVERT"
    },
    "2661": {
      "op": "JUMPDEST"
    },
    "2662": {
      "op": "PUSH2",
      "value": "0xA6E"
    },
    "2665": {
      "op": "DUP3"
    },
    "2666": {
      "op": "PUSH2",
      "value": "0x9BE"
    },
    "2669": {
      "jump": "i",
      "op": "JUMP"
    },
    "2670": {
      "op": "JUMPDEST"
    },
    "2671": {
      "op": "SWAP4"
    },
    "2672": {
      "op": "SWAP3"
    },
    "2673": {
      "op": "POP"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "jump": "o",
      "op": "JUMP"
    },
    "2677": {
      "op": "JUMPDEST"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2682": {
      "op": "DUP3"
    },
    "2683": {
      "op": "DUP5"
    },
    "2684": {
      "op": "SUB"
    },
    "2685": {
      "op": "SLT"
    },
    "2686": {
      "op": "ISZERO"
    },
    "2687": {
      "op": "PUSH2",
      "value": "0xA87"
    },
    "2690": {
      "op": "JUMPI"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2693": {
      "op": "DUP1"
    },
    "2694": {
      "op": "REVERT"
    },
    "2695": {
      "op": "JUMPDEST"
    },
    "2696": {
      "op": "POP"
    },
    "2697": {
      "op": "CALLDATALOAD"
    },
    "2698": {
      "op": "SWAP2"
    },
    "2699": {
      "op": "SWAP1"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "jump": "o",
      "op": "JUMP"
    },
    "2702": {
      "op": "JUMPDEST"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2705": {
      "op": "DUP3"
    },
    "2706": {
      "op": "MLOAD"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2709": {
      "op": "JUMPDEST"
    },
    "2710": {
      "op": "DUP2"
    },
    "2711": {
      "op": "DUP2"
    },
    "2712": {
      "op": "LT"
    },
    "2713": {
      "op": "ISZERO"
    },
    "2714": {
      "op": "PUSH2",
      "value": "0xAAF"
    },
    "2717": {
      "op": "JUMPI"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2720": {
      "op": "DUP2"
    },
    "2721": {
      "op": "DUP7"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "op": "DUP2"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "op": "MLOAD"
    },
    "2726": {
      "op": "DUP6"
    },
    "2727": {
      "op": "DUP4"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "MSTORE"
    },
    "2730": {
      "op": "ADD"
    },
    "2731": {
      "op": "PUSH2",
      "value": "0xA95"
    },
    "2734": {
      "op": "JUMP"
    },
    "2735": {
      "op": "JUMPDEST"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2739": {
      "op": "SWAP3"
    },
    "2740": {
      "op": "ADD"
    },
    "2741": {
      "op": "SWAP2"
    },
    "2742": {
      "op": "DUP3"
    },
    "2743": {
      "op": "MSTORE"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "op": "SWAP2"
    },
    "2746": {
      "op": "SWAP1"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "fb9bd987b9cf3fecb3abb3c4b9e8b6c5870f1b8a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// import \"./sbt-achievements.sol\";\n\ncontract SBT {\n    modifier soulExists(uint _soul_id) {\n        require(addressOfSoul[_soul_id] != address(0), \"No soul exists\");\n        _;\n    }\n\n    modifier mintedNotClaimed(uint _soul_id) {\n        require(minted[_soul_id], \"Non minted soul\");\n        require(addressOfSoul[_soul_id] == address(0), \"Soul is already claimed\");\n        _;\n    }\n\n    modifier soulDoesntExist(uint _soul_id) {\n        require(addressOfSoul[_soul_id] == address(0), \"Soul exists\");\n        require(!minted[_soul_id], \"Soul is minted, but not claimed\");\n        _;\n    }\n\n    struct PersonalDataHashed {\n        bytes32 github_hash;\n        bytes32 email_address_hash;\n    }\n\n    struct PersonalData {\n        string github_url;\n        string email_address;\n    }\n\n    struct Soul {\n        uint soul_id;\n        PersonalDataHashed hashedData;\n    }\n\n    address public operator;\n    event Mint(uint _soul_id);\n    event Claim(uint _soul_id);\n    event Burn(uint _soul_id_to_burn);\n    event Update(uint _soul_id_to_update);\n\n    constructor() {\n        operator = msg.sender;\n    }\n\n    mapping(uint => address) private addressOfSoul; //soul_id => address of owner\n    mapping(address => uint) soulIdOfAddress; //address => soul_id\n    mapping(uint => Soul) private souls;\n    mapping(uint => bool) private minted;\n\n    // Function that hashes content of user's hashedData. Must be rewritten if PersonalData fields change.\n    function hashPersonalData(PersonalData memory _data)\n        internal\n        pure\n        returns (PersonalDataHashed memory)\n    {\n        PersonalDataHashed memory hashedData;\n        hashedData.email_address_hash = keccak256(\n            abi.encodePacked(_data.email_address)\n        );\n        hashedData.github_hash = keccak256(\n            abi.encodePacked(_data.github_url)\n        );\n        return hashedData;\n    }\n\n    // Mints the SBT for given address and with given soul_id. Can be called only by this contract.\n    function mint(address _soul_address, uint _soul_id)\n        external\n        soulDoesntExist(_soul_id)\n    {\n        require(msg.sender == operator, \"Only operator can mint new souls\");\n        soulIdOfAddress[_soul_address] = _soul_id;\n        minted[_soul_id] = true;\n        emit Mint(_soul_id);\n    }\n\n    function claim(PersonalDataHashed memory _soulData)\n        external\n        mintedNotClaimed(soulIdOfAddress[msg.sender])\n    {\n        uint _soul_id = soulIdOfAddress[msg.sender];\n        addressOfSoul[_soul_id] = msg.sender;\n        souls[_soul_id].soul_id = _soul_id;\n        souls[_soul_id].hashedData = _soulData;\n        emit Claim(_soul_id);\n    }\n\n    // Deletes SBT of msg.sender from storage.\n    function burn() external {\n        uint _soul_id_to_burn = soulIdOfAddress[msg.sender];\n        require(_soul_id_to_burn != 0, \"Soul doesn't exist\");\n        delete souls[_soul_id_to_burn];\n        delete soulIdOfAddress[msg.sender];\n        delete addressOfSoul[_soul_id_to_burn];\n        emit Burn(_soul_id_to_burn);\n    }\n\n    // Updates hashedData of msg.sender's SBT by replacing with '_newSoulData'.\n    function update(PersonalDataHashed memory _newSoulData)\n        external\n        soulExists(soulIdOfAddress[msg.sender])\n    {\n        souls[soulIdOfAddress[msg.sender]].hashedData = _newSoulData;\n        emit Update(soulIdOfAddress[msg.sender]);\n    }\n\n    // Returns true, if there is an SBT for given address.\n    function hasSoul(address _soul) external view returns (bool) {\n        return soulIdOfAddress[_soul] != 0;\n    }\n\n    // Returns SBT of given address, if there is one; otherwise throws an error.\n    function getSoul(address _soul) external view returns (Soul memory) {\n        require(soulIdOfAddress[_soul] != 0, \"Soul doesn't exist\");\n        return souls[soulIdOfAddress[_soul]];\n    }\n\n    // Returns owner of given '_soul_id', if there is one; otherwise returns NULL-address.\n    function getOwner(uint _soul_id) external view returns (address) {\n        require(\n            msg.sender == operator,\n            \"Only this contract can view this hashed data\"\n        );\n        return addressOfSoul[_soul_id];\n    }\n\n    // Allows user to verify, that their data stored in our app is it's own and doesn't change.\n    function verifyDataCorrectness(PersonalData memory _dataToVerify)\n        external\n        view\n        returns (bool)\n    {\n        PersonalDataHashed memory hashedDataFromStorage = souls[\n            soulIdOfAddress[msg.sender]\n        ].hashedData;\n        PersonalDataHashed memory hashedDataToVerify = hashPersonalData(\n            _dataToVerify\n        );\n        if (\n            hashedDataToVerify.email_address_hash !=\n            hashedDataFromStorage.email_address_hash\n        ) {\n            return false;\n        }\n        if (\n            hashedDataToVerify.github_hash !=\n            hashedDataFromStorage.github_hash\n        ) {\n            return false;\n        }\n        return true;\n    }\n}\n",
  "sourceMap": "95:4921:0:-:0;;;1110:52;;;;;;;;;-1:-1:-1;1134:8:0;:21;;-1:-1:-1;;;;;;1134:21:0;1145:10;1134:21;;;95:4921;;;;;;",
  "sourcePath": "contracts/sbt.sol",
  "type": "contract"
}