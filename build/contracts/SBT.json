{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id_to_burn",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "MintAchievement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_new_address",
          "type": "address"
        }
      ],
      "name": "SetAchevementsContractAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id_to_update",
          "type": "uint256"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "github_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "email_address_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SBT.PersonalDataHashed",
          "name": "_soulData",
          "type": "tuple"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "getSoul",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "soul_id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "github_hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "email_address_hash",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct SBT.PersonalDataHashed",
              "name": "hashedData",
              "type": "tuple"
            }
          ],
          "internalType": "struct SBT.Soul",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "hasSoul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kAchevementsContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "achievement_id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "achievement_type",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "can_owner_be_changed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "verifier",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "is_verified",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "data_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SBT_achievement_interface.Achievement",
          "name": "_achievementData",
          "type": "tuple"
        }
      ],
      "name": "mint_achievement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_new_address",
          "type": "address"
        }
      ],
      "name": "setAchevementsContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "github_url",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email_address",
              "type": "string"
            }
          ],
          "internalType": "struct SBT.PersonalData",
          "name": "_dataToVerify",
          "type": "tuple"
        }
      ],
      "name": "verifyDataCorrectness",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/sbt.sol"
  },
  "ast": {
    "absolutePath": "contracts/sbt.sol",
    "exportedSymbols": {
      "SBT": [
        509
      ],
      "SBT_achievement_interface": [
        44
      ]
    },
    "id": 510,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SBT_achievement_interface",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 44,
        "linearizedBaseContracts": [
          44
        ],
        "name": "SBT_achievement_interface",
        "nameLocation": "105:25:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SBT_achievement_interface.Achievement",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "achievement_id",
                "nameLocation": "171:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "166:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "166:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "achievement_type",
                "nameLocation": "200:16:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "195:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "195:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "issuer",
                "nameLocation": "234:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "226:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "can_owner_be_changed",
                "nameLocation": "255:20:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "250:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "250:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "293:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "285:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "285:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "verifier",
                "nameLocation": "316:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "308:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "308:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "is_verified",
                "nameLocation": "339:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "334:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 14,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "334:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "data_hash",
                "nameLocation": "368:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "360:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 16,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "360:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Achievement",
            "nameLocation": "144:11:0",
            "nodeType": "StructDefinition",
            "scope": 44,
            "src": "137:247:0",
            "visibility": "public"
          },
          {
            "functionSelector": "f3913577",
            "id": 24,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "399:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_achievementData",
                  "nameLocation": "423:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "404:35:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Achievement_$18_memory_ptr",
                    "typeString": "struct SBT_achievement_interface.Achievement"
                  },
                  "typeName": {
                    "id": 20,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19,
                      "name": "Achievement",
                      "nameLocations": [
                        "404:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18,
                      "src": "404:11:0"
                    },
                    "referencedDeclaration": 18,
                    "src": "404:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Achievement_$18_storage_ptr",
                      "typeString": "struct SBT_achievement_interface.Achievement"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:37:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "449:0:0"
            },
            "scope": 44,
            "src": "390:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "42966c68",
            "id": 29,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "465:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_achievementId",
                  "nameLocation": "475:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "470:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "469:21:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:0"
            },
            "scope": 44,
            "src": "456:44:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "7192711f",
            "id": 36,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwner",
            "nameLocation": "515:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_achievementId",
                  "nameLocation": "532:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "527:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "556:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "548:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "526:40:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:0"
            },
            "scope": 44,
            "src": "506:70:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "fb17cac9",
            "id": 43,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "changeAchievementVerification",
            "nameLocation": "591:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_achievementId",
                  "nameLocation": "626:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "621:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_newStatus",
                  "nameLocation": "647:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "642:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "620:38:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:0"
            },
            "scope": 44,
            "src": "582:94:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 510,
        "src": "95:583:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SBT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 509,
        "linearizedBaseContracts": [
          509
        ],
        "name": "SBT",
        "nameLocation": "689:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "734:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 49,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "752:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 51,
                          "indexExpression": {
                            "id": 50,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "766:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "752:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "787:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "779:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 52,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "779:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "779:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "752:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20646f65736e2774206578697374",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "791:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        },
                        "value": "Soul doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "744:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "744:68:0"
                },
                {
                  "id": 60,
                  "nodeType": "PlaceholderStatement",
                  "src": "822:1:0"
                }
              ]
            },
            "id": 62,
            "name": "soulExists",
            "nameLocation": "708:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "724:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "719:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:15:0"
            },
            "src": "699:131:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "885:199:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 67,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "916:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 69,
                          "indexExpression": {
                            "id": 68,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "930:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "916:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "951:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "943:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 70,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "943:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "943:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "916:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20697320616c726561647920636c61696d6564",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "967:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d39c9e6cb452b6bbdf84404464d4ec4366033e704f753c984cc7a9fee4e24c9",
                          "typeString": "literal_string \"Soul is already claimed\""
                        },
                        "value": "Soul is already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d39c9e6cb452b6bbdf84404464d4ec4366033e704f753c984cc7a9fee4e24c9",
                          "typeString": "literal_string \"Soul is already claimed\""
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "895:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "895:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "895:107:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 79,
                          "name": "mintedNotClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "1020:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 81,
                        "indexExpression": {
                          "id": 80,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1037:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6e206d696e74656420736f756c",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1048:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65c2c533625d1749fb6bbe85fb96e791d2703d53c2542b484e969e587ca0b05b",
                          "typeString": "literal_string \"Non minted soul\""
                        },
                        "value": "Non minted soul"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65c2c533625d1749fb6bbe85fb96e791d2703d53c2542b484e969e587ca0b05b",
                          "typeString": "literal_string \"Non minted soul\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1012:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:54:0"
                },
                {
                  "id": 85,
                  "nodeType": "PlaceholderStatement",
                  "src": "1076:1:0"
                }
              ]
            },
            "id": 87,
            "name": "mintedNotClaimedModifier",
            "nameLocation": "845:24:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "875:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "870:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "869:15:0"
            },
            "src": "836:248:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1124:170:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 92,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "1142:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 94,
                          "indexExpression": {
                            "id": 93,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "1156:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1142:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1177:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1169:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 95,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1169:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1169:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1142:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20657869737473",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1181:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5712a0b6990d8393f8bdfbec613fb6b339845140e0b59a8a22fe68d059fef309",
                          "typeString": "literal_string \"Soul exists\""
                        },
                        "value": "Soul exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5712a0b6990d8393f8bdfbec613fb6b339845140e0b59a8a22fe68d059fef309",
                          "typeString": "literal_string \"Soul exists\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1134:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1213:27:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 104,
                            "name": "mintedNotClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "1214:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 106,
                          "indexExpression": {
                            "id": 105,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "1231:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1214:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1242:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48abde2d233cd5cc62bc8080455522b9ff216703e948a24d5acfb7583dcef108",
                          "typeString": "literal_string \"Soul is minted, but not claimed\""
                        },
                        "value": "Soul is minted, but not claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48abde2d233cd5cc62bc8080455522b9ff216703e948a24d5acfb7583dcef108",
                          "typeString": "literal_string \"Soul is minted, but not claimed\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1205:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:71:0"
                },
                {
                  "id": 111,
                  "nodeType": "PlaceholderStatement",
                  "src": "1286:1:0"
                }
              ]
            },
            "id": 113,
            "name": "notMinted",
            "nameLocation": "1099:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1114:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1109:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1108:15:0"
            },
            "src": "1090:204:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "SBT.PersonalDataHashed",
            "id": 118,
            "members": [
              {
                "constant": false,
                "id": 115,
                "mutability": "mutable",
                "name": "github_hash",
                "nameLocation": "1344:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "1336:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 114,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1336:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 117,
                "mutability": "mutable",
                "name": "email_address_hash",
                "nameLocation": "1373:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "1365:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 116,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1365:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PersonalDataHashed",
            "nameLocation": "1307:18:0",
            "nodeType": "StructDefinition",
            "scope": 509,
            "src": "1300:98:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SBT.PersonalData",
            "id": 123,
            "members": [
              {
                "constant": false,
                "id": 120,
                "mutability": "mutable",
                "name": "github_url",
                "nameLocation": "1441:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1434:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 119,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1434:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 122,
                "mutability": "mutable",
                "name": "email_address",
                "nameLocation": "1468:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 123,
                "src": "1461:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 121,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1461:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PersonalData",
            "nameLocation": "1411:12:0",
            "nodeType": "StructDefinition",
            "scope": 509,
            "src": "1404:84:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SBT.Soul",
            "id": 129,
            "members": [
              {
                "constant": false,
                "id": 125,
                "mutability": "mutable",
                "name": "soul_id",
                "nameLocation": "1521:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 129,
                "src": "1516:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 124,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1516:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 128,
                "mutability": "mutable",
                "name": "hashedData",
                "nameLocation": "1557:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 129,
                "src": "1538:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                  "typeString": "struct SBT.PersonalDataHashed"
                },
                "typeName": {
                  "id": 127,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 126,
                    "name": "PersonalDataHashed",
                    "nameLocations": [
                      "1538:18:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 118,
                    "src": "1538:18:0"
                  },
                  "referencedDeclaration": 118,
                  "src": "1538:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Soul",
            "nameLocation": "1501:4:0",
            "nodeType": "StructDefinition",
            "scope": 509,
            "src": "1494:80:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "570ca735",
            "id": 131,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1595:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "1580:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 130,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1580:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "df8d8159",
            "id": 134,
            "mutability": "mutable",
            "name": "kAchevementsContract",
            "nameLocation": "1624:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "1609:88:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 132,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1609:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838303136363139323831463838386430313163383464324532613533343864393431376337373542",
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1655:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x8016619281F888d011c84d2E2a5348d9417c775B"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 137,
            "mutability": "mutable",
            "name": "SBT_achievement",
            "nameLocation": "1730:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "1704:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
              "typeString": "contract SBT_achievement_interface"
            },
            "typeName": {
              "id": 136,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 135,
                "name": "SBT_achievement_interface",
                "nameLocations": [
                  "1704:25:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44,
                "src": "1704:25:0"
              },
              "referencedDeclaration": 44,
              "src": "1704:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                "typeString": "contract SBT_achievement_interface"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a84665",
            "id": 141,
            "name": "Mint",
            "nameLocation": "1757:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1767:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1762:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:15:0"
            },
            "src": "1751:26:0"
          },
          {
            "anonymous": false,
            "eventSelector": "7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f7",
            "id": 145,
            "name": "Claim",
            "nameLocation": "1788:5:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1799:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1794:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:15:0"
            },
            "src": "1782:27:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d49a4559bddcf9b3f02926936008febf67b424d2f0e30b5cbb9d954b8d7a68fb",
            "id": 149,
            "name": "MintAchievement",
            "nameLocation": "1820:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1841:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1836:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1835:15:0"
            },
            "src": "1814:37:0"
          },
          {
            "anonymous": false,
            "eventSelector": "b90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb",
            "id": 153,
            "name": "Burn",
            "nameLocation": "1862:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id_to_burn",
                  "nameLocation": "1872:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "1867:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1867:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1866:23:0"
            },
            "src": "1856:34:0"
          },
          {
            "anonymous": false,
            "eventSelector": "164f7b2ab803097dab5e39f06d2e4f3c3ddc5d4171abbdcc3e76443b8359c7f5",
            "id": 157,
            "name": "Update",
            "nameLocation": "1901:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id_to_update",
                  "nameLocation": "1913:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1908:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1907:25:0"
            },
            "src": "1895:38:0"
          },
          {
            "anonymous": false,
            "eventSelector": "0763c88eaa6a598acce6051f1d0326944c2b7166cc9512b51414a5aadab51a9c",
            "id": 161,
            "name": "SetAchevementsContractAddress",
            "nameLocation": "1944:29:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_new_address",
                  "nameLocation": "1982:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1974:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:22:0"
            },
            "src": "1938:58:0"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2016:113:0",
              "statements": [
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "SBT_achievement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "2026:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                        "typeString": "contract SBT_achievement_interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 166,
                          "name": "kAchevementsContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "2070:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 165,
                        "name": "SBT_achievement_interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2044:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SBT_achievement_interface_$44_$",
                          "typeString": "type(contract SBT_achievement_interface)"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2044:47:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                        "typeString": "contract SBT_achievement_interface"
                      }
                    },
                    "src": "2026:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                      "typeString": "contract SBT_achievement_interface"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2026:65:0"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "2101:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 171,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2112:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2116:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2112:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2101:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2101:21:0"
                }
              ]
            },
            "id": 176,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2013:2:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2016:0:0"
            },
            "scope": 509,
            "src": "2002:127:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 180,
            "mutability": "mutable",
            "name": "addressOfSoul",
            "nameLocation": "2168:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "2135:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 179,
              "keyType": {
                "id": 177,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2143:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2135:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 178,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2151:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 184,
            "mutability": "mutable",
            "name": "soulIdOfAddress",
            "nameLocation": "2242:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "2217:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 183,
              "keyType": {
                "id": 181,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2225:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2217:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 182,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2236:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 189,
            "mutability": "mutable",
            "name": "souls",
            "nameLocation": "2314:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "2284:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
              "typeString": "mapping(uint256 => struct SBT.Soul)"
            },
            "typeName": {
              "id": 188,
              "keyType": {
                "id": 185,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2292:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2284:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                "typeString": "mapping(uint256 => struct SBT.Soul)"
              },
              "valueType": {
                "id": 187,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 186,
                  "name": "Soul",
                  "nameLocations": [
                    "2300:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "2300:4:0"
                },
                "referencedDeclaration": 129,
                "src": "2300:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Soul_$129_storage_ptr",
                  "typeString": "struct SBT.Soul"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 193,
            "mutability": "mutable",
            "name": "mintedNotClaimed",
            "nameLocation": "2355:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "2325:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 192,
              "keyType": {
                "id": 190,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2333:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2325:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 191,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2341:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "2616:272:0",
              "statements": [
                {
                  "assignments": [
                    204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "hashedData",
                      "nameLocation": "2652:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "2626:36:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 203,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 202,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "2626:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 118,
                          "src": "2626:18:0"
                        },
                        "referencedDeclaration": 118,
                        "src": "2626:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 205,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2626:36:0"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 206,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "2672:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2683:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117,
                      "src": "2672:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 212,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "2744:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2750:13:0",
                              "memberName": "email_address",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 122,
                              "src": "2744:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 210,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2727:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2731:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2727:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2727:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 209,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2704:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2704:70:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2672:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:102:0"
                },
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 218,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "2784:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2795:11:0",
                      "memberName": "github_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "2784:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 224,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "2836:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2842:10:0",
                              "memberName": "github_url",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 120,
                              "src": "2836:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 222,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2819:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2823:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2819:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2819:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 221,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2809:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2809:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2784:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2784:70:0"
                },
                {
                  "expression": {
                    "id": 230,
                    "name": "hashedData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 204,
                    "src": "2871:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                      "typeString": "struct SBT.PersonalDataHashed memory"
                    }
                  },
                  "functionReturnParameters": 201,
                  "id": 231,
                  "nodeType": "Return",
                  "src": "2864:17:0"
                }
              ]
            },
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashPersonalData",
            "nameLocation": "2494:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2531:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2511:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                    "typeString": "struct SBT.PersonalData"
                  },
                  "typeName": {
                    "id": 195,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 194,
                      "name": "PersonalData",
                      "nameLocations": [
                        "2511:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "2511:12:0"
                    },
                    "referencedDeclaration": 123,
                    "src": "2511:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalData_$123_storage_ptr",
                      "typeString": "struct SBT.PersonalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2510:27:0"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2585:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 199,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 198,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "2585:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 118,
                      "src": "2585:18:0"
                    },
                    "referencedDeclaration": 118,
                    "src": "2585:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2584:27:0"
            },
            "scope": 509,
            "src": "2485:403:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "2964:228:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 239,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2995:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2999:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2995:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 241,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "3009:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2995:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468697320636f6e74726163742063616e2073657420746869732061646472657373",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3031:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e226851fdfdcc57de5d73b9939f78f7b382abe858dc46b5ff524bd7f72d1419",
                          "typeString": "literal_string \"Only this contract can set this address\""
                        },
                        "value": "Only this contract can set this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e226851fdfdcc57de5d73b9939f78f7b382abe858dc46b5ff524bd7f72d1419",
                          "typeString": "literal_string \"Only this contract can set this address\""
                        }
                      ],
                      "id": 238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2974:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2974:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2974:108:0"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 246,
                      "name": "kAchevementsContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3092:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 247,
                      "name": "_new_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "3115:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3092:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "3092:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "_new_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3172:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 250,
                      "name": "SetAchevementsContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "3142:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3142:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "EmitStatement",
                  "src": "3137:48:0"
                }
              ]
            },
            "functionSelector": "f72aabf3",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAchevementsContractAddress",
            "nameLocation": "2903:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_new_address",
                  "nameLocation": "2941:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "2933:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2933:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2932:22:0"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2964:0:0"
            },
            "scope": 509,
            "src": "2894:298:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "3399:207:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 266,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3417:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3421:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3417:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 268,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "3431:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3417:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c73",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3441:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be1622ce1e42e9a17530ea674400f0d6d3e7ed52ff5b74a970e36309147e85d9",
                          "typeString": "literal_string \"Only operator can mint new souls\""
                        },
                        "value": "Only operator can mint new souls"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be1622ce1e42e9a17530ea674400f0d6d3e7ed52ff5b74a970e36309147e85d9",
                          "typeString": "literal_string \"Only operator can mint new souls\""
                        }
                      ],
                      "id": 265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3409:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3409:67:0"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 273,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "3486:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 275,
                      "indexExpression": {
                        "id": 274,
                        "name": "_soul_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3502:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3486:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 276,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "3519:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3486:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "3486:41:0"
                },
                {
                  "expression": {
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 279,
                        "name": "mintedNotClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3537:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 281,
                      "indexExpression": {
                        "id": 280,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3554:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3537:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3566:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3537:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3537:33:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 286,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3590:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "3585:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3585:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "EmitStatement",
                  "src": "3580:19:0"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 262,
                    "name": "_soul_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 259,
                    "src": "3385:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 263,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 261,
                  "name": "notMinted",
                  "nameLocations": [
                    "3375:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "3375:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3375:19:0"
              }
            ],
            "name": "mint",
            "nameLocation": "3307:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_soul_address",
                  "nameLocation": "3320:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "3312:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "3340:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "3335:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3311:38:0"
            },
            "returnParameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3399:0:0"
            },
            "scope": 509,
            "src": "3298:308:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "3813:271:0",
              "statements": [
                {
                  "assignments": [
                    303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "_soul_id",
                      "nameLocation": "3828:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "3823:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3823:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 308,
                  "initialValue": {
                    "baseExpression": {
                      "id": 304,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "3839:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 307,
                    "indexExpression": {
                      "expression": {
                        "id": 305,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3855:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3859:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3855:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3839:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3823:43:0"
                },
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3876:33:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 309,
                        "name": "mintedNotClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3883:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 311,
                      "indexExpression": {
                        "id": 310,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3900:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3883:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3876:33:0"
                },
                {
                  "expression": {
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 314,
                        "name": "addressOfSoul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "3919:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 316,
                      "indexExpression": {
                        "id": 315,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3933:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3919:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3945:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3949:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3945:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3919:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:36:0"
                },
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 321,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "3965:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 323,
                        "indexExpression": {
                          "id": 322,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "3971:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3965:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$129_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3981:7:0",
                      "memberName": "soul_id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 125,
                      "src": "3965:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 325,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "3991:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3965:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3965:34:0"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 328,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "4009:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "id": 329,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "4015:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4009:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$129_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4025:10:0",
                      "memberName": "hashedData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 128,
                      "src": "4009:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage",
                        "typeString": "struct SBT.PersonalDataHashed storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 332,
                      "name": "_soulData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "4038:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed memory"
                      }
                    },
                    "src": "4009:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 336,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "4068:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 335,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "4062:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4062:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "4057:20:0"
                }
              ]
            },
            "functionSelector": "886fc93f",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 296,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "3780:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 299,
                    "indexExpression": {
                      "expression": {
                        "id": 297,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3796:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3800:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3796:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3780:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 300,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 295,
                  "name": "mintedNotClaimedModifier",
                  "nameLocations": [
                    "3755:24:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "3755:24:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3755:53:0"
              }
            ],
            "name": "claim",
            "nameLocation": "3687:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "_soulData",
                  "nameLocation": "3719:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "3693:35:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 292,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 291,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "3693:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 118,
                      "src": "3693:18:0"
                    },
                    "referencedDeclaration": 118,
                    "src": "3693:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3692:37:0"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3813:0:0"
            },
            "scope": 509,
            "src": "3678:406:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "4308:114:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 355,
                        "name": "_achievementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "4339:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Achievement_$18_memory_ptr",
                          "typeString": "struct SBT_achievement_interface.Achievement memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Achievement_$18_memory_ptr",
                          "typeString": "struct SBT_achievement_interface.Achievement memory"
                        }
                      ],
                      "expression": {
                        "id": 352,
                        "name": "SBT_achievement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4318:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SBT_achievement_interface_$44",
                          "typeString": "contract SBT_achievement_interface"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4334:4:0",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "4318:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Achievement_$18_memory_ptr_$returns$__$",
                        "typeString": "function (struct SBT_achievement_interface.Achievement memory) external"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "4318:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 359,
                          "name": "soulIdOfAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "4387:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 362,
                        "indexExpression": {
                          "expression": {
                            "id": 360,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4403:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4407:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4403:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4387:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 358,
                      "name": "MintAchievement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "4371:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4371:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "EmitStatement",
                  "src": "4366:49:0"
                }
              ]
            },
            "functionSelector": "07a7d436",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 346,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "4279:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 349,
                    "indexExpression": {
                      "expression": {
                        "id": 347,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4295:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4299:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4295:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4279:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 345,
                  "name": "soulExists",
                  "nameLocations": [
                    "4268:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62,
                  "src": "4268:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4268:39:0"
              }
            ],
            "name": "mint_achievement",
            "nameLocation": "4165:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_achievementData",
                  "nameLocation": "4236:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "4191:61:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Achievement_$18_memory_ptr",
                    "typeString": "struct SBT_achievement_interface.Achievement"
                  },
                  "typeName": {
                    "id": 342,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 341,
                      "name": "SBT_achievement_interface.Achievement",
                      "nameLocations": [
                        "4191:25:0",
                        "4217:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18,
                      "src": "4191:37:0"
                    },
                    "referencedDeclaration": 18,
                    "src": "4191:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Achievement_$18_storage_ptr",
                      "typeString": "struct SBT_achievement_interface.Achievement"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4181:77:0"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4308:0:0"
            },
            "scope": 509,
            "src": "4156:266:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "4540:237:0",
              "statements": [
                {
                  "assignments": [
                    376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 376,
                      "mutability": "mutable",
                      "name": "_soul_id_to_burn",
                      "nameLocation": "4555:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 402,
                      "src": "4550:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 375,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4550:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 381,
                  "initialValue": {
                    "baseExpression": {
                      "id": 377,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "4574:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 380,
                    "indexExpression": {
                      "expression": {
                        "id": 378,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4590:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4594:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4590:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4574:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4550:51:0"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4611:30:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 382,
                        "name": "souls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "4618:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                          "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                        }
                      },
                      "id": 384,
                      "indexExpression": {
                        "id": 383,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "4624:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4618:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Soul_$129_storage",
                        "typeString": "struct SBT.Soul storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "4611:30:0"
                },
                {
                  "expression": {
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4651:34:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 387,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "4658:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 390,
                      "indexExpression": {
                        "expression": {
                          "id": 388,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4674:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4678:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4674:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4658:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "4651:34:0"
                },
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4695:38:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 393,
                        "name": "addressOfSoul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "4702:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 395,
                      "indexExpression": {
                        "id": 394,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "4716:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4702:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "4695:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 399,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "4753:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 398,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "4748:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4748:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "EmitStatement",
                  "src": "4743:27:0"
                }
              ]
            },
            "functionSelector": "44df8e70",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 369,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "4511:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 372,
                    "indexExpression": {
                      "expression": {
                        "id": 370,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4527:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4531:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4527:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4511:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 368,
                  "name": "soulExists",
                  "nameLocations": [
                    "4500:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62,
                  "src": "4500:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4500:39:0"
              }
            ],
            "name": "burn",
            "nameLocation": "4484:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4488:2:0"
            },
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4540:0:0"
            },
            "scope": 509,
            "src": "4475:302:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "5262:51:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 410,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "5279:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 412,
                      "indexExpression": {
                        "id": 411,
                        "name": "_soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "5295:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5279:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5305:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5279:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 409,
                  "id": 415,
                  "nodeType": "Return",
                  "src": "5272:34:0"
                }
              ]
            },
            "functionSelector": "bdd75202",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasSoul",
            "nameLocation": "5210:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "5226:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "5218:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5218:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5217:15:0"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "5256:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5256:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5255:6:0"
            },
            "scope": 509,
            "src": "5201:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "5468:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 426,
                            "name": "soulIdOfAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "5486:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 428,
                          "indexExpression": {
                            "id": 427,
                            "name": "_soul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "5502:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5486:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5512:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5486:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20646f65736e2774206578697374",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5515:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        },
                        "value": "Soul doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5478:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5478:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "5478:58:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 434,
                      "name": "souls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "5553:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                        "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                      }
                    },
                    "id": 438,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 435,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "5559:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 437,
                      "indexExpression": {
                        "id": 436,
                        "name": "_soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "5575:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5559:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5553:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Soul_$129_storage",
                      "typeString": "struct SBT.Soul storage ref"
                    }
                  },
                  "functionReturnParameters": 424,
                  "id": 439,
                  "nodeType": "Return",
                  "src": "5546:36:0"
                }
              ]
            },
            "functionSelector": "66cfe97f",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSoul",
            "nameLocation": "5409:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "5425:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "5417:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5417:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5416:15:0"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "5455:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Soul_$129_memory_ptr",
                    "typeString": "struct SBT.Soul"
                  },
                  "typeName": {
                    "id": 422,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 421,
                      "name": "Soul",
                      "nameLocations": [
                        "5455:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 129,
                      "src": "5455:4:0"
                    },
                    "referencedDeclaration": 129,
                    "src": "5455:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Soul_$129_storage_ptr",
                      "typeString": "struct SBT.Soul"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5454:13:0"
            },
            "scope": 509,
            "src": "5400:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 460,
              "nodeType": "Block",
              "src": "5751:170:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 449,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5782:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5786:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5782:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 451,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "5796:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5782:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468697320636f6e74726163742063616e20766965772074686973206861736865642064617461",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5818:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27b7e863d546f07584cece8c5abbb10f897c1d51b8b6e9abb975f221a2867c6e",
                          "typeString": "literal_string \"Only this contract can view this hashed data\""
                        },
                        "value": "Only this contract can view this hashed data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27b7e863d546f07584cece8c5abbb10f897c1d51b8b6e9abb975f221a2867c6e",
                          "typeString": "literal_string \"Only this contract can view this hashed data\""
                        }
                      ],
                      "id": 448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5761:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5761:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "5761:113:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 456,
                      "name": "addressOfSoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "5891:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 458,
                    "indexExpression": {
                      "id": 457,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "5905:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5891:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 447,
                  "id": 459,
                  "nodeType": "Return",
                  "src": "5884:30:0"
                }
              ]
            },
            "functionSelector": "c41a360a",
            "id": 461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nameLocation": "5695:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "5709:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 461,
                  "src": "5704:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5704:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5703:15:0"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 461,
                  "src": "5742:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5742:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5741:9:0"
            },
            "scope": 509,
            "src": "5686:235:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "6146:573:0",
              "statements": [
                {
                  "assignments": [
                    471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 471,
                      "mutability": "mutable",
                      "name": "hashedDataFromStorage",
                      "nameLocation": "6182:21:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 507,
                      "src": "6156:47:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 470,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 469,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "6156:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 118,
                          "src": "6156:18:0"
                        },
                        "referencedDeclaration": 118,
                        "src": "6156:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 479,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 472,
                        "name": "souls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "6206:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$129_storage_$",
                          "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                        }
                      },
                      "id": 477,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 473,
                          "name": "soulIdOfAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "6225:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 476,
                        "indexExpression": {
                          "expression": {
                            "id": 474,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6241:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6245:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6241:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6225:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6206:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Soul_$129_storage",
                        "typeString": "struct SBT.Soul storage ref"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6263:10:0",
                    "memberName": "hashedData",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 128,
                    "src": "6206:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6156:117:0"
                },
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "mutability": "mutable",
                      "name": "hashedDataToVerify",
                      "nameLocation": "6309:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 507,
                      "src": "6283:44:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 481,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 480,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "6283:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 118,
                          "src": "6283:18:0"
                        },
                        "referencedDeclaration": 118,
                        "src": "6283:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 486,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 484,
                        "name": "_dataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 464,
                        "src": "6360:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                          "typeString": "struct SBT.PersonalData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                          "typeString": "struct SBT.PersonalData memory"
                        }
                      ],
                      "id": 483,
                      "name": "hashPersonalData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "6330:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_PersonalData_$123_memory_ptr_$returns$_t_struct$_PersonalDataHashed_$118_memory_ptr_$",
                        "typeString": "function (struct SBT.PersonalData memory) pure returns (struct SBT.PersonalDataHashed memory)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                      "typeString": "struct SBT.PersonalDataHashed memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6283:100:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 487,
                        "name": "hashedDataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "6410:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6429:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117,
                      "src": "6410:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 489,
                        "name": "hashedDataFromStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "6463:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6485:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117,
                      "src": "6463:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6410:93:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 495,
                  "nodeType": "IfStatement",
                  "src": "6393:158:0",
                  "trueBody": {
                    "id": 494,
                    "nodeType": "Block",
                    "src": "6514:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6535:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 468,
                        "id": 493,
                        "nodeType": "Return",
                        "src": "6528:12:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 496,
                        "name": "hashedDataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "6577:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6596:11:0",
                      "memberName": "github_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "6577:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 498,
                        "name": "hashedDataFromStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "6611:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$118_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6633:11:0",
                      "memberName": "github_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "6611:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6577:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 504,
                  "nodeType": "IfStatement",
                  "src": "6560:132:0",
                  "trueBody": {
                    "id": 503,
                    "nodeType": "Block",
                    "src": "6655:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6676:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 468,
                        "id": 502,
                        "nodeType": "Return",
                        "src": "6669:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6708:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 468,
                  "id": 506,
                  "nodeType": "Return",
                  "src": "6701:11:0"
                }
              ]
            },
            "functionSelector": "08215c54",
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyDataCorrectness",
            "nameLocation": "6032:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 464,
                  "mutability": "mutable",
                  "name": "_dataToVerify",
                  "nameLocation": "6074:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6054:33:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalData_$123_memory_ptr",
                    "typeString": "struct SBT.PersonalData"
                  },
                  "typeName": {
                    "id": 463,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 462,
                      "name": "PersonalData",
                      "nameLocations": [
                        "6054:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 123,
                      "src": "6054:12:0"
                    },
                    "referencedDeclaration": 123,
                    "src": "6054:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalData_$123_storage_ptr",
                      "typeString": "struct SBT.PersonalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6053:35:0"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6136:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6136:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6135:6:0"
            },
            "scope": 509,
            "src": "6023:696:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 510,
        "src": "680:6041:0",
        "usedErrors": []
      }
    ],
    "src": "32:6690:0"
  },
  "bytecode": "6080604052600180546001600160a01b031916738016619281f888d011c84d2e2a5348d9417c775b17905534801561003657600080fd5b50600154600280546001600160a01b03199081166001600160a01b039093169290921790556000805490911633179055610d29806100756000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806366cfe97f1161007157806366cfe97f14610131578063886fc93f14610168578063bdd752021461017b578063c41a360a146101a6578063df8d8159146101b9578063f72aabf3146101cc57600080fd5b806307a7d436146100ae57806308215c54146100c357806340c10f19146100eb57806344df8e70146100fe578063570ca73514610106575b600080fd5b6100c16100bc3660046109fd565b6101df565b005b6100d66100d1366004610b3d565b61032b565b60405190151581526020015b60405180910390f35b6100c16100f9366004610be4565b6103a3565b6100c161051b565b600054610119906001600160a01b031681565b6040516001600160a01b0390911681526020016100e2565b61014461013f366004610c0e565b6105d3565b604080518251815260209283015180518483015290920151908201526060016100e2565b6100c1610176366004610c30565b610666565b6100d6610189366004610c0e565b6001600160a01b0316600090815260046020526040902054151590565b6101196101b4366004610c7f565b6107b2565b600154610119906001600160a01b031681565b6100c16101da366004610c0e565b61083e565b336000908152600460209081526040808320548084526003909252909120546001600160a01b031661022c5760405162461bcd60e51b815260040161022390610c98565b60405180910390fd5b6002546040805163f391357760e01b81528451600482015260208501516024820152908401516001600160a01b03908116604483015260608501511515606483015260808501518116608483015260a0850151811660a483015260c0850151151560c483015260e085015160e48301529091169063f39135779061010401600060405180830381600087803b1580156102c457600080fd5b505af11580156102d8573d6000803e3d6000fd5b505033600090815260046020526040908190205490517fd49a4559bddcf9b3f02926936008febf67b424d2f0e30b5cbb9d954b8d7a68fb935061031f925090815260200190565b60405180910390a15050565b3360009081526004602090815260408083205483526005825280832081518083019092526001810154825260020154918101919091528161036b846108fc565b90508160200151816020015114610386575060009392505050565b8151815114610399575060009392505050565b5060019392505050565b60008181526003602052604090205481906001600160a01b0316156103f85760405162461bcd60e51b815260206004820152600b60248201526a536f756c2065786973747360a81b6044820152606401610223565b60008181526006602052604090205460ff16156104575760405162461bcd60e51b815260206004820152601f60248201527f536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564006044820152606401610223565b6000546001600160a01b031633146104b15760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c736044820152606401610223565b6001600160a01b03831660009081526004602090815260408083208590558483526006825291829020805460ff1916600117905590518381527f07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a8466591015b60405180910390a1505050565b336000908152600460209081526040808320548084526003909252909120546001600160a01b031661055f5760405162461bcd60e51b815260040161022390610c98565b3360009081526004602090815260408083208054808552600584528285208581556001810186905560020185905590849055600383529281902080546001600160a01b0319169055518281527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb910161031f565b6105db610981565b6001600160a01b03821660009081526004602052604081205490036106125760405162461bcd60e51b815260040161022390610c98565b506001600160a01b0316600090815260046020908152604080832054835260058252918290208251808401845281548152835180850190945260018201548452600290910154838301529081019190915290565b336000908152600460209081526040808320548084526003909252909120546001600160a01b0316156106db5760405162461bcd60e51b815260206004820152601760248201527f536f756c20697320616c726561647920636c61696d65640000000000000000006044820152606401610223565b60008181526006602052604090205460ff1661072b5760405162461bcd60e51b815260206004820152600f60248201526e139bdb881b5a5b9d1959081cdbdd5b608a1b6044820152606401610223565b3360008181526004602090815260408083205480845260068352818420805460ff191690556003835281842080546001600160a01b0319169095179094556005825291829020838155855160018201558582015160029091015590518281527f7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f7910161050e565b600080546001600160a01b031633146108225760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468697320636f6e74726163742063616e2076696577207468697360448201526b20686173686564206461746160a01b6064820152608401610223565b506000908152600360205260409020546001600160a01b031690565b6000546001600160a01b031633146108a85760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79207468697320636f6e74726163742063616e207365742074686973206044820152666164647265737360c81b6064820152608401610223565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f0763c88eaa6a598acce6051f1d0326944c2b7166cc9512b51414a5aadab51a9c9060200160405180910390a150565b604080518082019091526000808252602082015260408051808201909152600080825260208201526020808401516040516109379201610cc4565b60408051601f19818403018152918152815160209283012083830152845190516109619201610cc4565b60408051601f198184030181529190528051602090910120815292915050565b6040518060400160405280600081526020016109b6604051806040016040528060008019168152602001600080191681525090565b905290565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146109e857600080fd5b919050565b803580151581146109e857600080fd5b6000610100808385031215610a1157600080fd5b6040519081019067ffffffffffffffff82118183101715610a3457610a346109bb565b816040528335815260208401356020820152610a52604085016109d1565b6040820152610a63606085016109ed565b6060820152610a74608085016109d1565b6080820152610a8560a085016109d1565b60a0820152610a9660c085016109ed565b60c082015260e084013560e0820152809250505092915050565b600082601f830112610ac157600080fd5b813567ffffffffffffffff80821115610adc57610adc6109bb565b604051601f8301601f19908116603f01168101908282118183101715610b0457610b046109bb565b81604052838152866020858801011115610b1d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610b4f57600080fd5b813567ffffffffffffffff80821115610b6757600080fd5b9083019060408286031215610b7b57600080fd5b604051604081018181108382111715610b9657610b966109bb565b604052823582811115610ba857600080fd5b610bb487828601610ab0565b825250602083013582811115610bc957600080fd5b610bd587828601610ab0565b60208301525095945050505050565b60008060408385031215610bf757600080fd5b610c00836109d1565b946020939093013593505050565b600060208284031215610c2057600080fd5b610c29826109d1565b9392505050565b600060408284031215610c4257600080fd5b6040516040810181811067ffffffffffffffff82111715610c6557610c656109bb565b604052823581526020928301359281019290925250919050565b600060208284031215610c9157600080fd5b5035919050565b60208082526012908201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b604082015260600190565b6000825160005b81811015610ce55760208186018101518583015201610ccb565b50600092019182525091905056fea264697066735822122036700913044ec26fa44413183c7df2923f68741e76436d8b5a3e40b768b80c9e64736f6c63430008110033",
  "bytecodeSha1": "e7c94e68b83a37752a75135e842e59efe176bf4e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "SBT",
  "coverageMap": {
    "branches": {
      "0": {
        "SBT.claim": {
          "32": [
            1020,
            1046,
            true
          ]
        },
        "SBT.getOwner": {
          "33": [
            5782,
            5804,
            true
          ]
        },
        "SBT.getSoul": {
          "31": [
            5486,
            5513,
            true
          ]
        },
        "SBT.mint": {
          "30": [
            3417,
            3439,
            true
          ]
        },
        "SBT.setAchevementsContractAddress": {
          "34": [
            2995,
            3017,
            true
          ]
        },
        "SBT.verifyDataCorrectness": {
          "28": [
            6410,
            6503,
            false
          ],
          "29": [
            6577,
            6644,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SBT.burn": {
          "10": [
            4611,
            4641
          ],
          "11": [
            4651,
            4685
          ],
          "12": [
            4695,
            4733
          ],
          "13": [
            4743,
            4770
          ]
        },
        "SBT.claim": {
          "16": [
            3876,
            3909
          ],
          "17": [
            3919,
            3955
          ],
          "18": [
            3965,
            3999
          ],
          "19": [
            4009,
            4047
          ],
          "20": [
            4057,
            4077
          ]
        },
        "SBT.getOwner": {
          "21": [
            5761,
            5874
          ],
          "22": [
            5884,
            5914
          ]
        },
        "SBT.getSoul": {
          "14": [
            5478,
            5536
          ],
          "15": [
            5546,
            5582
          ]
        },
        "SBT.hasSoul": {
          "0": [
            5272,
            5306
          ]
        },
        "SBT.hashPersonalData": {
          "26": [
            2672,
            2774
          ],
          "27": [
            2784,
            2854
          ]
        },
        "SBT.mint": {
          "6": [
            3409,
            3476
          ],
          "7": [
            3486,
            3527
          ],
          "8": [
            3537,
            3570
          ],
          "9": [
            3580,
            3599
          ]
        },
        "SBT.mint_achievement": {
          "1": [
            4318,
            4356
          ],
          "2": [
            4366,
            4415
          ]
        },
        "SBT.setAchevementsContractAddress": {
          "23": [
            2974,
            3082
          ],
          "24": [
            3092,
            3127
          ],
          "25": [
            3137,
            3185
          ]
        },
        "SBT.verifyDataCorrectness": {
          "3": [
            6528,
            6540
          ],
          "4": [
            6669,
            6681
          ],
          "5": [
            6701,
            6712
          ]
        }
      }
    }
  },
  "dependencies": [
    "SBT_achievement_interface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806366cfe97f1161007157806366cfe97f14610131578063886fc93f14610168578063bdd752021461017b578063c41a360a146101a6578063df8d8159146101b9578063f72aabf3146101cc57600080fd5b806307a7d436146100ae57806308215c54146100c357806340c10f19146100eb57806344df8e70146100fe578063570ca73514610106575b600080fd5b6100c16100bc3660046109fd565b6101df565b005b6100d66100d1366004610b3d565b61032b565b60405190151581526020015b60405180910390f35b6100c16100f9366004610be4565b6103a3565b6100c161051b565b600054610119906001600160a01b031681565b6040516001600160a01b0390911681526020016100e2565b61014461013f366004610c0e565b6105d3565b604080518251815260209283015180518483015290920151908201526060016100e2565b6100c1610176366004610c30565b610666565b6100d6610189366004610c0e565b6001600160a01b0316600090815260046020526040902054151590565b6101196101b4366004610c7f565b6107b2565b600154610119906001600160a01b031681565b6100c16101da366004610c0e565b61083e565b336000908152600460209081526040808320548084526003909252909120546001600160a01b031661022c5760405162461bcd60e51b815260040161022390610c98565b60405180910390fd5b6002546040805163f391357760e01b81528451600482015260208501516024820152908401516001600160a01b03908116604483015260608501511515606483015260808501518116608483015260a0850151811660a483015260c0850151151560c483015260e085015160e48301529091169063f39135779061010401600060405180830381600087803b1580156102c457600080fd5b505af11580156102d8573d6000803e3d6000fd5b505033600090815260046020526040908190205490517fd49a4559bddcf9b3f02926936008febf67b424d2f0e30b5cbb9d954b8d7a68fb935061031f925090815260200190565b60405180910390a15050565b3360009081526004602090815260408083205483526005825280832081518083019092526001810154825260020154918101919091528161036b846108fc565b90508160200151816020015114610386575060009392505050565b8151815114610399575060009392505050565b5060019392505050565b60008181526003602052604090205481906001600160a01b0316156103f85760405162461bcd60e51b815260206004820152600b60248201526a536f756c2065786973747360a81b6044820152606401610223565b60008181526006602052604090205460ff16156104575760405162461bcd60e51b815260206004820152601f60248201527f536f756c206973206d696e7465642c20627574206e6f7420636c61696d6564006044820152606401610223565b6000546001600160a01b031633146104b15760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c736044820152606401610223565b6001600160a01b03831660009081526004602090815260408083208590558483526006825291829020805460ff1916600117905590518381527f07883703ed0e86588a40d76551c92f8a4b329e3bf19765e0e6749473c1a8466591015b60405180910390a1505050565b336000908152600460209081526040808320548084526003909252909120546001600160a01b031661055f5760405162461bcd60e51b815260040161022390610c98565b3360009081526004602090815260408083208054808552600584528285208581556001810186905560020185905590849055600383529281902080546001600160a01b0319169055518281527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb910161031f565b6105db610981565b6001600160a01b03821660009081526004602052604081205490036106125760405162461bcd60e51b815260040161022390610c98565b506001600160a01b0316600090815260046020908152604080832054835260058252918290208251808401845281548152835180850190945260018201548452600290910154838301529081019190915290565b336000908152600460209081526040808320548084526003909252909120546001600160a01b0316156106db5760405162461bcd60e51b815260206004820152601760248201527f536f756c20697320616c726561647920636c61696d65640000000000000000006044820152606401610223565b60008181526006602052604090205460ff1661072b5760405162461bcd60e51b815260206004820152600f60248201526e139bdb881b5a5b9d1959081cdbdd5b608a1b6044820152606401610223565b3360008181526004602090815260408083205480845260068352818420805460ff191690556003835281842080546001600160a01b0319169095179094556005825291829020838155855160018201558582015160029091015590518281527f7bb2b3c10797baccb6f8c4791f1edd6ca2f0d028ee0eda64b01a9a57e3a653f7910161050e565b600080546001600160a01b031633146108225760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468697320636f6e74726163742063616e2076696577207468697360448201526b20686173686564206461746160a01b6064820152608401610223565b506000908152600360205260409020546001600160a01b031690565b6000546001600160a01b031633146108a85760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79207468697320636f6e74726163742063616e207365742074686973206044820152666164647265737360c81b6064820152608401610223565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f0763c88eaa6a598acce6051f1d0326944c2b7166cc9512b51414a5aadab51a9c9060200160405180910390a150565b604080518082019091526000808252602082015260408051808201909152600080825260208201526020808401516040516109379201610cc4565b60408051601f19818403018152918152815160209283012083830152845190516109619201610cc4565b60408051601f198184030181529190528051602090910120815292915050565b6040518060400160405280600081526020016109b6604051806040016040528060008019168152602001600080191681525090565b905290565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146109e857600080fd5b919050565b803580151581146109e857600080fd5b6000610100808385031215610a1157600080fd5b6040519081019067ffffffffffffffff82118183101715610a3457610a346109bb565b816040528335815260208401356020820152610a52604085016109d1565b6040820152610a63606085016109ed565b6060820152610a74608085016109d1565b6080820152610a8560a085016109d1565b60a0820152610a9660c085016109ed565b60c082015260e084013560e0820152809250505092915050565b600082601f830112610ac157600080fd5b813567ffffffffffffffff80821115610adc57610adc6109bb565b604051601f8301601f19908116603f01168101908282118183101715610b0457610b046109bb565b81604052838152866020858801011115610b1d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610b4f57600080fd5b813567ffffffffffffffff80821115610b6757600080fd5b9083019060408286031215610b7b57600080fd5b604051604081018181108382111715610b9657610b966109bb565b604052823582811115610ba857600080fd5b610bb487828601610ab0565b825250602083013582811115610bc957600080fd5b610bd587828601610ab0565b60208301525095945050505050565b60008060408385031215610bf757600080fd5b610c00836109d1565b946020939093013593505050565b600060208284031215610c2057600080fd5b610c29826109d1565b9392505050565b600060408284031215610c4257600080fd5b6040516040810181811067ffffffffffffffff82111715610c6557610c656109bb565b604052823581526020928301359281019290925250919050565b600060208284031215610c9157600080fd5b5035919050565b60208082526012908201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b604082015260600190565b6000825160005b81811015610ce55760208186018101518583015201610ccb565b50600092019182525091905056fea264697066735822122036700913044ec26fa44413183c7df2923f68741e76436d8b5a3e40b768b80c9e64736f6c63430008110033",
  "deployedSourceMap": "680:6041:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4156:266;;;;;;:::i;:::-;;:::i;:::-;;6023:696;;;;;;:::i;:::-;;:::i;:::-;;;3281:14:1;;3274:22;3256:41;;3244:2;3229:18;6023:696:0;;;;;;;;3298:308;;;;;;:::i;:::-;;:::i;4475:302::-;;;:::i;1580:23::-;;;;;-1:-1:-1;;;;;1580:23:0;;;;;;-1:-1:-1;;;;;3731:32:1;;;3713:51;;3701:2;3686:18;1580:23:0;3567:203:1;5400:189:0;;;;;;:::i;:::-;;:::i;:::-;;;;4172:13:1;;4154:32;;4233:4;4221:17;;;4215:24;4277:19;;4255:20;;;4248:49;4339:23;;;4333:30;4313:18;;;4306:58;4142:2;4127:18;5400:189:0;3966:404:1;3678:406:0;;;;;;:::i;:::-;;:::i;5201:112::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5279:22:0;5256:4;5279:22;;;:15;:22;;;;;;:27;;;5201:112;5686:235;;;;;;:::i;:::-;;:::i;1609:88::-;;;;;-1:-1:-1;;;;;1609:88:0;;;2894:298;;;;;;:::i;:::-;;:::i;4156:266::-;4295:10;4279:27;;;;:15;:27;;;;;;;;;752:23;;;:13;:23;;;;;;;-1:-1:-1;;;;;752:23:0;744:68;;;;-1:-1:-1;;;744:68:0;;;;;;;:::i;:::-;;;;;;;;;4318:15:::1;::::0;:38:::1;::::0;;-1:-1:-1;;;4318:38:0;;5645:13:1;;4318:38:0::1;::::0;::::1;5627:32:1::0;5715:4;5703:17;;5697:24;5675:20;;;5668:54;5757:17;;;5751:24;-1:-1:-1;;;;;5851:21:1;;;5829:20;;;5822:51;5943:4;5931:17;;5925:24;5918:32;5911:40;5889:20;;;5882:70;6012:4;6000:17;;5994:24;5990:33;;5968:20;;;5961:63;5802:3;6072:17;;6066:24;6062:33;;6040:20;;;6033:63;6166:4;6154:17;;6148:24;6141:32;6134:40;6112:20;;;6105:70;6231:4;6219:17;;6213:24;6191:20;;;6184:54;4318:15:0;;::::1;::::0;:20:::1;::::0;5599:19:1;;4318:38:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4403:10:0::1;4387:27;::::0;;;:15:::1;:27;::::0;;;;;;;4371:44;;::::1;::::0;-1:-1:-1;4371:44:0::1;::::0;-1:-1:-1;6395:25:1;;;6383:2;6368:18;;6249:177;4371:44:0::1;;;;;;;;4156:266:::0;;:::o;6023:696::-;6241:10;6136:4;6225:27;;;:15;:27;;;;;;;;;6206:56;;:5;:56;;;;;6156:117;;;;;;;;6206:67;;;6156:117;;;;;;;;;;;;;6136:4;6330:53;6360:13;6330:16;:53::i;:::-;6283:100;;6463:21;:40;;;6410:18;:37;;;:93;6393:158;;-1:-1:-1;6535:5:0;;6023:696;-1:-1:-1;;;6023:696:0:o;6393:158::-;6611:33;;6577:30;;:67;6560:132;;-1:-1:-1;6676:5:0;;6023:696;-1:-1:-1;;;6023:696:0:o;6560:132::-;-1:-1:-1;6708:4:0;;6023:696;-1:-1:-1;;;6023:696:0:o;3298:308::-;1177:1;1142:23;;;:13;:23;;;;;;3385:8;;-1:-1:-1;;;;;1142:23:0;:37;1134:61;;;;-1:-1:-1;;;1134:61:0;;6633:2:1;1134:61:0;;;6615:21:1;6672:2;6652:18;;;6645:30;-1:-1:-1;;;6691:18:1;;;6684:41;6742:18;;1134:61:0;6431:335:1;1134:61:0;1214:26;;;;:16;:26;;;;;;;;1213:27;1205:71;;;;-1:-1:-1;;;1205:71:0;;6973:2:1;1205:71:0;;;6955:21:1;7012:2;6992:18;;;6985:30;7051:33;7031:18;;;7024:61;7102:18;;1205:71:0;6771:355:1;1205:71:0;3431:8:::1;::::0;-1:-1:-1;;;;;3431:8:0::1;3417:10;:22;3409:67;;;::::0;-1:-1:-1;;;3409:67:0;;7333:2:1;3409:67:0::1;::::0;::::1;7315:21:1::0;;;7352:18;;;7345:30;7411:34;7391:18;;;7384:62;7463:18;;3409:67:0::1;7131:356:1::0;3409:67:0::1;-1:-1:-1::0;;;;;3486:30:0;::::1;;::::0;;;:15:::1;:30;::::0;;;;;;;:41;;;3537:26;;;:16:::1;:26:::0;;;;;;:33;;-1:-1:-1;;3537:33:0::1;3566:4;3537:33;::::0;;3585:14;;6395:25:1;;;3585:14:0::1;::::0;6368:18:1;3585:14:0::1;;;;;;;;3298:308:::0;;;:::o;4475:302::-;4527:10;4511:27;;;;:15;:27;;;;;;;;;752:23;;;:13;:23;;;;;;;-1:-1:-1;;;;;752:23:0;744:68;;;;-1:-1:-1;;;744:68:0;;;;;;;:::i;:::-;4590:10:::1;4550:21;4574:27:::0;;;:15:::1;:27;::::0;;;;;;;;;4618:23;;;:5:::1;:23:::0;;;;;4611:30;;;::::1;::::0;::::1;::::0;;;;;;;;4651:34;;;;4702:13:::1;:31:::0;;;;;;4695:38;;-1:-1:-1;;;;;;4695:38:0::1;::::0;;4748:22;6395:25:1;;;4748:22:0::1;::::0;6368:18:1;4748:22:0::1;6249:177:1::0;5400:189:0;5455:11;;:::i;:::-;-1:-1:-1;;;;;5486:22:0;;;;;;:15;:22;;;;;;:27;;5478:58;;;;-1:-1:-1;;;5478:58:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5559:22:0;5553:29;5559:22;;;:15;:22;;;;;;;;;5553:29;;:5;:29;;;;;;5546:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5400:189::o;3678:406::-;3796:10;3780:27;;;;:15;:27;;;;;;;;;916:23;;;:13;:23;;;;;;;-1:-1:-1;;;;;916:23:0;:37;895:107;;;;-1:-1:-1;;;895:107:0;;7694:2:1;895:107:0;;;7676:21:1;7733:2;7713:18;;;7706:30;7772:25;7752:18;;;7745:53;7815:18;;895:107:0;7492:347:1;895:107:0;1020:26;;;;:16;:26;;;;;;;;1012:54;;;;-1:-1:-1;;;1012:54:0;;8046:2:1;1012:54:0;;;8028:21:1;8085:2;8065:18;;;8058:30;-1:-1:-1;;;8104:18:1;;;8097:45;8159:18;;1012:54:0;7844:339:1;1012:54:0;3855:10:::1;3823:13;3839:27:::0;;;:15:::1;:27;::::0;;;;;;;;3883:26;;;:16:::1;:26:::0;;;;;3876:33;;-1:-1:-1;;3876:33:0::1;::::0;;3919:13:::1;:23:::0;;;;;:36;;-1:-1:-1;;;;;;3919:36:0::1;::::0;;::::1;::::0;;;3965:5:::1;:15:::0;;;;;;:34;;;4009:38;;-1:-1:-1;4009:26:0;::::1;:38:::0;;;::::1;::::0;;;;;;4062:15;;6395:25:1;;;4062:15:0::1;::::0;6368:18:1;4062:15:0::1;6249:177:1::0;5686:235:0;5742:7;5796:8;;-1:-1:-1;;;;;5796:8:0;5782:10;:22;5761:113;;;;-1:-1:-1;;;5761:113:0;;8390:2:1;5761:113:0;;;8372:21:1;8429:2;8409:18;;;8402:30;8468:34;8448:18;;;8441:62;-1:-1:-1;;;8519:18:1;;;8512:42;8571:19;;5761:113:0;8188:408:1;5761:113:0;-1:-1:-1;5891:23:0;;;;:13;:23;;;;;;-1:-1:-1;;;;;5891:23:0;;5686:235::o;2894:298::-;3009:8;;-1:-1:-1;;;;;3009:8:0;2995:10;:22;2974:108;;;;-1:-1:-1;;;2974:108:0;;8803:2:1;2974:108:0;;;8785:21:1;8842:2;8822:18;;;8815:30;8881:34;8861:18;;;8854:62;-1:-1:-1;;;8932:18:1;;;8925:37;8979:19;;2974:108:0;8601:403:1;2974:108:0;3092:20;:35;;-1:-1:-1;;;;;;3092:35:0;-1:-1:-1;;;;;3092:35:0;;;;;;;;3142:43;;3713:51:1;;;3142:43:0;;3701:2:1;3686:18;3142:43:0;;;;;;;2894:298;:::o;2485:403::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:19:0;;;;;2727:37;;;;;;:::i;:::-;;;;-1:-1:-1;;2727:37:0;;;;;;;;;2704:70;;2727:37;2704:70;;;;2672:29;;;:102;2836:16;;2819:34;;;;;;:::i;:::-;;;;-1:-1:-1;;2819:34:0;;;;;;;;;2809:45;;2819:34;2809:45;;;;2784:70;;:10;2485:403;-1:-1:-1;;2485:403:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:173;214:20;;-1:-1:-1;;;;;263:31:1;;253:42;;243:70;;309:1;306;299:12;243:70;146:173;;;:::o;324:160::-;389:20;;445:13;;438:21;428:32;;418:60;;474:1;471;464:12;489:956;575:6;606:3;650:2;638:9;629:7;625:23;621:32;618:52;;;666:1;663;656:12;618:52;699:2;693:9;729:15;;;;774:18;759:34;;795:22;;;756:62;753:88;;;821:18;;:::i;:::-;861:10;857:2;850:22;909:9;896:23;888:6;881:39;981:2;970:9;966:18;953:32;948:2;940:6;936:15;929:57;1019:38;1053:2;1042:9;1038:18;1019:38;:::i;:::-;1014:2;1006:6;1002:15;995:63;1091:35;1122:2;1111:9;1107:18;1091:35;:::i;:::-;1086:2;1078:6;1074:15;1067:60;1161:39;1195:3;1184:9;1180:19;1161:39;:::i;:::-;1155:3;1147:6;1143:16;1136:65;1235:39;1269:3;1258:9;1254:19;1235:39;:::i;:::-;1229:3;1221:6;1217:16;1210:65;1309:36;1340:3;1329:9;1325:19;1309:36;:::i;:::-;1303:3;1295:6;1291:16;1284:62;1408:3;1397:9;1393:19;1380:33;1374:3;1366:6;1362:16;1355:59;1433:6;1423:16;;;;489:956;;;;:::o;1450:719::-;1493:5;1546:3;1539:4;1531:6;1527:17;1523:27;1513:55;;1564:1;1561;1554:12;1513:55;1600:6;1587:20;1626:18;1663:2;1659;1656:10;1653:36;;;1669:18;;:::i;:::-;1744:2;1738:9;1712:2;1798:13;;-1:-1:-1;;1794:22:1;;;1818:2;1790:31;1786:40;1774:53;;;1842:18;;;1862:22;;;1839:46;1836:72;;;1888:18;;:::i;:::-;1928:10;1924:2;1917:22;1963:2;1955:6;1948:18;2009:3;2002:4;1997:2;1989:6;1985:15;1981:26;1978:35;1975:55;;;2026:1;2023;2016:12;1975:55;2090:2;2083:4;2075:6;2071:17;2064:4;2056:6;2052:17;2039:54;2137:1;2130:4;2125:2;2117:6;2113:15;2109:26;2102:37;2157:6;2148:15;;;;;;1450:719;;;;:::o;2174:937::-;2262:6;2315:2;2303:9;2294:7;2290:23;2286:32;2283:52;;;2331:1;2328;2321:12;2283:52;2371:9;2358:23;2400:18;2441:2;2433:6;2430:14;2427:34;;;2457:1;2454;2447:12;2427:34;2480:22;;;;2536:4;2518:16;;;2514:27;2511:47;;;2554:1;2551;2544:12;2511:47;2587:4;2581:11;2631:4;2623:6;2619:17;2686:6;2674:10;2671:22;2666:2;2654:10;2651:18;2648:46;2645:72;;;2697:18;;:::i;:::-;2733:4;2726:24;2775:16;;2803;;;2800:36;;;2832:1;2829;2822:12;2800:36;2860:45;2897:7;2886:8;2882:2;2878:17;2860:45;:::i;:::-;2852:6;2845:61;;2952:2;2948;2944:11;2931:25;2981:2;2971:8;2968:16;2965:36;;;2997:1;2994;2987:12;2965:36;3034:45;3071:7;3060:8;3056:2;3052:17;3034:45;:::i;:::-;3029:2;3017:15;;3010:70;-1:-1:-1;3021:6:1;2174:937;-1:-1:-1;;;;;2174:937:1:o;3308:254::-;3376:6;3384;3437:2;3425:9;3416:7;3412:23;3408:32;3405:52;;;3453:1;3450;3443:12;3405:52;3476:29;3495:9;3476:29;:::i;:::-;3466:39;3552:2;3537:18;;;;3524:32;;-1:-1:-1;;;3308:254:1:o;3775:186::-;3834:6;3887:2;3875:9;3866:7;3862:23;3858:32;3855:52;;;3903:1;3900;3893:12;3855:52;3926:29;3945:9;3926:29;:::i;:::-;3916:39;3775:186;-1:-1:-1;;;3775:186:1:o;4375:514::-;4469:6;4522:2;4510:9;4501:7;4497:23;4493:32;4490:52;;;4538:1;4535;4528:12;4490:52;4571:2;4565:9;4613:2;4605:6;4601:15;4682:6;4670:10;4667:22;4646:18;4634:10;4631:34;4628:62;4625:88;;;4693:18;;:::i;:::-;4729:2;4722:22;4768:23;;4753:39;;4853:2;4838:18;;;4825:32;4808:15;;;4801:57;;;;-1:-1:-1;4760:6:1;4375:514;-1:-1:-1;4375:514:1:o;4894:180::-;4953:6;5006:2;4994:9;4985:7;4981:23;4977:32;4974:52;;;5022:1;5019;5012:12;4974:52;-1:-1:-1;5045:23:1;;4894:180;-1:-1:-1;4894:180:1:o;5079:342::-;5281:2;5263:21;;;5320:2;5300:18;;;5293:30;-1:-1:-1;;;5354:2:1;5339:18;;5332:48;5412:2;5397:18;;5079:342::o;9009:414::-;9140:3;9178:6;9172:13;9203:1;9213:129;9227:6;9224:1;9221:13;9213:129;;;9325:4;9309:14;;;9305:25;;9299:32;9286:11;;;9279:53;9242:12;9213:129;;;-1:-1:-1;9397:1:1;9361:16;;9386:13;;;-1:-1:-1;9361:16:1;9009:414;-1:-1:-1;9009:414:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    680,
    6721
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66CFE97F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x66CFE97F EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x886FC93F EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xBDD75202 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xC41A360A EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xDF8D8159 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xF72AABF3 EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7A7D436 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x8215C54 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x106 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x1DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0xB3D JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x119 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD DUP1 MLOAD DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xC30 JUMP JUMPDEST PUSH2 0x666 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x119 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF3913577 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 MLOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD DUP2 AND PUSH1 0xA4 DUP4 ADD MSTORE PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0xC4 DUP4 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0xE4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF3913577 SWAP1 PUSH2 0x104 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0xD49A4559BDDCF9B3F02926936008FEBF67B424D2F0E30B5CBB9D954B8D7A68FB SWAP4 POP PUSH2 0x31F SWAP3 POP SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 PUSH2 0x36B DUP5 PUSH2 0x8FC JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH2 0x386 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD EQ PUSH2 0x399 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x536F756C20657869737473 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x457 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C206973206D696E7465642C20627574206E6F7420636C61696D656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F70657261746F722063616E206D696E74206E657720736F756C73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0x7883703ED0E86588A40D76551C92F8A4B329E3BF19765E0E6749473C1A84665 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xC98 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP6 MSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP6 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 ADD DUP6 SWAP1 SSTORE SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x3 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 DUP2 MSTORE PUSH32 0xB90306AD06B2A6FF86DDC9327DB583062895EF6540E62DC50ADD009DB5B356EB SWAP2 ADD PUSH2 0x31F JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x981 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0xC98 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP4 DUP4 ADD MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C20697320616C726561647920636C61696D6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDB881B5A5B9D1959081CDBDD5B PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x223 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x6 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP4 DUP2 SSTORE DUP6 MLOAD PUSH1 0x1 DUP3 ADD SSTORE DUP6 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0x7BB2B3C10797BACCB6F8C4791F1EDD6CA2F0D028EE0EDA64B01A9A57E3A653F7 SWAP2 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468697320636F6E74726163742063616E20766965772074686973 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x206861736865642064617461 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x223 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468697320636F6E74726163742063616E20736574207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x763C88EAA6A598ACCE6051F1D0326944C2B7166CC9512B51414A5AADAB51A9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x937 SWAP3 ADD PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 MLOAD PUSH2 0x961 SWAP3 ADD PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9B6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA34 JUMPI PUSH2 0xA34 PUSH2 0x9BB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA52 PUSH1 0x40 DUP6 ADD PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xA63 PUSH1 0x60 DUP6 ADD PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA74 PUSH1 0x80 DUP6 ADD PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xA85 PUSH1 0xA0 DUP6 ADD PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xA96 PUSH1 0xC0 DUP6 ADD PUSH2 0x9ED JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xADC JUMPI PUSH2 0xADC PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB04 JUMPI PUSH2 0xB04 PUSH2 0x9BB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x40 DUP3 DUP7 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0xB96 JUMPI PUSH2 0xB96 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB4 DUP8 DUP3 DUP7 ADD PUSH2 0xAB0 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD5 DUP8 DUP3 DUP7 ADD PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC00 DUP4 PUSH2 0x9D1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC29 DUP3 PUSH2 0x9D1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xC65 JUMPI PUSH2 0xC65 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x14DBDD5B08191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xCCB JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH17 0x913044EC26FA44413183C7DF2923F6874 0x1E PUSH23 0x436D8B5A3E40B768B80C9E64736F6C6343000811003300 ",
  "pcMap": {
    "0": {
      "offset": [
        680,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66CFE97F"
    },
    "38": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66CFE97F"
    },
    "49": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "53": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x886FC93F"
    },
    "60": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "64": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDD75202"
    },
    "71": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "75": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC41A360A"
    },
    "82": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "86": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDF8D8159"
    },
    "93": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9"
    },
    "97": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF72AABF3"
    },
    "104": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "108": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7A7D436"
    },
    "120": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8215C54"
    },
    "131": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x40C10F19"
    },
    "142": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB"
    },
    "146": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x44DF8E70"
    },
    "153": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "157": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x570CA735"
    },
    "164": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106"
    },
    "168": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        680,
        6721
      ],
      "op": "REVERT",
      "path": "0"
    },
    "174": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "178": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC"
    },
    "181": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "182": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "184": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FD"
    },
    "187": {
      "fn": "SBT.mint_achievement",
      "jump": "i",
      "offset": [
        4156,
        4422
      ],
      "op": "JUMP",
      "path": "0"
    },
    "188": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "189": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF"
    },
    "192": {
      "fn": "SBT.mint_achievement",
      "jump": "i",
      "offset": [
        4156,
        4422
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "STOP",
      "path": "0"
    },
    "195": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "199": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "202": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "203": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "205": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3D"
    },
    "208": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "209": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "213": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "214": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "215": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "217": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "218": {
      "op": "SWAP1"
    },
    "219": {
      "op": "ISZERO"
    },
    "220": {
      "op": "ISZERO"
    },
    "221": {
      "op": "DUP2"
    },
    "222": {
      "op": "MSTORE"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "225": {
      "op": "ADD"
    },
    "226": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "227": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "229": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "230": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "DUP1",
      "path": "0"
    },
    "231": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "232": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "SUB",
      "path": "0"
    },
    "233": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "234": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "RETURN",
      "path": "0"
    },
    "235": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "236": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "239": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9"
    },
    "242": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "243": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "245": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE4"
    },
    "248": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        3298,
        3606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "249": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A3"
    },
    "253": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        3298,
        3606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "254": {
      "fn": "SBT.burn",
      "offset": [
        4475,
        4777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "255": {
      "fn": "SBT.burn",
      "offset": [
        4475,
        4777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "258": {
      "fn": "SBT.burn",
      "offset": [
        4475,
        4777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "261": {
      "fn": "SBT.burn",
      "jump": "i",
      "offset": [
        4475,
        4777
      ],
      "op": "JUMP",
      "path": "0"
    },
    "262": {
      "offset": [
        1580,
        1603
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "263": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "265": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "266": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119"
    },
    "269": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "276": {
      "op": "SHL"
    },
    "277": {
      "op": "SUB"
    },
    "278": {
      "offset": [
        1580,
        1603
      ],
      "op": "AND",
      "path": "0"
    },
    "279": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "DUP2",
      "path": "0"
    },
    "280": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "JUMP",
      "path": "0"
    },
    "281": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "282": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "284": {
      "fn": "SBT.burn",
      "offset": [
        1580,
        1603
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "291": {
      "op": "SHL"
    },
    "292": {
      "op": "SUB"
    },
    "293": {
      "op": "SWAP1"
    },
    "294": {
      "op": "SWAP2"
    },
    "295": {
      "op": "AND"
    },
    "296": {
      "op": "DUP2"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "300": {
      "op": "ADD"
    },
    "301": {
      "offset": [
        1580,
        1603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "304": {
      "op": "JUMP"
    },
    "305": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "309": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F"
    },
    "312": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "313": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "315": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "318": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        5400,
        5589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "319": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "320": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D3"
    },
    "323": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        5400,
        5589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "324": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "327": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "DUP1",
      "path": "0"
    },
    "328": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "329": {
      "op": "DUP3"
    },
    "330": {
      "op": "MLOAD"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "SWAP3"
    },
    "336": {
      "op": "DUP4"
    },
    "337": {
      "op": "ADD"
    },
    "338": {
      "op": "MLOAD"
    },
    "339": {
      "op": "DUP1"
    },
    "340": {
      "op": "MLOAD"
    },
    "341": {
      "op": "DUP5"
    },
    "342": {
      "op": "DUP4"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "SWAP1"
    },
    "346": {
      "op": "SWAP3"
    },
    "347": {
      "op": "ADD"
    },
    "348": {
      "op": "MLOAD"
    },
    "349": {
      "op": "SWAP1"
    },
    "350": {
      "op": "DUP3"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "op": "MSTORE"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "355": {
      "op": "ADD"
    },
    "356": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "359": {
      "op": "JUMP"
    },
    "360": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "364": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "367": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "368": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "370": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC30"
    },
    "373": {
      "fn": "SBT.claim",
      "jump": "i",
      "offset": [
        3678,
        4084
      ],
      "op": "JUMP",
      "path": "0"
    },
    "374": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "375": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x666"
    },
    "378": {
      "fn": "SBT.claim",
      "jump": "i",
      "offset": [
        3678,
        4084
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "fn": "SBT.hasSoul",
      "offset": [
        5201,
        5313
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "SBT.hasSoul",
      "offset": [
        5201,
        5313
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "383": {
      "fn": "SBT.hasSoul",
      "offset": [
        5201,
        5313
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189"
    },
    "386": {
      "fn": "SBT.hasSoul",
      "offset": [
        5201,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "387": {
      "fn": "SBT.hasSoul",
      "offset": [
        5201,
        5313
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "389": {
      "fn": "SBT.hasSoul",
      "offset": [
        5201,
        5313
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "392": {
      "fn": "SBT.hasSoul",
      "jump": "i",
      "offset": [
        5201,
        5313
      ],
      "op": "JUMP",
      "path": "0"
    },
    "393": {
      "fn": "SBT.hasSoul",
      "offset": [
        5201,
        5313
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "400": {
      "op": "SHL"
    },
    "401": {
      "op": "SUB"
    },
    "402": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "403": {
      "fn": "SBT.hasSoul",
      "offset": [
        5256,
        5260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "405": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "406": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "407": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "408": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "410": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "412": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "413": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "415": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "416": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "417": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5301
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "418": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "419": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "420": {
      "fn": "SBT.hasSoul",
      "offset": [
        5279,
        5306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "421": {
      "fn": "SBT.hasSoul",
      "offset": [
        5201,
        5313
      ],
      "op": "JUMP",
      "path": "0"
    },
    "422": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "423": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119"
    },
    "426": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "429": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "430": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "432": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7F"
    },
    "435": {
      "fn": "SBT.getOwner",
      "jump": "i",
      "offset": [
        5686,
        5921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "437": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B2"
    },
    "440": {
      "fn": "SBT.getOwner",
      "jump": "i",
      "offset": [
        5686,
        5921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "441": {
      "offset": [
        1609,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "SBT.getOwner",
      "offset": [
        1609,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "444": {
      "fn": "SBT.getOwner",
      "offset": [
        1609,
        1697
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "445": {
      "fn": "SBT.getOwner",
      "offset": [
        1609,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119"
    },
    "448": {
      "fn": "SBT.getOwner",
      "offset": [
        1609,
        1697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "455": {
      "op": "SHL"
    },
    "456": {
      "op": "SUB"
    },
    "457": {
      "offset": [
        1609,
        1697
      ],
      "op": "AND",
      "path": "0"
    },
    "458": {
      "fn": "SBT.getOwner",
      "offset": [
        1609,
        1697
      ],
      "op": "DUP2",
      "path": "0"
    },
    "459": {
      "fn": "SBT.getOwner",
      "offset": [
        1609,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "460": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "461": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "464": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "467": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "468": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "470": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0E"
    },
    "473": {
      "fn": "SBT.setAchevementsContractAddress",
      "jump": "i",
      "offset": [
        2894,
        3192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "474": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "475": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83E"
    },
    "478": {
      "fn": "SBT.setAchevementsContractAddress",
      "jump": "i",
      "offset": [
        2894,
        3192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "479": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "480": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4295,
        4305
      ],
      "op": "CALLER",
      "path": "0"
    },
    "481": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "483": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "484": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "DUP2",
      "path": "0"
    },
    "485": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "486": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4294
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "488": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "490": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "491": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "DUP2",
      "path": "0"
    },
    "492": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "493": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "495": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "DUP1",
      "path": "0"
    },
    "496": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "DUP4",
      "path": "0"
    },
    "497": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "498": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4279,
        4306
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "499": {
      "offset": [
        752,
        775
      ],
      "op": "DUP1",
      "path": "0"
    },
    "500": {
      "fn": "SBT.mint_achievement",
      "offset": [
        752,
        775
      ],
      "op": "DUP5",
      "path": "0"
    },
    "501": {
      "fn": "SBT.mint_achievement",
      "offset": [
        752,
        775
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "502": {
      "offset": [
        752,
        765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "504": {
      "offset": [
        752,
        775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "505": {
      "fn": "SBT.mint_achievement",
      "offset": [
        752,
        775
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "506": {
      "fn": "SBT.mint_achievement",
      "offset": [
        752,
        775
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "507": {
      "fn": "SBT.mint_achievement",
      "offset": [
        752,
        775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "508": {
      "fn": "SBT.mint_achievement",
      "offset": [
        752,
        775
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "509": {
      "fn": "SBT.mint_achievement",
      "offset": [
        752,
        775
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "510": {
      "fn": "SBT.mint_achievement",
      "offset": [
        752,
        775
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "517": {
      "op": "SHL"
    },
    "518": {
      "op": "SUB"
    },
    "519": {
      "offset": [
        752,
        775
      ],
      "op": "AND",
      "path": "0"
    },
    "520": {
      "offset": [
        744,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22C"
    },
    "523": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "524": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "526": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "offset": [
        744,
        812
      ],
      "op": "DUP2",
      "path": "0"
    },
    "535": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "536": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "538": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "ADD",
      "path": "0"
    },
    "539": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "542": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "543": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC98"
    },
    "546": {
      "fn": "SBT.mint_achievement",
      "jump": "i",
      "offset": [
        744,
        812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "547": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "548": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "550": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "551": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "DUP1",
      "path": "0"
    },
    "552": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "553": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "SUB",
      "path": "0"
    },
    "554": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "555": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "556": {
      "fn": "SBT.mint_achievement",
      "offset": [
        744,
        812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "557": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4333
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x2"
    },
    "559": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4333
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "560": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "562": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "563": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "564": {
      "op": "PUSH4",
      "value": "0xF3913577"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "573": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "574": {
      "op": "DUP5"
    },
    "575": {
      "op": "MLOAD"
    },
    "576": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "578": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP3",
      "path": "0"
    },
    "579": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "ADD",
      "path": "0"
    },
    "580": {
      "op": "MSTORE"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "583": {
      "op": "DUP6"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "op": "MLOAD"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "588": {
      "op": "DUP3"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "op": "MSTORE"
    },
    "591": {
      "op": "SWAP1"
    },
    "592": {
      "op": "DUP5"
    },
    "593": {
      "op": "ADD"
    },
    "594": {
      "op": "MLOAD"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "601": {
      "op": "SHL"
    },
    "602": {
      "op": "SUB"
    },
    "603": {
      "op": "SWAP1"
    },
    "604": {
      "op": "DUP2"
    },
    "605": {
      "op": "AND"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "608": {
      "op": "DUP4"
    },
    "609": {
      "op": "ADD"
    },
    "610": {
      "op": "MSTORE"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "613": {
      "op": "DUP6"
    },
    "614": {
      "op": "ADD"
    },
    "615": {
      "op": "MLOAD"
    },
    "616": {
      "op": "ISZERO"
    },
    "617": {
      "op": "ISZERO"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "620": {
      "op": "DUP4"
    },
    "621": {
      "op": "ADD"
    },
    "622": {
      "op": "MSTORE"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "625": {
      "op": "DUP6"
    },
    "626": {
      "op": "ADD"
    },
    "627": {
      "op": "MLOAD"
    },
    "628": {
      "op": "DUP2"
    },
    "629": {
      "op": "AND"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "632": {
      "op": "DUP4"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "op": "MSTORE"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "637": {
      "op": "DUP6"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "op": "MLOAD"
    },
    "640": {
      "op": "DUP2"
    },
    "641": {
      "op": "AND"
    },
    "642": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "644": {
      "op": "DUP4"
    },
    "645": {
      "op": "ADD"
    },
    "646": {
      "op": "MSTORE"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "649": {
      "op": "DUP6"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "op": "MLOAD"
    },
    "652": {
      "op": "ISZERO"
    },
    "653": {
      "op": "ISZERO"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "656": {
      "op": "DUP4"
    },
    "657": {
      "op": "ADD"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "661": {
      "op": "DUP6"
    },
    "662": {
      "op": "ADD"
    },
    "663": {
      "op": "MLOAD"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "666": {
      "op": "DUP4"
    },
    "667": {
      "op": "ADD"
    },
    "668": {
      "op": "MSTORE"
    },
    "669": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "670": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "671": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4333
      ],
      "op": "AND",
      "path": "0"
    },
    "672": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "673": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4338
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF3913577"
    },
    "678": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "679": {
      "op": "PUSH2",
      "value": "0x104"
    },
    "682": {
      "op": "ADD"
    },
    "683": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "685": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "687": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "688": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "689": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP4",
      "path": "0"
    },
    "690": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "SUB",
      "path": "0"
    },
    "691": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "692": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "694": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP8",
      "path": "0"
    },
    "695": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "696": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "697": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "698": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "699": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "700": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C4"
    },
    "703": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "704": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "706": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "707": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "REVERT",
      "path": "0"
    },
    "708": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "709": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "POP",
      "path": "0"
    },
    "710": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "GAS",
      "path": "0"
    },
    "711": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "CALL",
      "path": "0"
    },
    "712": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "713": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "714": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "715": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8"
    },
    "718": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "719": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "720": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "722": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "723": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "724": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "725": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "727": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "REVERT",
      "path": "0"
    },
    "728": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4318,
        4356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "729": {
      "op": "POP"
    },
    "730": {
      "op": "POP"
    },
    "731": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4403,
        4413
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "732": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "734": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "DUP2",
      "path": "0"
    },
    "736": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "737": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "739": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "741": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "742": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "744": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "DUP2",
      "path": "0"
    },
    "746": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "747": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "748": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4387,
        4414
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "749": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "750": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "751": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xD49A4559BDDCF9B3F02926936008FEBF67B424D2F0E30B5CBB9D954B8D7A68FB"
    },
    "784": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "785": {
      "op": "POP"
    },
    "786": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F"
    },
    "789": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "op": "SWAP1"
    },
    "792": {
      "op": "DUP2"
    },
    "793": {
      "op": "MSTORE"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "796": {
      "op": "ADD"
    },
    "797": {
      "op": "SWAP1"
    },
    "798": {
      "op": "JUMP"
    },
    "799": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "800": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "802": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "803": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "804": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "805": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "SUB",
      "path": "0"
    },
    "806": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "807": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4371,
        4415
      ],
      "op": "LOG1",
      "path": "0"
    },
    "808": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "POP",
      "path": "0"
    },
    "809": {
      "fn": "SBT.mint_achievement",
      "offset": [
        4156,
        4422
      ],
      "op": "POP",
      "path": "0"
    },
    "810": {
      "fn": "SBT.mint_achievement",
      "jump": "o",
      "offset": [
        4156,
        4422
      ],
      "op": "JUMP",
      "path": "0"
    },
    "811": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "812": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6241,
        6251
      ],
      "op": "CALLER",
      "path": "0"
    },
    "813": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6136,
        6140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "815": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "816": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "817": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "818": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "820": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "822": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "823": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "824": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "825": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "827": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "DUP1",
      "path": "0"
    },
    "828": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "DUP4",
      "path": "0"
    },
    "829": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "830": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6225,
        6252
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "831": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6262
      ],
      "op": "DUP4",
      "path": "0"
    },
    "832": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "833": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6211
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "835": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6262
      ],
      "op": "DUP3",
      "path": "0"
    },
    "836": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "837": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "838": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6262
      ],
      "op": "DUP4",
      "path": "0"
    },
    "839": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6262
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "840": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "841": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "842": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "DUP1",
      "path": "0"
    },
    "843": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "DUP4",
      "path": "0"
    },
    "844": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "ADD",
      "path": "0"
    },
    "845": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "846": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "847": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "848": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "850": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "851": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6206,
        6273
      ],
      "op": "ADD",
      "path": "0"
    },
    "852": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "853": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "DUP3",
      "path": "0"
    },
    "854": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "855": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "857": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "ADD",
      "path": "0"
    },
    "858": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "859": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "860": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "DUP2",
      "path": "0"
    },
    "861": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "ADD",
      "path": "0"
    },
    "862": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "863": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "865": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6156,
        6273
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "866": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6136,
        6140
      ],
      "op": "DUP2",
      "path": "0"
    },
    "867": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6330,
        6383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36B"
    },
    "870": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6360,
        6373
      ],
      "op": "DUP5",
      "path": "0"
    },
    "871": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6330,
        6346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "874": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        6330,
        6383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "875": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6330,
        6383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "876": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6283,
        6383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "877": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6283,
        6383
      ],
      "op": "POP",
      "path": "0"
    },
    "878": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6463,
        6484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "879": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6463,
        6503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "881": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6463,
        6503
      ],
      "op": "ADD",
      "path": "0"
    },
    "882": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6463,
        6503
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "883": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6410,
        6428
      ],
      "op": "DUP2",
      "path": "0"
    },
    "884": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6410,
        6447
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "886": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6410,
        6447
      ],
      "op": "ADD",
      "path": "0"
    },
    "887": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6410,
        6447
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "888": {
      "branch": 28,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6410,
        6503
      ],
      "op": "EQ",
      "path": "0"
    },
    "889": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6393,
        6551
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386"
    },
    "892": {
      "branch": 28,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6393,
        6551
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "893": {
      "op": "POP"
    },
    "894": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6535,
        6540
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "896": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6535,
        6540
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "897": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "898": {
      "op": "POP"
    },
    "899": {
      "op": "POP"
    },
    "900": {
      "op": "POP"
    },
    "901": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "902": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6393,
        6551
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "903": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6611,
        6644
      ],
      "op": "DUP2",
      "path": "0"
    },
    "904": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6611,
        6644
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "905": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6577,
        6607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "906": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6577,
        6607
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "907": {
      "branch": 29,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6577,
        6644
      ],
      "op": "EQ",
      "path": "0"
    },
    "908": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6560,
        6692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x399"
    },
    "911": {
      "branch": 29,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6560,
        6692
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6676,
        6681
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "915": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6676,
        6681
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "916": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "921": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6560,
        6692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "922": {
      "op": "POP"
    },
    "923": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6708,
        6712
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x1"
    },
    "925": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6708,
        6712
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "926": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        6023,
        6719
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "op": "POP"
    },
    "930": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        6023,
        6719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "931": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "932": {
      "offset": [
        1177,
        1178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "934": {
      "offset": [
        1142,
        1165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "935": {
      "fn": "SBT.mint",
      "offset": [
        1142,
        1165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "936": {
      "fn": "SBT.mint",
      "offset": [
        1142,
        1165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "937": {
      "offset": [
        1142,
        1155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "939": {
      "offset": [
        1142,
        1165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "941": {
      "fn": "SBT.mint",
      "offset": [
        1142,
        1165
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "942": {
      "fn": "SBT.mint",
      "offset": [
        1142,
        1165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "944": {
      "fn": "SBT.mint",
      "offset": [
        1142,
        1165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "945": {
      "fn": "SBT.mint",
      "offset": [
        1142,
        1165
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "946": {
      "fn": "SBT.mint",
      "offset": [
        1142,
        1165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "947": {
      "fn": "SBT.mint",
      "offset": [
        3385,
        3393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "948": {
      "fn": "SBT.mint",
      "offset": [
        3385,
        3393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "offset": [
        1142,
        1165
      ],
      "op": "AND",
      "path": "0"
    },
    "958": {
      "offset": [
        1142,
        1179
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "959": {
      "offset": [
        1134,
        1195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F8"
    },
    "962": {
      "offset": [
        1134,
        1195
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "963": {
      "fn": "SBT.mint",
      "offset": [
        1134,
        1195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "965": {
      "fn": "SBT.mint",
      "offset": [
        1134,
        1195
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "972": {
      "op": "SHL"
    },
    "973": {
      "offset": [
        1134,
        1195
      ],
      "op": "DUP2",
      "path": "0"
    },
    "974": {
      "fn": "SBT.mint",
      "offset": [
        1134,
        1195
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "977": {
      "offset": [
        1134,
        1195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "979": {
      "fn": "SBT.mint",
      "offset": [
        1134,
        1195
      ],
      "op": "DUP3",
      "path": "0"
    },
    "980": {
      "fn": "SBT.mint",
      "offset": [
        1134,
        1195
      ],
      "op": "ADD",
      "path": "0"
    },
    "981": {
      "op": "MSTORE"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "986": {
      "op": "DUP3"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "op": "MSTORE"
    },
    "989": {
      "op": "PUSH11",
      "value": "0x536F756C20657869737473"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1006": {
      "op": "DUP3"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "offset": [
        1134,
        1195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "1015": {
      "op": "JUMP"
    },
    "1016": {
      "offset": [
        1134,
        1195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1017": {
      "offset": [
        1214,
        1240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1019": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1020": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1021": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1022": {
      "offset": [
        1214,
        1230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1024": {
      "offset": [
        1214,
        1240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1026": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1027": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1029": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1030": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1031": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1032": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1034": {
      "fn": "SBT.mint",
      "offset": [
        1214,
        1240
      ],
      "op": "AND",
      "path": "0"
    },
    "1035": {
      "offset": [
        1213,
        1240
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1036": {
      "offset": [
        1205,
        1276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x457"
    },
    "1039": {
      "offset": [
        1205,
        1276
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1040": {
      "fn": "SBT.mint",
      "offset": [
        1205,
        1276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1042": {
      "fn": "SBT.mint",
      "offset": [
        1205,
        1276
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "offset": [
        1205,
        1276
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1051": {
      "fn": "SBT.mint",
      "offset": [
        1205,
        1276
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1054": {
      "offset": [
        1205,
        1276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1056": {
      "fn": "SBT.mint",
      "offset": [
        1205,
        1276
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1057": {
      "fn": "SBT.mint",
      "offset": [
        1205,
        1276
      ],
      "op": "ADD",
      "path": "0"
    },
    "1058": {
      "op": "MSTORE"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "MSTORE"
    },
    "1066": {
      "op": "PUSH32",
      "value": "0x536F756C206973206D696E7465642C20627574206E6F7420636C61696D656400"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1101": {
      "op": "DUP3"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "op": "MSTORE"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "offset": [
        1205,
        1276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "1110": {
      "op": "JUMP"
    },
    "1111": {
      "offset": [
        1205,
        1276
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1112": {
      "fn": "SBT.mint",
      "offset": [
        3431,
        3439
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "1114": {
      "fn": "SBT.mint",
      "offset": [
        3431,
        3439
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "op": "SUB"
    },
    "1123": {
      "fn": "SBT.mint",
      "offset": [
        3431,
        3439
      ],
      "op": "AND",
      "path": "0"
    },
    "1124": {
      "fn": "SBT.mint",
      "offset": [
        3417,
        3427
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1125": {
      "branch": 30,
      "fn": "SBT.mint",
      "offset": [
        3417,
        3439
      ],
      "op": "EQ",
      "path": "0"
    },
    "1126": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B1"
    },
    "1129": {
      "branch": 30,
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1130": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1132": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1141": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1144": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1146": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1147": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "ADD",
      "path": "0"
    },
    "1148": {
      "op": "DUP2"
    },
    "1149": {
      "op": "SWAP1"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1153": {
      "op": "DUP3"
    },
    "1154": {
      "op": "ADD"
    },
    "1155": {
      "op": "MSTORE"
    },
    "1156": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F70657261746F722063616E206D696E74206E657720736F756C73"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1191": {
      "op": "DUP3"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "op": "MSTORE"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "1200": {
      "op": "JUMP"
    },
    "1201": {
      "fn": "SBT.mint",
      "offset": [
        3409,
        3476
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1208": {
      "op": "SHL"
    },
    "1209": {
      "op": "SUB"
    },
    "1210": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 7
    },
    "1211": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "AND",
      "path": "0"
    },
    "1212": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1214": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1215": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1216": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1217": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1219": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1221": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1222": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1223": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1224": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1226": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1227": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1228": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3516
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1229": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3527
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1230": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1231": {
      "fn": "SBT.mint",
      "offset": [
        3486,
        3527
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1232": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 8
    },
    "1233": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1234": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1235": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1237": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1238": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1239": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1240": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1241": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3563
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1243": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3570
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1244": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3570
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1247": {
      "op": "NOT"
    },
    "1248": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3570
      ],
      "op": "AND",
      "path": "0"
    },
    "1249": {
      "fn": "SBT.mint",
      "offset": [
        3566,
        3570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1251": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3570
      ],
      "op": "OR",
      "path": "0"
    },
    "1252": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3570
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "SBT.mint",
      "offset": [
        3537,
        3570
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1254": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "1255": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1256": {
      "op": "DUP4"
    },
    "1257": {
      "op": "DUP2"
    },
    "1258": {
      "op": "MSTORE"
    },
    "1259": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7883703ED0E86588A40D76551C92F8A4B329E3BF19765E0E6749473C1A84665"
    },
    "1292": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1295": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1297": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1298": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1299": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1300": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "SUB",
      "path": "0"
    },
    "1301": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1302": {
      "fn": "SBT.mint",
      "offset": [
        3585,
        3599
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1303": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "POP",
      "path": "0"
    },
    "1304": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "POP",
      "path": "0"
    },
    "1305": {
      "fn": "SBT.mint",
      "offset": [
        3298,
        3606
      ],
      "op": "POP",
      "path": "0"
    },
    "1306": {
      "fn": "SBT.mint",
      "jump": "o",
      "offset": [
        3298,
        3606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1307": {
      "fn": "SBT.burn",
      "offset": [
        4475,
        4777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "SBT.burn",
      "offset": [
        4527,
        4537
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1309": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1311": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1312": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1313": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1314": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1316": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1318": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1319": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1320": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1321": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1323": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1324": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1325": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1326": {
      "fn": "SBT.burn",
      "offset": [
        4511,
        4538
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1327": {
      "offset": [
        752,
        775
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1328": {
      "fn": "SBT.burn",
      "offset": [
        752,
        775
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1329": {
      "fn": "SBT.burn",
      "offset": [
        752,
        775
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1330": {
      "offset": [
        752,
        765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1332": {
      "offset": [
        752,
        775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1333": {
      "fn": "SBT.burn",
      "offset": [
        752,
        775
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1334": {
      "fn": "SBT.burn",
      "offset": [
        752,
        775
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1335": {
      "fn": "SBT.burn",
      "offset": [
        752,
        775
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1336": {
      "fn": "SBT.burn",
      "offset": [
        752,
        775
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1337": {
      "fn": "SBT.burn",
      "offset": [
        752,
        775
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1338": {
      "fn": "SBT.burn",
      "offset": [
        752,
        775
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1345": {
      "op": "SHL"
    },
    "1346": {
      "op": "SUB"
    },
    "1347": {
      "offset": [
        752,
        775
      ],
      "op": "AND",
      "path": "0"
    },
    "1348": {
      "offset": [
        744,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55F"
    },
    "1351": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1352": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1354": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1361": {
      "op": "SHL"
    },
    "1362": {
      "offset": [
        744,
        812
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1363": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1364": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1366": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "ADD",
      "path": "0"
    },
    "1367": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "1370": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1371": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC98"
    },
    "1374": {
      "fn": "SBT.burn",
      "jump": "i",
      "offset": [
        744,
        812
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1375": {
      "fn": "SBT.burn",
      "offset": [
        744,
        812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1376": {
      "fn": "SBT.burn",
      "offset": [
        4590,
        4600
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1377": {
      "fn": "SBT.burn",
      "offset": [
        4550,
        4571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1379": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1380": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1381": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1382": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4589
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1384": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1386": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1388": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1389": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1391": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1392": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1393": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1394": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1395": {
      "fn": "SBT.burn",
      "offset": [
        4574,
        4601
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1396": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4641
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 10
    },
    "1397": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4641
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1398": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1399": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1401": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4641
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1402": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1403": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4641
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1404": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4641
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1405": {
      "fn": "SBT.burn",
      "offset": [
        4618,
        4641
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1406": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1407": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1408": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1409": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1411": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1412": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "ADD",
      "path": "0"
    },
    "1413": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1414": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1415": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1416": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1418": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "ADD",
      "path": "0"
    },
    "1419": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1420": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1421": {
      "fn": "SBT.burn",
      "offset": [
        4611,
        4641
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1422": {
      "fn": "SBT.burn",
      "offset": [
        4651,
        4685
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 11
    },
    "1423": {
      "fn": "SBT.burn",
      "offset": [
        4651,
        4685
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1424": {
      "fn": "SBT.burn",
      "offset": [
        4651,
        4685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1425": {
      "fn": "SBT.burn",
      "offset": [
        4651,
        4685
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1426": {
      "fn": "SBT.burn",
      "offset": [
        4702,
        4715
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x3"
    },
    "1428": {
      "fn": "SBT.burn",
      "offset": [
        4702,
        4733
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1429": {
      "fn": "SBT.burn",
      "offset": [
        4702,
        4733
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1430": {
      "fn": "SBT.burn",
      "offset": [
        4702,
        4733
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1431": {
      "fn": "SBT.burn",
      "offset": [
        4702,
        4733
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1432": {
      "fn": "SBT.burn",
      "offset": [
        4702,
        4733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1433": {
      "fn": "SBT.burn",
      "offset": [
        4702,
        4733
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1434": {
      "fn": "SBT.burn",
      "offset": [
        4695,
        4733
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1435": {
      "fn": "SBT.burn",
      "offset": [
        4695,
        4733
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "op": "SUB"
    },
    "1444": {
      "op": "NOT"
    },
    "1445": {
      "fn": "SBT.burn",
      "offset": [
        4695,
        4733
      ],
      "op": "AND",
      "path": "0"
    },
    "1446": {
      "fn": "SBT.burn",
      "offset": [
        4695,
        4733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1447": {
      "fn": "SBT.burn",
      "offset": [
        4695,
        4733
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1448": {
      "fn": "SBT.burn",
      "offset": [
        4748,
        4770
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 13
    },
    "1449": {
      "op": "DUP3"
    },
    "1450": {
      "op": "DUP2"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "fn": "SBT.burn",
      "offset": [
        4748,
        4770
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB90306AD06B2A6FF86DDC9327DB583062895EF6540E62DC50ADD009DB5B356EB"
    },
    "1485": {
      "fn": "SBT.burn",
      "offset": [
        4748,
        4770
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "fn": "SBT.burn",
      "offset": [
        4748,
        4770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F"
    },
    "1490": {
      "op": "JUMP"
    },
    "1491": {
      "fn": "SBT.getSoul",
      "offset": [
        5400,
        5589
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1492": {
      "fn": "SBT.getSoul",
      "offset": [
        5455,
        5466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DB"
    },
    "1495": {
      "fn": "SBT.getSoul",
      "offset": [
        5455,
        5466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x981"
    },
    "1498": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        5455,
        5466
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1499": {
      "fn": "SBT.getSoul",
      "offset": [
        5455,
        5466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1506": {
      "op": "SHL"
    },
    "1507": {
      "op": "SUB"
    },
    "1508": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 14
    },
    "1509": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "AND",
      "path": "0"
    },
    "1510": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1512": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1513": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1514": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1515": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1517": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1519": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1520": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1522": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1523": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1524": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5508
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1525": {
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1526": {
      "branch": 31,
      "fn": "SBT.getSoul",
      "offset": [
        5486,
        5513
      ],
      "op": "SUB",
      "path": "0"
    },
    "1527": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x612"
    },
    "1530": {
      "branch": 31,
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1531": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1533": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1534": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1542": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1543": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1545": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "ADD",
      "path": "0"
    },
    "1546": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "1549": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1550": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC98"
    },
    "1553": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        5478,
        5536
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1554": {
      "fn": "SBT.getSoul",
      "offset": [
        5478,
        5536
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1555": {
      "op": "POP"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1562": {
      "op": "SHL"
    },
    "1563": {
      "op": "SUB"
    },
    "1564": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "AND",
      "path": "0",
      "statement": 15
    },
    "1565": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1567": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1568": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1569": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1570": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1572": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1574": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1575": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1576": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1577": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1579": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1580": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1581": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1582": {
      "fn": "SBT.getSoul",
      "offset": [
        5559,
        5581
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1583": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1584": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1585": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1587": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1588": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1589": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1590": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1591": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1592": {
      "fn": "SBT.getSoul",
      "offset": [
        5553,
        5582
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1593": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1594": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1595": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1596": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1597": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "ADD",
      "path": "0"
    },
    "1598": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1599": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1600": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1601": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1602": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1603": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1604": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1605": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1606": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1607": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1608": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "ADD",
      "path": "0"
    },
    "1609": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1610": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1611": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1612": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1614": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1615": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "ADD",
      "path": "0"
    },
    "1616": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1617": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1618": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1619": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1621": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1622": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1623": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "ADD",
      "path": "0"
    },
    "1624": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1625": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1626": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1627": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "ADD",
      "path": "0"
    },
    "1628": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1629": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1630": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1631": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "ADD",
      "path": "0"
    },
    "1632": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1633": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1634": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1635": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1636": {
      "fn": "SBT.getSoul",
      "offset": [
        5546,
        5582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1637": {
      "fn": "SBT.getSoul",
      "jump": "o",
      "offset": [
        5400,
        5589
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1638": {
      "fn": "SBT.claim",
      "offset": [
        3678,
        4084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1639": {
      "fn": "SBT.claim",
      "offset": [
        3796,
        3806
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1640": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1642": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1643": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1644": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1645": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1647": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1649": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1650": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1651": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1652": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1654": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1655": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1656": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1657": {
      "fn": "SBT.claim",
      "offset": [
        3780,
        3807
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1658": {
      "offset": [
        916,
        939
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1659": {
      "fn": "SBT.claim",
      "offset": [
        916,
        939
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1660": {
      "fn": "SBT.claim",
      "offset": [
        916,
        939
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1661": {
      "offset": [
        916,
        929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1663": {
      "offset": [
        916,
        939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1664": {
      "fn": "SBT.claim",
      "offset": [
        916,
        939
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1665": {
      "fn": "SBT.claim",
      "offset": [
        916,
        939
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1666": {
      "fn": "SBT.claim",
      "offset": [
        916,
        939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1667": {
      "fn": "SBT.claim",
      "offset": [
        916,
        939
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1668": {
      "fn": "SBT.claim",
      "offset": [
        916,
        939
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1669": {
      "fn": "SBT.claim",
      "offset": [
        916,
        939
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1676": {
      "op": "SHL"
    },
    "1677": {
      "op": "SUB"
    },
    "1678": {
      "offset": [
        916,
        939
      ],
      "op": "AND",
      "path": "0"
    },
    "1679": {
      "offset": [
        916,
        953
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1680": {
      "offset": [
        895,
        1002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DB"
    },
    "1683": {
      "offset": [
        895,
        1002
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1684": {
      "fn": "SBT.claim",
      "offset": [
        895,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1686": {
      "fn": "SBT.claim",
      "offset": [
        895,
        1002
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1693": {
      "op": "SHL"
    },
    "1694": {
      "offset": [
        895,
        1002
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1695": {
      "fn": "SBT.claim",
      "offset": [
        895,
        1002
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1698": {
      "offset": [
        895,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1700": {
      "fn": "SBT.claim",
      "offset": [
        895,
        1002
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1701": {
      "fn": "SBT.claim",
      "offset": [
        895,
        1002
      ],
      "op": "ADD",
      "path": "0"
    },
    "1702": {
      "op": "MSTORE"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "MSTORE"
    },
    "1710": {
      "op": "PUSH32",
      "value": "0x536F756C20697320616C726561647920636C61696D6564000000000000000000"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1745": {
      "op": "DUP3"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "offset": [
        895,
        1002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "1754": {
      "op": "JUMP"
    },
    "1755": {
      "offset": [
        895,
        1002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1756": {
      "offset": [
        1020,
        1046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1758": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1759": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1760": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1761": {
      "offset": [
        1020,
        1036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1763": {
      "offset": [
        1020,
        1046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1765": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1766": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1768": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1769": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1770": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1771": {
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1773": {
      "branch": 32,
      "fn": "SBT.claim",
      "offset": [
        1020,
        1046
      ],
      "op": "AND",
      "path": "0"
    },
    "1774": {
      "offset": [
        1012,
        1066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72B"
    },
    "1777": {
      "branch": 32,
      "offset": [
        1012,
        1066
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1778": {
      "fn": "SBT.claim",
      "offset": [
        1012,
        1066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1780": {
      "fn": "SBT.claim",
      "offset": [
        1012,
        1066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "offset": [
        1012,
        1066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1789": {
      "fn": "SBT.claim",
      "offset": [
        1012,
        1066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1792": {
      "offset": [
        1012,
        1066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1794": {
      "fn": "SBT.claim",
      "offset": [
        1012,
        1066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1795": {
      "fn": "SBT.claim",
      "offset": [
        1012,
        1066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1796": {
      "op": "MSTORE"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1801": {
      "op": "DUP3"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "MSTORE"
    },
    "1804": {
      "op": "PUSH15",
      "value": "0x139BDB881B5A5B9D1959081CDBDD5B"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1825": {
      "op": "DUP3"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "MSTORE"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1830": {
      "op": "ADD"
    },
    "1831": {
      "offset": [
        1012,
        1066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "1834": {
      "op": "JUMP"
    },
    "1835": {
      "offset": [
        1012,
        1066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1836": {
      "fn": "SBT.claim",
      "offset": [
        3855,
        3865
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1837": {
      "fn": "SBT.claim",
      "offset": [
        3823,
        3836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1839": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1840": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1841": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1842": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1844": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1846": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1847": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1848": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1849": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1851": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1852": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1853": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1854": {
      "fn": "SBT.claim",
      "offset": [
        3839,
        3866
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1855": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3909
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 16
    },
    "1856": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3909
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1857": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1858": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1860": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3909
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1861": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1862": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1863": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3909
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1864": {
      "fn": "SBT.claim",
      "offset": [
        3883,
        3909
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1865": {
      "fn": "SBT.claim",
      "offset": [
        3876,
        3909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1866": {
      "fn": "SBT.claim",
      "offset": [
        3876,
        3909
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1869": {
      "op": "NOT"
    },
    "1870": {
      "fn": "SBT.claim",
      "offset": [
        3876,
        3909
      ],
      "op": "AND",
      "path": "0"
    },
    "1871": {
      "fn": "SBT.claim",
      "offset": [
        3876,
        3909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1872": {
      "fn": "SBT.claim",
      "offset": [
        3876,
        3909
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1873": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3932
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x3"
    },
    "1875": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3942
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1876": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3942
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1877": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3942
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1878": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3942
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1879": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3942
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1880": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1881": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1888": {
      "op": "SHL"
    },
    "1889": {
      "op": "SUB"
    },
    "1890": {
      "op": "NOT"
    },
    "1891": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "AND",
      "path": "0"
    },
    "1892": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1893": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1894": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "OR",
      "path": "0"
    },
    "1895": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1896": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1897": {
      "fn": "SBT.claim",
      "offset": [
        3919,
        3955
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1898": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3970
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x5"
    },
    "1900": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3980
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1901": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3980
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1902": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3980
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1903": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3980
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1904": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3980
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1905": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3980
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1906": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3999
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1907": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1908": {
      "fn": "SBT.claim",
      "offset": [
        3965,
        3999
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1909": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 19
    },
    "1910": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4035
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1914": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4035
      ],
      "op": "ADD",
      "path": "0"
    },
    "1915": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1916": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1917": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1918": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "ADD",
      "path": "0"
    },
    "1919": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1920": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1922": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1923": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1924": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "ADD",
      "path": "0"
    },
    "1925": {
      "fn": "SBT.claim",
      "offset": [
        4009,
        4047
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1926": {
      "fn": "SBT.claim",
      "offset": [
        4062,
        4077
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 20
    },
    "1927": {
      "fn": "SBT.claim",
      "offset": [
        4062,
        4077
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1928": {
      "op": "DUP3"
    },
    "1929": {
      "op": "DUP2"
    },
    "1930": {
      "op": "MSTORE"
    },
    "1931": {
      "fn": "SBT.claim",
      "offset": [
        4062,
        4077
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7BB2B3C10797BACCB6F8C4791F1EDD6CA2F0D028EE0EDA64B01A9A57E3A653F7"
    },
    "1964": {
      "fn": "SBT.claim",
      "offset": [
        4062,
        4077
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1965": {
      "op": "ADD"
    },
    "1966": {
      "fn": "SBT.claim",
      "offset": [
        4062,
        4077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50E"
    },
    "1969": {
      "op": "JUMP"
    },
    "1970": {
      "fn": "SBT.getOwner",
      "offset": [
        5686,
        5921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1971": {
      "fn": "SBT.getOwner",
      "offset": [
        5742,
        5749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1973": {
      "fn": "SBT.getOwner",
      "offset": [
        5796,
        5804
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "1974": {
      "fn": "SBT.getOwner",
      "offset": [
        5796,
        5804
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1981": {
      "op": "SHL"
    },
    "1982": {
      "op": "SUB"
    },
    "1983": {
      "fn": "SBT.getOwner",
      "offset": [
        5796,
        5804
      ],
      "op": "AND",
      "path": "0"
    },
    "1984": {
      "fn": "SBT.getOwner",
      "offset": [
        5782,
        5792
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1985": {
      "branch": 33,
      "fn": "SBT.getOwner",
      "offset": [
        5782,
        5804
      ],
      "op": "EQ",
      "path": "0"
    },
    "1986": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x822"
    },
    "1989": {
      "branch": 33,
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1990": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1992": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2001": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2004": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2006": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2007": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "ADD",
      "path": "0"
    },
    "2008": {
      "op": "MSTORE"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "ADD"
    },
    "2015": {
      "op": "MSTORE"
    },
    "2016": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468697320636F6E74726163742063616E20766965772074686973"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2051": {
      "op": "DUP3"
    },
    "2052": {
      "op": "ADD"
    },
    "2053": {
      "op": "MSTORE"
    },
    "2054": {
      "op": "PUSH12",
      "value": "0x206861736865642064617461"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2072": {
      "op": "DUP3"
    },
    "2073": {
      "op": "ADD"
    },
    "2074": {
      "op": "MSTORE"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2077": {
      "op": "ADD"
    },
    "2078": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "2081": {
      "op": "JUMP"
    },
    "2082": {
      "fn": "SBT.getOwner",
      "offset": [
        5761,
        5874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2083": {
      "op": "POP"
    },
    "2084": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "2086": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2087": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2088": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2089": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2091": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2093": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2094": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2096": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2097": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2098": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "op": "SUB"
    },
    "2107": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "AND",
      "path": "0"
    },
    "2108": {
      "fn": "SBT.getOwner",
      "offset": [
        5891,
        5914
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2109": {
      "fn": "SBT.getOwner",
      "jump": "o",
      "offset": [
        5686,
        5921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2110": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2111": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3009,
        3017
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x0"
    },
    "2113": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3009,
        3017
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "SUB"
    },
    "2122": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3009,
        3017
      ],
      "op": "AND",
      "path": "0"
    },
    "2123": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2995,
        3005
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2124": {
      "branch": 34,
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2995,
        3017
      ],
      "op": "EQ",
      "path": "0"
    },
    "2125": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A8"
    },
    "2128": {
      "branch": 34,
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2129": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2131": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2132": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2140": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2143": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2145": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2146": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "ADD",
      "path": "0"
    },
    "2147": {
      "op": "MSTORE"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2152": {
      "op": "DUP3"
    },
    "2153": {
      "op": "ADD"
    },
    "2154": {
      "op": "MSTORE"
    },
    "2155": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468697320636F6E74726163742063616E20736574207468697320"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2190": {
      "op": "DUP3"
    },
    "2191": {
      "op": "ADD"
    },
    "2192": {
      "op": "MSTORE"
    },
    "2193": {
      "op": "PUSH7",
      "value": "0x61646472657373"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2206": {
      "op": "DUP3"
    },
    "2207": {
      "op": "ADD"
    },
    "2208": {
      "op": "MSTORE"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2211": {
      "op": "ADD"
    },
    "2212": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "2215": {
      "op": "JUMP"
    },
    "2216": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2974,
        3082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2217": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3112
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x1"
    },
    "2219": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2220": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2227": {
      "op": "SHL"
    },
    "2228": {
      "op": "SUB"
    },
    "2229": {
      "op": "NOT"
    },
    "2230": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "AND",
      "path": "0"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2237": {
      "op": "SHL"
    },
    "2238": {
      "op": "SUB"
    },
    "2239": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2240": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "AND",
      "path": "0"
    },
    "2241": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2242": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2243": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "OR",
      "path": "0"
    },
    "2244": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2245": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2246": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3092,
        3127
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2247": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x40"
    },
    "2249": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2250": {
      "op": "SWAP1"
    },
    "2251": {
      "op": "DUP2"
    },
    "2252": {
      "op": "MSTORE"
    },
    "2253": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x763C88EAA6A598ACCE6051F1D0326944C2B7166CC9512B51414A5AADAB51A9C"
    },
    "2286": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2289": {
      "op": "ADD"
    },
    "2290": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2292": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2293": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2294": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2295": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "SUB",
      "path": "0"
    },
    "2296": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2297": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        3142,
        3185
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2298": {
      "fn": "SBT.setAchevementsContractAddress",
      "offset": [
        2894,
        3192
      ],
      "op": "POP",
      "path": "0"
    },
    "2299": {
      "fn": "SBT.setAchevementsContractAddress",
      "jump": "o",
      "offset": [
        2894,
        3192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2300": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2485,
        2888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2303": {
      "op": "DUP1"
    },
    "2304": {
      "op": "MLOAD"
    },
    "2305": {
      "op": "DUP1"
    },
    "2306": {
      "op": "DUP3"
    },
    "2307": {
      "op": "ADD"
    },
    "2308": {
      "op": "SWAP1"
    },
    "2309": {
      "op": "SWAP2"
    },
    "2310": {
      "op": "MSTORE"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2313": {
      "op": "DUP1"
    },
    "2314": {
      "op": "DUP3"
    },
    "2315": {
      "op": "MSTORE"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2318": {
      "op": "DUP3"
    },
    "2319": {
      "op": "ADD"
    },
    "2320": {
      "op": "MSTORE"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2323": {
      "op": "DUP1"
    },
    "2324": {
      "op": "MLOAD"
    },
    "2325": {
      "op": "DUP1"
    },
    "2326": {
      "op": "DUP3"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "SWAP1"
    },
    "2329": {
      "op": "SWAP2"
    },
    "2330": {
      "op": "MSTORE"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2333": {
      "op": "DUP1"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2338": {
      "op": "DUP3"
    },
    "2339": {
      "op": "ADD"
    },
    "2340": {
      "op": "MSTORE"
    },
    "2341": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2744,
        2763
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x20"
    },
    "2343": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2744,
        2763
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2344": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2744,
        2763
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2345": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2744,
        2763
      ],
      "op": "ADD",
      "path": "0"
    },
    "2346": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2744,
        2763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2347": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2349": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2350": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x937"
    },
    "2353": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2354": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "ADD",
      "path": "0"
    },
    "2355": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC4"
    },
    "2358": {
      "fn": "SBT.hashPersonalData",
      "jump": "i",
      "offset": [
        2727,
        2764
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2359": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2360": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2362": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2363": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2366": {
      "op": "NOT"
    },
    "2367": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2368": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2369": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "SUB",
      "path": "0"
    },
    "2370": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "ADD",
      "path": "0"
    },
    "2371": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2372": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2373": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2374": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2375": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2376": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2377": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2704,
        2774
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2378": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2727,
        2764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2380": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2704,
        2774
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2381": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2704,
        2774
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2382": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2704,
        2774
      ],
      "op": "ADD",
      "path": "0"
    },
    "2383": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2704,
        2774
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2384": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2672,
        2701
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2385": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2672,
        2701
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2386": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2672,
        2701
      ],
      "op": "ADD",
      "path": "0"
    },
    "2387": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2672,
        2774
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2388": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2836,
        2852
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 27
    },
    "2389": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2836,
        2852
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2390": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2391": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2392": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x961"
    },
    "2395": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2396": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "ADD",
      "path": "0"
    },
    "2397": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC4"
    },
    "2400": {
      "fn": "SBT.hashPersonalData",
      "jump": "i",
      "offset": [
        2819,
        2853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2401": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2402": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2404": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2405": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2408": {
      "op": "NOT"
    },
    "2409": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2410": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2411": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "SUB",
      "path": "0"
    },
    "2412": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "ADD",
      "path": "0"
    },
    "2413": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2414": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2415": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2416": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2417": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2418": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2809,
        2854
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2419": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2809,
        2854
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2420": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2819,
        2853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2422": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2809,
        2854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2423": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2809,
        2854
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2424": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2809,
        2854
      ],
      "op": "ADD",
      "path": "0"
    },
    "2425": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2809,
        2854
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2426": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2784,
        2854
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2427": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2784,
        2854
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2428": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2784,
        2794
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2429": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        2485,
        2888
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2430": {
      "op": "POP"
    },
    "2431": {
      "op": "POP"
    },
    "2432": {
      "fn": "SBT.hashPersonalData",
      "jump": "o",
      "offset": [
        2485,
        2888
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2433": {
      "op": "JUMPDEST"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2436": {
      "op": "MLOAD"
    },
    "2437": {
      "op": "DUP1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2440": {
      "op": "ADD"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "DUP1"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2447": {
      "op": "DUP2"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2451": {
      "op": "ADD"
    },
    "2452": {
      "op": "PUSH2",
      "value": "0x9B6"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2457": {
      "op": "MLOAD"
    },
    "2458": {
      "op": "DUP1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2461": {
      "op": "ADD"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2464": {
      "op": "MSTORE"
    },
    "2465": {
      "op": "DUP1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2468": {
      "op": "DUP1"
    },
    "2469": {
      "op": "NOT"
    },
    "2470": {
      "op": "AND"
    },
    "2471": {
      "op": "DUP2"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2475": {
      "op": "ADD"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2478": {
      "op": "DUP1"
    },
    "2479": {
      "op": "NOT"
    },
    "2480": {
      "op": "AND"
    },
    "2481": {
      "op": "DUP2"
    },
    "2482": {
      "op": "MSTORE"
    },
    "2483": {
      "op": "POP"
    },
    "2484": {
      "op": "SWAP1"
    },
    "2485": {
      "op": "JUMP"
    },
    "2486": {
      "op": "JUMPDEST"
    },
    "2487": {
      "op": "SWAP1"
    },
    "2488": {
      "op": "MSTORE"
    },
    "2489": {
      "op": "SWAP1"
    },
    "2490": {
      "jump": "o",
      "op": "JUMP"
    },
    "2491": {
      "op": "JUMPDEST"
    },
    "2492": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2502": {
      "op": "MSTORE"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2507": {
      "op": "MSTORE"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2512": {
      "op": "REVERT"
    },
    "2513": {
      "op": "JUMPDEST"
    },
    "2514": {
      "op": "DUP1"
    },
    "2515": {
      "op": "CALLDATALOAD"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2522": {
      "op": "SHL"
    },
    "2523": {
      "op": "SUB"
    },
    "2524": {
      "op": "DUP2"
    },
    "2525": {
      "op": "AND"
    },
    "2526": {
      "op": "DUP2"
    },
    "2527": {
      "op": "EQ"
    },
    "2528": {
      "op": "PUSH2",
      "value": "0x9E8"
    },
    "2531": {
      "op": "JUMPI"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2534": {
      "op": "DUP1"
    },
    "2535": {
      "op": "REVERT"
    },
    "2536": {
      "op": "JUMPDEST"
    },
    "2537": {
      "op": "SWAP2"
    },
    "2538": {
      "op": "SWAP1"
    },
    "2539": {
      "op": "POP"
    },
    "2540": {
      "jump": "o",
      "op": "JUMP"
    },
    "2541": {
      "op": "JUMPDEST"
    },
    "2542": {
      "op": "DUP1"
    },
    "2543": {
      "op": "CALLDATALOAD"
    },
    "2544": {
      "op": "DUP1"
    },
    "2545": {
      "op": "ISZERO"
    },
    "2546": {
      "op": "ISZERO"
    },
    "2547": {
      "op": "DUP2"
    },
    "2548": {
      "op": "EQ"
    },
    "2549": {
      "op": "PUSH2",
      "value": "0x9E8"
    },
    "2552": {
      "op": "JUMPI"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2555": {
      "op": "DUP1"
    },
    "2556": {
      "op": "REVERT"
    },
    "2557": {
      "op": "JUMPDEST"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2560": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2563": {
      "op": "DUP1"
    },
    "2564": {
      "op": "DUP4"
    },
    "2565": {
      "op": "DUP6"
    },
    "2566": {
      "op": "SUB"
    },
    "2567": {
      "op": "SLT"
    },
    "2568": {
      "op": "ISZERO"
    },
    "2569": {
      "op": "PUSH2",
      "value": "0xA11"
    },
    "2572": {
      "op": "JUMPI"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2575": {
      "op": "DUP1"
    },
    "2576": {
      "op": "REVERT"
    },
    "2577": {
      "op": "JUMPDEST"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2580": {
      "op": "MLOAD"
    },
    "2581": {
      "op": "SWAP1"
    },
    "2582": {
      "op": "DUP2"
    },
    "2583": {
      "op": "ADD"
    },
    "2584": {
      "op": "SWAP1"
    },
    "2585": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2594": {
      "op": "DUP3"
    },
    "2595": {
      "op": "GT"
    },
    "2596": {
      "op": "DUP2"
    },
    "2597": {
      "op": "DUP4"
    },
    "2598": {
      "op": "LT"
    },
    "2599": {
      "op": "OR"
    },
    "2600": {
      "op": "ISZERO"
    },
    "2601": {
      "op": "PUSH2",
      "value": "0xA34"
    },
    "2604": {
      "op": "JUMPI"
    },
    "2605": {
      "op": "PUSH2",
      "value": "0xA34"
    },
    "2608": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "2611": {
      "jump": "i",
      "op": "JUMP"
    },
    "2612": {
      "op": "JUMPDEST"
    },
    "2613": {
      "op": "DUP2"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "DUP4"
    },
    "2618": {
      "op": "CALLDATALOAD"
    },
    "2619": {
      "op": "DUP2"
    },
    "2620": {
      "op": "MSTORE"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2623": {
      "op": "DUP5"
    },
    "2624": {
      "op": "ADD"
    },
    "2625": {
      "op": "CALLDATALOAD"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2628": {
      "op": "DUP3"
    },
    "2629": {
      "op": "ADD"
    },
    "2630": {
      "op": "MSTORE"
    },
    "2631": {
      "op": "PUSH2",
      "value": "0xA52"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2636": {
      "op": "DUP6"
    },
    "2637": {
      "op": "ADD"
    },
    "2638": {
      "op": "PUSH2",
      "value": "0x9D1"
    },
    "2641": {
      "jump": "i",
      "op": "JUMP"
    },
    "2642": {
      "op": "JUMPDEST"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2645": {
      "op": "DUP3"
    },
    "2646": {
      "op": "ADD"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "PUSH2",
      "value": "0xA63"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2653": {
      "op": "DUP6"
    },
    "2654": {
      "op": "ADD"
    },
    "2655": {
      "op": "PUSH2",
      "value": "0x9ED"
    },
    "2658": {
      "jump": "i",
      "op": "JUMP"
    },
    "2659": {
      "op": "JUMPDEST"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2662": {
      "op": "DUP3"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "op": "MSTORE"
    },
    "2665": {
      "op": "PUSH2",
      "value": "0xA74"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2670": {
      "op": "DUP6"
    },
    "2671": {
      "op": "ADD"
    },
    "2672": {
      "op": "PUSH2",
      "value": "0x9D1"
    },
    "2675": {
      "jump": "i",
      "op": "JUMP"
    },
    "2676": {
      "op": "JUMPDEST"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2679": {
      "op": "DUP3"
    },
    "2680": {
      "op": "ADD"
    },
    "2681": {
      "op": "MSTORE"
    },
    "2682": {
      "op": "PUSH2",
      "value": "0xA85"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2687": {
      "op": "DUP6"
    },
    "2688": {
      "op": "ADD"
    },
    "2689": {
      "op": "PUSH2",
      "value": "0x9D1"
    },
    "2692": {
      "jump": "i",
      "op": "JUMP"
    },
    "2693": {
      "op": "JUMPDEST"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2696": {
      "op": "DUP3"
    },
    "2697": {
      "op": "ADD"
    },
    "2698": {
      "op": "MSTORE"
    },
    "2699": {
      "op": "PUSH2",
      "value": "0xA96"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2704": {
      "op": "DUP6"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "op": "PUSH2",
      "value": "0x9ED"
    },
    "2709": {
      "jump": "i",
      "op": "JUMP"
    },
    "2710": {
      "op": "JUMPDEST"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2713": {
      "op": "DUP3"
    },
    "2714": {
      "op": "ADD"
    },
    "2715": {
      "op": "MSTORE"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2718": {
      "op": "DUP5"
    },
    "2719": {
      "op": "ADD"
    },
    "2720": {
      "op": "CALLDATALOAD"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2723": {
      "op": "DUP3"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "op": "MSTORE"
    },
    "2726": {
      "op": "DUP1"
    },
    "2727": {
      "op": "SWAP3"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "op": "POP"
    },
    "2730": {
      "op": "POP"
    },
    "2731": {
      "op": "SWAP3"
    },
    "2732": {
      "op": "SWAP2"
    },
    "2733": {
      "op": "POP"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "jump": "o",
      "op": "JUMP"
    },
    "2736": {
      "op": "JUMPDEST"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2739": {
      "op": "DUP3"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2742": {
      "op": "DUP4"
    },
    "2743": {
      "op": "ADD"
    },
    "2744": {
      "op": "SLT"
    },
    "2745": {
      "op": "PUSH2",
      "value": "0xAC1"
    },
    "2748": {
      "op": "JUMPI"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2751": {
      "op": "DUP1"
    },
    "2752": {
      "op": "REVERT"
    },
    "2753": {
      "op": "JUMPDEST"
    },
    "2754": {
      "op": "DUP2"
    },
    "2755": {
      "op": "CALLDATALOAD"
    },
    "2756": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2765": {
      "op": "DUP1"
    },
    "2766": {
      "op": "DUP3"
    },
    "2767": {
      "op": "GT"
    },
    "2768": {
      "op": "ISZERO"
    },
    "2769": {
      "op": "PUSH2",
      "value": "0xADC"
    },
    "2772": {
      "op": "JUMPI"
    },
    "2773": {
      "op": "PUSH2",
      "value": "0xADC"
    },
    "2776": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "2779": {
      "jump": "i",
      "op": "JUMP"
    },
    "2780": {
      "op": "JUMPDEST"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2783": {
      "op": "MLOAD"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2786": {
      "op": "DUP4"
    },
    "2787": {
      "op": "ADD"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2790": {
      "op": "NOT"
    },
    "2791": {
      "op": "SWAP1"
    },
    "2792": {
      "op": "DUP2"
    },
    "2793": {
      "op": "AND"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2796": {
      "op": "ADD"
    },
    "2797": {
      "op": "AND"
    },
    "2798": {
      "op": "DUP2"
    },
    "2799": {
      "op": "ADD"
    },
    "2800": {
      "op": "SWAP1"
    },
    "2801": {
      "op": "DUP3"
    },
    "2802": {
      "op": "DUP3"
    },
    "2803": {
      "op": "GT"
    },
    "2804": {
      "op": "DUP2"
    },
    "2805": {
      "op": "DUP4"
    },
    "2806": {
      "op": "LT"
    },
    "2807": {
      "op": "OR"
    },
    "2808": {
      "op": "ISZERO"
    },
    "2809": {
      "op": "PUSH2",
      "value": "0xB04"
    },
    "2812": {
      "op": "JUMPI"
    },
    "2813": {
      "op": "PUSH2",
      "value": "0xB04"
    },
    "2816": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "2819": {
      "jump": "i",
      "op": "JUMP"
    },
    "2820": {
      "op": "JUMPDEST"
    },
    "2821": {
      "op": "DUP2"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2824": {
      "op": "MSTORE"
    },
    "2825": {
      "op": "DUP4"
    },
    "2826": {
      "op": "DUP2"
    },
    "2827": {
      "op": "MSTORE"
    },
    "2828": {
      "op": "DUP7"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2831": {
      "op": "DUP6"
    },
    "2832": {
      "op": "DUP9"
    },
    "2833": {
      "op": "ADD"
    },
    "2834": {
      "op": "ADD"
    },
    "2835": {
      "op": "GT"
    },
    "2836": {
      "op": "ISZERO"
    },
    "2837": {
      "op": "PUSH2",
      "value": "0xB1D"
    },
    "2840": {
      "op": "JUMPI"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2843": {
      "op": "DUP1"
    },
    "2844": {
      "op": "REVERT"
    },
    "2845": {
      "op": "JUMPDEST"
    },
    "2846": {
      "op": "DUP4"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2849": {
      "op": "DUP8"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2853": {
      "op": "DUP4"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "op": "CALLDATACOPY"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2860": {
      "op": "DUP6"
    },
    "2861": {
      "op": "DUP4"
    },
    "2862": {
      "op": "ADD"
    },
    "2863": {
      "op": "ADD"
    },
    "2864": {
      "op": "MSTORE"
    },
    "2865": {
      "op": "DUP1"
    },
    "2866": {
      "op": "SWAP5"
    },
    "2867": {
      "op": "POP"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "op": "POP"
    },
    "2872": {
      "op": "SWAP3"
    },
    "2873": {
      "op": "SWAP2"
    },
    "2874": {
      "op": "POP"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "jump": "o",
      "op": "JUMP"
    },
    "2877": {
      "op": "JUMPDEST"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2882": {
      "op": "DUP3"
    },
    "2883": {
      "op": "DUP5"
    },
    "2884": {
      "op": "SUB"
    },
    "2885": {
      "op": "SLT"
    },
    "2886": {
      "op": "ISZERO"
    },
    "2887": {
      "op": "PUSH2",
      "value": "0xB4F"
    },
    "2890": {
      "op": "JUMPI"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2893": {
      "op": "DUP1"
    },
    "2894": {
      "op": "REVERT"
    },
    "2895": {
      "op": "JUMPDEST"
    },
    "2896": {
      "op": "DUP2"
    },
    "2897": {
      "op": "CALLDATALOAD"
    },
    "2898": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2907": {
      "op": "DUP1"
    },
    "2908": {
      "op": "DUP3"
    },
    "2909": {
      "op": "GT"
    },
    "2910": {
      "op": "ISZERO"
    },
    "2911": {
      "op": "PUSH2",
      "value": "0xB67"
    },
    "2914": {
      "op": "JUMPI"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2917": {
      "op": "DUP1"
    },
    "2918": {
      "op": "REVERT"
    },
    "2919": {
      "op": "JUMPDEST"
    },
    "2920": {
      "op": "SWAP1"
    },
    "2921": {
      "op": "DUP4"
    },
    "2922": {
      "op": "ADD"
    },
    "2923": {
      "op": "SWAP1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2926": {
      "op": "DUP3"
    },
    "2927": {
      "op": "DUP7"
    },
    "2928": {
      "op": "SUB"
    },
    "2929": {
      "op": "SLT"
    },
    "2930": {
      "op": "ISZERO"
    },
    "2931": {
      "op": "PUSH2",
      "value": "0xB7B"
    },
    "2934": {
      "op": "JUMPI"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2937": {
      "op": "DUP1"
    },
    "2938": {
      "op": "REVERT"
    },
    "2939": {
      "op": "JUMPDEST"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2942": {
      "op": "MLOAD"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2945": {
      "op": "DUP2"
    },
    "2946": {
      "op": "ADD"
    },
    "2947": {
      "op": "DUP2"
    },
    "2948": {
      "op": "DUP2"
    },
    "2949": {
      "op": "LT"
    },
    "2950": {
      "op": "DUP4"
    },
    "2951": {
      "op": "DUP3"
    },
    "2952": {
      "op": "GT"
    },
    "2953": {
      "op": "OR"
    },
    "2954": {
      "op": "ISZERO"
    },
    "2955": {
      "op": "PUSH2",
      "value": "0xB96"
    },
    "2958": {
      "op": "JUMPI"
    },
    "2959": {
      "op": "PUSH2",
      "value": "0xB96"
    },
    "2962": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "2965": {
      "jump": "i",
      "op": "JUMP"
    },
    "2966": {
      "op": "JUMPDEST"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2969": {
      "op": "MSTORE"
    },
    "2970": {
      "op": "DUP3"
    },
    "2971": {
      "op": "CALLDATALOAD"
    },
    "2972": {
      "op": "DUP3"
    },
    "2973": {
      "op": "DUP2"
    },
    "2974": {
      "op": "GT"
    },
    "2975": {
      "op": "ISZERO"
    },
    "2976": {
      "op": "PUSH2",
      "value": "0xBA8"
    },
    "2979": {
      "op": "JUMPI"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2982": {
      "op": "DUP1"
    },
    "2983": {
      "op": "REVERT"
    },
    "2984": {
      "op": "JUMPDEST"
    },
    "2985": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "2988": {
      "op": "DUP8"
    },
    "2989": {
      "op": "DUP3"
    },
    "2990": {
      "op": "DUP7"
    },
    "2991": {
      "op": "ADD"
    },
    "2992": {
      "op": "PUSH2",
      "value": "0xAB0"
    },
    "2995": {
      "jump": "i",
      "op": "JUMP"
    },
    "2996": {
      "op": "JUMPDEST"
    },
    "2997": {
      "op": "DUP3"
    },
    "2998": {
      "op": "MSTORE"
    },
    "2999": {
      "op": "POP"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3002": {
      "op": "DUP4"
    },
    "3003": {
      "op": "ADD"
    },
    "3004": {
      "op": "CALLDATALOAD"
    },
    "3005": {
      "op": "DUP3"
    },
    "3006": {
      "op": "DUP2"
    },
    "3007": {
      "op": "GT"
    },
    "3008": {
      "op": "ISZERO"
    },
    "3009": {
      "op": "PUSH2",
      "value": "0xBC9"
    },
    "3012": {
      "op": "JUMPI"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3015": {
      "op": "DUP1"
    },
    "3016": {
      "op": "REVERT"
    },
    "3017": {
      "op": "JUMPDEST"
    },
    "3018": {
      "op": "PUSH2",
      "value": "0xBD5"
    },
    "3021": {
      "op": "DUP8"
    },
    "3022": {
      "op": "DUP3"
    },
    "3023": {
      "op": "DUP7"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "PUSH2",
      "value": "0xAB0"
    },
    "3028": {
      "jump": "i",
      "op": "JUMP"
    },
    "3029": {
      "op": "JUMPDEST"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3032": {
      "op": "DUP4"
    },
    "3033": {
      "op": "ADD"
    },
    "3034": {
      "op": "MSTORE"
    },
    "3035": {
      "op": "POP"
    },
    "3036": {
      "op": "SWAP6"
    },
    "3037": {
      "op": "SWAP5"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "op": "POP"
    },
    "3040": {
      "op": "POP"
    },
    "3041": {
      "op": "POP"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "jump": "o",
      "op": "JUMP"
    },
    "3044": {
      "op": "JUMPDEST"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3047": {
      "op": "DUP1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3050": {
      "op": "DUP4"
    },
    "3051": {
      "op": "DUP6"
    },
    "3052": {
      "op": "SUB"
    },
    "3053": {
      "op": "SLT"
    },
    "3054": {
      "op": "ISZERO"
    },
    "3055": {
      "op": "PUSH2",
      "value": "0xBF7"
    },
    "3058": {
      "op": "JUMPI"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3061": {
      "op": "DUP1"
    },
    "3062": {
      "op": "REVERT"
    },
    "3063": {
      "op": "JUMPDEST"
    },
    "3064": {
      "op": "PUSH2",
      "value": "0xC00"
    },
    "3067": {
      "op": "DUP4"
    },
    "3068": {
      "op": "PUSH2",
      "value": "0x9D1"
    },
    "3071": {
      "jump": "i",
      "op": "JUMP"
    },
    "3072": {
      "op": "JUMPDEST"
    },
    "3073": {
      "op": "SWAP5"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3076": {
      "op": "SWAP4"
    },
    "3077": {
      "op": "SWAP1"
    },
    "3078": {
      "op": "SWAP4"
    },
    "3079": {
      "op": "ADD"
    },
    "3080": {
      "op": "CALLDATALOAD"
    },
    "3081": {
      "op": "SWAP4"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "op": "POP"
    },
    "3084": {
      "op": "POP"
    },
    "3085": {
      "jump": "o",
      "op": "JUMP"
    },
    "3086": {
      "op": "JUMPDEST"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3091": {
      "op": "DUP3"
    },
    "3092": {
      "op": "DUP5"
    },
    "3093": {
      "op": "SUB"
    },
    "3094": {
      "op": "SLT"
    },
    "3095": {
      "op": "ISZERO"
    },
    "3096": {
      "op": "PUSH2",
      "value": "0xC20"
    },
    "3099": {
      "op": "JUMPI"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3102": {
      "op": "DUP1"
    },
    "3103": {
      "op": "REVERT"
    },
    "3104": {
      "op": "JUMPDEST"
    },
    "3105": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "3108": {
      "op": "DUP3"
    },
    "3109": {
      "op": "PUSH2",
      "value": "0x9D1"
    },
    "3112": {
      "jump": "i",
      "op": "JUMP"
    },
    "3113": {
      "op": "JUMPDEST"
    },
    "3114": {
      "op": "SWAP4"
    },
    "3115": {
      "op": "SWAP3"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "POP"
    },
    "3118": {
      "op": "POP"
    },
    "3119": {
      "jump": "o",
      "op": "JUMP"
    },
    "3120": {
      "op": "JUMPDEST"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3125": {
      "op": "DUP3"
    },
    "3126": {
      "op": "DUP5"
    },
    "3127": {
      "op": "SUB"
    },
    "3128": {
      "op": "SLT"
    },
    "3129": {
      "op": "ISZERO"
    },
    "3130": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3133": {
      "op": "JUMPI"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3136": {
      "op": "DUP1"
    },
    "3137": {
      "op": "REVERT"
    },
    "3138": {
      "op": "JUMPDEST"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3141": {
      "op": "MLOAD"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3144": {
      "op": "DUP2"
    },
    "3145": {
      "op": "ADD"
    },
    "3146": {
      "op": "DUP2"
    },
    "3147": {
      "op": "DUP2"
    },
    "3148": {
      "op": "LT"
    },
    "3149": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3158": {
      "op": "DUP3"
    },
    "3159": {
      "op": "GT"
    },
    "3160": {
      "op": "OR"
    },
    "3161": {
      "op": "ISZERO"
    },
    "3162": {
      "op": "PUSH2",
      "value": "0xC65"
    },
    "3165": {
      "op": "JUMPI"
    },
    "3166": {
      "op": "PUSH2",
      "value": "0xC65"
    },
    "3169": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "3172": {
      "jump": "i",
      "op": "JUMP"
    },
    "3173": {
      "op": "JUMPDEST"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3176": {
      "op": "MSTORE"
    },
    "3177": {
      "op": "DUP3"
    },
    "3178": {
      "op": "CALLDATALOAD"
    },
    "3179": {
      "op": "DUP2"
    },
    "3180": {
      "op": "MSTORE"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3183": {
      "op": "SWAP3"
    },
    "3184": {
      "op": "DUP4"
    },
    "3185": {
      "op": "ADD"
    },
    "3186": {
      "op": "CALLDATALOAD"
    },
    "3187": {
      "op": "SWAP3"
    },
    "3188": {
      "op": "DUP2"
    },
    "3189": {
      "op": "ADD"
    },
    "3190": {
      "op": "SWAP3"
    },
    "3191": {
      "op": "SWAP1"
    },
    "3192": {
      "op": "SWAP3"
    },
    "3193": {
      "op": "MSTORE"
    },
    "3194": {
      "op": "POP"
    },
    "3195": {
      "op": "SWAP2"
    },
    "3196": {
      "op": "SWAP1"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "jump": "o",
      "op": "JUMP"
    },
    "3199": {
      "op": "JUMPDEST"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "DUP5"
    },
    "3206": {
      "op": "SUB"
    },
    "3207": {
      "op": "SLT"
    },
    "3208": {
      "op": "ISZERO"
    },
    "3209": {
      "op": "PUSH2",
      "value": "0xC91"
    },
    "3212": {
      "op": "JUMPI"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3215": {
      "op": "DUP1"
    },
    "3216": {
      "op": "REVERT"
    },
    "3217": {
      "op": "JUMPDEST"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "op": "CALLDATALOAD"
    },
    "3220": {
      "op": "SWAP2"
    },
    "3221": {
      "op": "SWAP1"
    },
    "3222": {
      "op": "POP"
    },
    "3223": {
      "jump": "o",
      "op": "JUMP"
    },
    "3224": {
      "op": "JUMPDEST"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3227": {
      "op": "DUP1"
    },
    "3228": {
      "op": "DUP3"
    },
    "3229": {
      "op": "MSTORE"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3232": {
      "op": "SWAP1"
    },
    "3233": {
      "op": "DUP3"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "op": "MSTORE"
    },
    "3236": {
      "op": "PUSH18",
      "value": "0x14DBDD5B08191BD95CDB89DD08195E1A5CDD"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3257": {
      "op": "SHL"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3260": {
      "op": "DUP3"
    },
    "3261": {
      "op": "ADD"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "op": "SWAP1"
    },
    "3267": {
      "jump": "o",
      "op": "JUMP"
    },
    "3268": {
      "op": "JUMPDEST"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "MLOAD"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3275": {
      "op": "JUMPDEST"
    },
    "3276": {
      "op": "DUP2"
    },
    "3277": {
      "op": "DUP2"
    },
    "3278": {
      "op": "LT"
    },
    "3279": {
      "op": "ISZERO"
    },
    "3280": {
      "op": "PUSH2",
      "value": "0xCE5"
    },
    "3283": {
      "op": "JUMPI"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3286": {
      "op": "DUP2"
    },
    "3287": {
      "op": "DUP7"
    },
    "3288": {
      "op": "ADD"
    },
    "3289": {
      "op": "DUP2"
    },
    "3290": {
      "op": "ADD"
    },
    "3291": {
      "op": "MLOAD"
    },
    "3292": {
      "op": "DUP6"
    },
    "3293": {
      "op": "DUP4"
    },
    "3294": {
      "op": "ADD"
    },
    "3295": {
      "op": "MSTORE"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "op": "PUSH2",
      "value": "0xCCB"
    },
    "3300": {
      "op": "JUMP"
    },
    "3301": {
      "op": "JUMPDEST"
    },
    "3302": {
      "op": "POP"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3305": {
      "op": "SWAP3"
    },
    "3306": {
      "op": "ADD"
    },
    "3307": {
      "op": "SWAP2"
    },
    "3308": {
      "op": "DUP3"
    },
    "3309": {
      "op": "MSTORE"
    },
    "3310": {
      "op": "POP"
    },
    "3311": {
      "op": "SWAP2"
    },
    "3312": {
      "op": "SWAP1"
    },
    "3313": {
      "op": "POP"
    },
    "3314": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4078a8fbe3f8583843f6ea4c6ad1d0f735497d5f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// import \"./sbt-achievements.sol\";\n\ninterface SBT_achievement_interface {\n    struct Achievement {\n        uint achievement_id;\n        uint achievement_type;\n        address issuer;\n        bool can_owner_be_changed;\n        address owner;\n        address verifier;\n        bool is_verified;\n        bytes32 data_hash;\n    }\n\n    function mint(Achievement memory _achievementData) external;\n\n    function burn(uint _achievementId) external;\n\n    function updateOwner(uint _achievementId, address _newOwner) external;\n\n    function changeAchievementVerification(uint _achievementId, bool _newStatus)\n        external;\n}\n\ncontract SBT {\n    modifier soulExists(uint _soul_id) {\n        require(addressOfSoul[_soul_id] != address(0), \"Soul doesn't exist\");\n        _;\n    }\n\n    modifier mintedNotClaimedModifier(uint _soul_id) {\n        require(\n            addressOfSoul[_soul_id] == address(0),\n            \"Soul is already claimed\"\n        );\n        require(mintedNotClaimed[_soul_id], \"Non minted soul\");\n        _;\n    }\n\n    modifier notMinted(uint _soul_id) {\n        require(addressOfSoul[_soul_id] == address(0), \"Soul exists\");\n        require(!mintedNotClaimed[_soul_id], \"Soul is minted, but not claimed\");\n        _;\n    }\n\n    struct PersonalDataHashed {\n        bytes32 github_hash;\n        bytes32 email_address_hash;\n    }\n\n    struct PersonalData {\n        string github_url;\n        string email_address;\n    }\n\n    struct Soul {\n        uint soul_id;\n        PersonalDataHashed hashedData;\n    }\n\n    address public operator;\n    address public kAchevementsContract =\n        0x8016619281F888d011c84d2E2a5348d9417c775B;\n\n    SBT_achievement_interface SBT_achievement;\n    event Mint(uint _soul_id);\n    event Claim(uint _soul_id);\n    event MintAchievement(uint _soul_id);\n    event Burn(uint _soul_id_to_burn);\n    event Update(uint _soul_id_to_update);\n    event SetAchevementsContractAddress(address _new_address);\n\n    constructor() {\n        SBT_achievement = SBT_achievement_interface(kAchevementsContract);\n        operator = msg.sender;\n    }\n\n    mapping(uint => address) private addressOfSoul; //soul_id => address of owner\n    mapping(address => uint) soulIdOfAddress; //address => soul_id\n    mapping(uint => Soul) private souls;\n    mapping(uint => bool) private mintedNotClaimed;\n\n    // Function that hashes content of user's hashedData. Must be rewritten if PersonalData fields change.\n    function hashPersonalData(PersonalData memory _data)\n        internal\n        pure\n        returns (PersonalDataHashed memory)\n    {\n        PersonalDataHashed memory hashedData;\n        hashedData.email_address_hash = keccak256(\n            abi.encodePacked(_data.email_address)\n        );\n        hashedData.github_hash = keccak256(abi.encodePacked(_data.github_url));\n        return hashedData;\n    }\n\n    function setAchevementsContractAddress(address _new_address) external {\n        require(\n            msg.sender == operator,\n            \"Only this contract can set this address\"\n        );\n        kAchevementsContract = _new_address;\n        emit SetAchevementsContractAddress(_new_address);\n    }\n\n    // Mints the SBT for given address and with given soul_id. Can be called only by this contract.\n    function mint(address _soul_address, uint _soul_id)\n        external\n        notMinted(_soul_id)\n    {\n        require(msg.sender == operator, \"Only operator can mint new souls\");\n        soulIdOfAddress[_soul_address] = _soul_id;\n        mintedNotClaimed[_soul_id] = true;\n        emit Mint(_soul_id);\n    }\n\n    // After minting and SBT, user must claim ownership of SBT by\n    function claim(PersonalDataHashed memory _soulData)\n        external\n        mintedNotClaimedModifier(soulIdOfAddress[msg.sender])\n    {\n        uint _soul_id = soulIdOfAddress[msg.sender];\n        delete mintedNotClaimed[_soul_id];\n        addressOfSoul[_soul_id] = msg.sender;\n        souls[_soul_id].soul_id = _soul_id;\n        souls[_soul_id].hashedData = _soulData;\n        emit Claim(_soul_id);\n    }\n\n    // After minting and SBT, user must claim ownership of SBT by\n    function mint_achievement(\n        SBT_achievement_interface.Achievement memory _achievementData\n    ) external soulExists(soulIdOfAddress[msg.sender]) {\n        SBT_achievement.mint(_achievementData);\n        emit MintAchievement(soulIdOfAddress[msg.sender]);\n    }\n\n    // Deletes SBT of msg.sender from storage.\n    function burn() external soulExists(soulIdOfAddress[msg.sender]) {\n        uint _soul_id_to_burn = soulIdOfAddress[msg.sender];\n        delete souls[_soul_id_to_burn];\n        delete soulIdOfAddress[msg.sender];\n        delete addressOfSoul[_soul_id_to_burn];\n        emit Burn(_soul_id_to_burn);\n    }\n\n    // Updates hashedData of msg.sender's SBT by replacing with '_newSoulData'.\n    // function update(PersonalDataHashed memory _newSoulData)\n    //     external\n    //     soulExists(soulIdOfAddress[msg.sender])\n    // {\n    //     souls[soulIdOfAddress[msg.sender]].hashedData = _newSoulData;\n    //     emit Update(soulIdOfAddress[msg.sender]);\n    // }\n\n    // Returns true, if there is an SBT for given address.\n    function hasSoul(address _soul) external view returns (bool) {\n        return soulIdOfAddress[_soul] != 0;\n    }\n\n    // Returns SBT of given address, if there is one; otherwise throws an error.\n    function getSoul(address _soul) external view returns (Soul memory) {\n        require(soulIdOfAddress[_soul] != 0, \"Soul doesn't exist\");\n        return souls[soulIdOfAddress[_soul]];\n    }\n\n    // Returns owner of given '_soul_id', if there is one; otherwise returns NULL-address.\n    function getOwner(uint _soul_id) external view returns (address) {\n        require(\n            msg.sender == operator,\n            \"Only this contract can view this hashed data\"\n        );\n        return addressOfSoul[_soul_id];\n    }\n\n    // Allows user to verify, that their data stored in our app is it's own and doesn't change.\n    function verifyDataCorrectness(PersonalData memory _dataToVerify)\n        external\n        view\n        returns (bool)\n    {\n        PersonalDataHashed memory hashedDataFromStorage = souls[\n            soulIdOfAddress[msg.sender]\n        ].hashedData;\n        PersonalDataHashed memory hashedDataToVerify = hashPersonalData(\n            _dataToVerify\n        );\n        if (\n            hashedDataToVerify.email_address_hash !=\n            hashedDataFromStorage.email_address_hash\n        ) {\n            return false;\n        }\n        if (\n            hashedDataToVerify.github_hash != hashedDataFromStorage.github_hash\n        ) {\n            return false;\n        }\n        return true;\n    }\n}\n",
  "sourceMap": "680:6041:0:-:0;;;1609:88;;;-1:-1:-1;;;;;;1609:88:0;1655:42;1609:88;;;2002:127;;;;;;;;;-1:-1:-1;2070:20:0;;2026:15;:65;;-1:-1:-1;;;;;;2026:65:0;;;-1:-1:-1;;;;;2070:20:0;;;2026:65;;;;;;2070:20;2101:21;;;;;2112:10;2101:21;;;680:6041;;;;;;",
  "sourcePath": "contracts/sbt.sol",
  "type": "contract"
}