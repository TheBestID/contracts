{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id_to_burn",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_soul_id_to_update",
          "type": "uint256"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_soul_id_to_burn",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        }
      ],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "getSoul",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "url_hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "github_url_hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "email_address_hash",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct SBT.PersonalDataHashed",
              "name": "hashedData",
              "type": "tuple"
            }
          ],
          "internalType": "struct SBT.Soul",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul",
          "type": "address"
        }
      ],
      "name": "hasSoul",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_soul_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_soul_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "github_url",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email_address",
              "type": "string"
            }
          ],
          "internalType": "struct SBT.PersonalData",
          "name": "_soulData",
          "type": "tuple"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "url_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "github_url_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "email_address_hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SBT.PersonalDataHashed",
          "name": "_newSoulData",
          "type": "tuple"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "github_url",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email_address",
              "type": "string"
            }
          ],
          "internalType": "struct SBT.PersonalData",
          "name": "_dataToVerify",
          "type": "tuple"
        }
      ],
      "name": "verifyDataCorrectness",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/sbt.sol"
  },
  "ast": {
    "absolutePath": "contracts/sbt.sol",
    "exportedSymbols": {
      "SBT": [
        362
      ]
    },
    "id": 363,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SBT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 362,
        "linearizedBaseContracts": [
          362
        ],
        "name": "SBT",
        "nameLocation": "104:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "149:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 6,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "167:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 8,
                          "indexExpression": {
                            "id": 7,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "181:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "167:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "202:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "194:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "194:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "194:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "167:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920686173206120736f756c",
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "206:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c48db24345fa8465b8d075469fdced856e33721117e82122acf5d4420bb98f44",
                          "typeString": "literal_string \"Already has a soul\""
                        },
                        "value": "Already has a soul"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c48db24345fa8465b8d075469fdced856e33721117e82122acf5d4420bb98f44",
                          "typeString": "literal_string \"Already has a soul\""
                        }
                      ],
                      "id": 5,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "159:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "159:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "159:68:0"
                },
                {
                  "id": 17,
                  "nodeType": "PlaceholderStatement",
                  "src": "237:1:0"
                }
              ]
            },
            "id": 19,
            "name": "soulExists",
            "nameLocation": "123:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "139:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "134:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "133:15:0"
            },
            "src": "114:131:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "291:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 24,
                            "name": "addressOfSoul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "309:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 26,
                          "indexExpression": {
                            "id": 25,
                            "name": "_soul_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "323:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "309:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 29,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "344:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 28,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "336:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 27,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "336:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "336:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "309:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920686173206120736f756c",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "348:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c48db24345fa8465b8d075469fdced856e33721117e82122acf5d4420bb98f44",
                          "typeString": "literal_string \"Already has a soul\""
                        },
                        "value": "Already has a soul"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c48db24345fa8465b8d075469fdced856e33721117e82122acf5d4420bb98f44",
                          "typeString": "literal_string \"Already has a soul\""
                        }
                      ],
                      "id": 23,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "301:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "301:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "301:68:0"
                },
                {
                  "id": 35,
                  "nodeType": "PlaceholderStatement",
                  "src": "379:1:0"
                }
              ]
            },
            "id": 37,
            "name": "soulDoesntExist",
            "nameLocation": "260:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "281:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "276:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:15:0"
            },
            "src": "251:136:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "canonicalName": "SBT.PersonalDataHashed",
            "id": 44,
            "members": [
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "url_hash",
                "nameLocation": "437:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "429:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 38,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "github_url_hash",
                "nameLocation": "463:15:0",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "455:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 40,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "455:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "email_address_hash",
                "nameLocation": "496:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 44,
                "src": "488:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 42,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PersonalDataHashed",
            "nameLocation": "400:18:0",
            "nodeType": "StructDefinition",
            "scope": 362,
            "src": "393:128:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SBT.PersonalData",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "url",
                "nameLocation": "564:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "557:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "557:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "github_url",
                "nameLocation": "584:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "577:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "577:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "email_address",
                "nameLocation": "611:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "604:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 49,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "604:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PersonalData",
            "nameLocation": "534:12:0",
            "nodeType": "StructDefinition",
            "scope": 362,
            "src": "527:104:0",
            "visibility": "public"
          },
          {
            "canonicalName": "SBT.Soul",
            "id": 55,
            "members": [
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "hashedData",
                "nameLocation": "703:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "684:29:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage_ptr",
                  "typeString": "struct SBT.PersonalDataHashed"
                },
                "typeName": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "PersonalDataHashed",
                    "nameLocations": [
                      "684:18:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 44,
                    "src": "684:18:0"
                  },
                  "referencedDeclaration": 44,
                  "src": "684:18:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Soul",
            "nameLocation": "644:4:0",
            "nodeType": "StructDefinition",
            "scope": 362,
            "src": "637:83:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "570ca735",
            "id": 57,
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "741:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 362,
            "src": "726:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "726:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "3c3284d117c92d0b1699230960384e794dcba184cc48ff114fe4fed20c9b0565",
            "id": 61,
            "name": "Mint",
            "nameLocation": "761:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "774:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "766:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "765:15:0"
            },
            "src": "755:26:0"
          },
          {
            "anonymous": false,
            "eventSelector": "b90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb",
            "id": 65,
            "name": "Burn",
            "nameLocation": "792:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id_to_burn",
                  "nameLocation": "802:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "797:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:23:0"
            },
            "src": "786:34:0"
          },
          {
            "anonymous": false,
            "eventSelector": "164f7b2ab803097dab5e39f06d2e4f3c3ddc5d4171abbdcc3e76443b8359c7f5",
            "id": 69,
            "name": "Update",
            "nameLocation": "831:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_soul_id_to_update",
                  "nameLocation": "843:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "838:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:25:0"
            },
            "src": "825:38:0"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "883:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "893:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 73,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "904:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "908:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "904:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "893:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "893:21:0"
                }
              ]
            },
            "id": 78,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:2:0"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:0:0"
            },
            "scope": 362,
            "src": "869:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 82,
            "mutability": "mutable",
            "name": "addressOfSoul",
            "nameLocation": "952:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 362,
            "src": "927:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 79,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "935:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "927:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 80,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "943:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 86,
            "mutability": "mutable",
            "name": "soulIdOfAddress",
            "nameLocation": "1026:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 362,
            "src": "1001:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1009:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1001:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 84,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1020:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 91,
            "mutability": "mutable",
            "name": "souls",
            "nameLocation": "1090:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 362,
            "src": "1068:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$55_storage_$",
              "typeString": "mapping(uint256 => struct SBT.Soul)"
            },
            "typeName": {
              "id": 90,
              "keyType": {
                "id": 87,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1076:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1068:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$55_storage_$",
                "typeString": "mapping(uint256 => struct SBT.Soul)"
              },
              "valueType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "Soul",
                  "nameLocations": [
                    "1084:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "1084:4:0"
                },
                "referencedDeclaration": 55,
                "src": "1084:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Soul_$55_storage_ptr",
                  "typeString": "struct SBT.Soul"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1311:324:0",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "hashedData",
                      "nameLocation": "1347:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1321:36:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 101,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "1321:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44,
                          "src": "1321:18:0"
                        },
                        "referencedDeclaration": 44,
                        "src": "1321:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 103,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1321:36:0"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 104,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1367:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1378:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "1367:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 110,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1426:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 111,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1432:13:0",
                              "memberName": "email_address",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "1426:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 108,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1409:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1413:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1409:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1409:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 107,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1399:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1399:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1367:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:80:0"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 116,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1457:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1468:15:0",
                      "memberName": "github_url_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "1457:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 122,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1513:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1519:10:0",
                              "memberName": "github_url",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 48,
                              "src": "1513:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 120,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1496:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1500:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1496:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1496:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 119,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1486:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1486:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1457:74:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:74:0"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 128,
                        "name": "hashedData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1541:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1552:8:0",
                      "memberName": "url_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "1541:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 134,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "1590:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                                  "typeString": "struct SBT.PersonalData memory"
                                }
                              },
                              "id": 135,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1596:3:0",
                              "memberName": "url",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46,
                              "src": "1590:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 132,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1573:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1577:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1573:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1573:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 131,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1563:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1563:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1541:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:60:0"
                },
                {
                  "expression": {
                    "id": 140,
                    "name": "hashedData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102,
                    "src": "1618:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                      "typeString": "struct SBT.PersonalDataHashed memory"
                    }
                  },
                  "functionReturnParameters": 99,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "1611:17:0"
                }
              ]
            },
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashPersonalData",
            "nameLocation": "1218:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1255:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1235:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                    "typeString": "struct SBT.PersonalData"
                  },
                  "typeName": {
                    "id": 93,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 92,
                      "name": "PersonalData",
                      "nameLocations": [
                        "1235:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51,
                      "src": "1235:12:0"
                    },
                    "referencedDeclaration": 51,
                    "src": "1235:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalData_$51_storage_ptr",
                      "typeString": "struct SBT.PersonalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1234:27:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "1284:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 97,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 96,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "1284:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44,
                      "src": "1284:18:0"
                    },
                    "referencedDeclaration": 44,
                    "src": "1284:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1283:27:0"
            },
            "scope": 362,
            "src": "1209:426:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "1889:331:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1907:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1911:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1907:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 159,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1921:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1907:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c73",
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1931:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be1622ce1e42e9a17530ea674400f0d6d3e7ed52ff5b74a970e36309147e85d9",
                          "typeString": "literal_string \"Only operator can mint new souls\""
                        },
                        "value": "Only operator can mint new souls"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be1622ce1e42e9a17530ea674400f0d6d3e7ed52ff5b74a970e36309147e85d9",
                          "typeString": "literal_string \"Only operator can mint new souls\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1899:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:67:0"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 164,
                        "name": "addressOfSoul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1976:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 166,
                      "indexExpression": {
                        "id": 165,
                        "name": "_soul_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "1990:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1976:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 167,
                      "name": "_soul_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2002:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1976:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:39:0"
                },
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 170,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2025:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 172,
                      "indexExpression": {
                        "id": 171,
                        "name": "_soul_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2041:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2025:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 173,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "2058:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2025:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:41:0"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 176,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "2123:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$55_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 178,
                        "indexExpression": {
                          "id": 177,
                          "name": "_soul_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2129:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2123:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$55_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2139:10:0",
                      "memberName": "hashedData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "2123:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage",
                        "typeString": "struct SBT.PersonalDataHashed storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 181,
                          "name": "_soulData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "2169:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                            "typeString": "struct SBT.PersonalData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                            "typeString": "struct SBT.PersonalData memory"
                          }
                        ],
                        "id": 180,
                        "name": "hashPersonalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2152:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_PersonalData_$51_memory_ptr_$returns$_t_struct$_PersonalDataHashed_$44_memory_ptr_$",
                          "typeString": "function (struct SBT.PersonalData memory) pure returns (struct SBT.PersonalDataHashed memory)"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2152:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed memory"
                      }
                    },
                    "src": "2123:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2123:56:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 186,
                        "name": "_soul_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "2199:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 185,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2194:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "EmitStatement",
                  "src": "2189:24:0"
                }
              ]
            },
            "functionSelector": "03323d1e",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 153,
                    "name": "_soul_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "1879:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 154,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 152,
                  "name": "soulDoesntExist",
                  "nameLocations": [
                    "1863:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37,
                  "src": "1863:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1863:25:0"
              }
            ],
            "name": "mint",
            "nameLocation": "1750:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_soul_address",
                  "nameLocation": "1772:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "1764:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "1800:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "1795:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "_soulData",
                  "nameLocation": "1838:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "1818:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                    "typeString": "struct SBT.PersonalData"
                  },
                  "typeName": {
                    "id": 149,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 148,
                      "name": "PersonalData",
                      "nameLocations": [
                        "1818:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51,
                      "src": "1818:12:0"
                    },
                    "referencedDeclaration": 51,
                    "src": "1818:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalData_$51_storage_ptr",
                      "typeString": "struct SBT.PersonalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:99:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1889:0:0"
            },
            "scope": 362,
            "src": "1741:479:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2319:197:0",
              "statements": [
                {
                  "expression": {
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2329:30:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 195,
                        "name": "souls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2336:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$55_storage_$",
                          "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                        }
                      },
                      "id": 197,
                      "indexExpression": {
                        "id": 196,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "2342:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2336:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Soul_$55_storage",
                        "typeString": "struct SBT.Soul storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:30:0"
                },
                {
                  "expression": {
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2369:55:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 200,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2376:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 204,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 201,
                          "name": "addressOfSoul",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "2392:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 203,
                        "indexExpression": {
                          "id": 202,
                          "name": "_soul_id_to_burn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "2406:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2392:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2376:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2369:55:0"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2434:38:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 207,
                        "name": "addressOfSoul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "2441:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 209,
                      "indexExpression": {
                        "id": 208,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "2455:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2441:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 213,
                        "name": "_soul_id_to_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "2492:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 212,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2487:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "EmitStatement",
                  "src": "2482:27:0"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2282:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "_soul_id_to_burn",
                  "nameLocation": "2292:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2287:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2287:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2286:23:0"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2319:0:0"
            },
            "scope": 362,
            "src": "2273:243:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "2727:127:0",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 229,
                          "name": "souls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "2737:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$55_storage_$",
                            "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                          }
                        },
                        "id": 234,
                        "indexExpression": {
                          "baseExpression": {
                            "id": 230,
                            "name": "soulIdOfAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "2743:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 233,
                          "indexExpression": {
                            "expression": {
                              "id": 231,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2759:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2763:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2759:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2743:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2737:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Soul_$55_storage",
                          "typeString": "struct SBT.Soul storage ref"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2772:10:0",
                      "memberName": "hashedData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "2737:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage",
                        "typeString": "struct SBT.PersonalDataHashed storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 236,
                      "name": "_newSoulData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2785:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed memory"
                      }
                    },
                    "src": "2737:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:60:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 240,
                          "name": "soulIdOfAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "2819:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 243,
                        "indexExpression": {
                          "expression": {
                            "id": 241,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2835:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2839:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2835:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2819:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 239,
                      "name": "Update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2812:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "EmitStatement",
                  "src": "2807:40:0"
                }
              ]
            },
            "functionSelector": "e068ba8b",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 223,
                      "name": "soulIdOfAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2694:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 226,
                    "indexExpression": {
                      "expression": {
                        "id": 224,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2710:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2714:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2710:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2694:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 222,
                  "name": "soulExists",
                  "nameLocations": [
                    "2683:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19,
                  "src": "2683:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2683:39:0"
              }
            ],
            "name": "update",
            "nameLocation": "2611:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "_newSoulData",
                  "nameLocation": "2644:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2618:38:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                    "typeString": "struct SBT.PersonalDataHashed"
                  },
                  "typeName": {
                    "id": 219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 218,
                      "name": "PersonalDataHashed",
                      "nameLocations": [
                        "2618:18:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44,
                      "src": "2618:18:0"
                    },
                    "referencedDeclaration": 44,
                    "src": "2618:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage_ptr",
                      "typeString": "struct SBT.PersonalDataHashed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2617:40:0"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2727:0:0"
            },
            "scope": 362,
            "src": "2602:252:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "2980:51:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 254,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "2997:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 256,
                      "indexExpression": {
                        "id": 255,
                        "name": "_soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "3013:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2997:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3023:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2997:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 253,
                  "id": 259,
                  "nodeType": "Return",
                  "src": "2990:34:0"
                }
              ]
            },
            "functionSelector": "bdd75202",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasSoul",
            "nameLocation": "2928:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "2944:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2936:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2936:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2935:15:0"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "2974:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2973:6:0"
            },
            "scope": 362,
            "src": "2919:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "3186:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 270,
                            "name": "soulIdOfAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "3204:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 272,
                          "indexExpression": {
                            "id": 271,
                            "name": "_soul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "3220:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3204:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3230:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3204:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f756c20646f65736e2774206578697374",
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3233:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        },
                        "value": "Soul doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e00ee373fc93ea1e6fd7e9118c21e667303a17e8bf1f2ee1361a0febaab68d4b",
                          "typeString": "literal_string \"Soul doesn't exist\""
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3196:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:58:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 278,
                      "name": "souls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "3271:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$55_storage_$",
                        "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                      }
                    },
                    "id": 282,
                    "indexExpression": {
                      "baseExpression": {
                        "id": 279,
                        "name": "soulIdOfAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "3277:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 281,
                      "indexExpression": {
                        "id": 280,
                        "name": "_soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3293:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3277:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3271:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Soul_$55_storage",
                      "typeString": "struct SBT.Soul storage ref"
                    }
                  },
                  "functionReturnParameters": 268,
                  "id": 283,
                  "nodeType": "Return",
                  "src": "3264:36:0"
                }
              ]
            },
            "functionSelector": "66cfe97f",
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSoul",
            "nameLocation": "3127:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "_soul",
                  "nameLocation": "3143:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3135:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:15:0"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "3173:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Soul_$55_memory_ptr",
                    "typeString": "struct SBT.Soul"
                  },
                  "typeName": {
                    "id": 266,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 265,
                      "name": "Soul",
                      "nameLocations": [
                        "3173:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55,
                      "src": "3173:4:0"
                    },
                    "referencedDeclaration": 55,
                    "src": "3173:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Soul_$55_storage_ptr",
                      "typeString": "struct SBT.Soul"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3172:13:0"
            },
            "scope": 362,
            "src": "3118:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "3469:170:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3500:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3504:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3500:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 295,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "3514:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3500:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468697320636f6e74726163742063616e20766965772074686973206861736865642064617461",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3536:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27b7e863d546f07584cece8c5abbb10f897c1d51b8b6e9abb975f221a2867c6e",
                          "typeString": "literal_string \"Only this contract can view this hashed data\""
                        },
                        "value": "Only this contract can view this hashed data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27b7e863d546f07584cece8c5abbb10f897c1d51b8b6e9abb975f221a2867c6e",
                          "typeString": "literal_string \"Only this contract can view this hashed data\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3479:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3479:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3479:113:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 300,
                      "name": "addressOfSoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3609:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 302,
                    "indexExpression": {
                      "id": 301,
                      "name": "_soul_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 287,
                      "src": "3623:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3609:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 291,
                  "id": 303,
                  "nodeType": "Return",
                  "src": "3602:30:0"
                }
              ]
            },
            "functionSelector": "c41a360a",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nameLocation": "3413:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "_soul_id",
                  "nameLocation": "3427:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3422:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3422:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3421:15:0"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3460:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3460:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3459:9:0"
            },
            "scope": 362,
            "src": "3404:235:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 360,
              "nodeType": "Block",
              "src": "3836:594:0",
              "statements": [
                {
                  "assignments": [
                    315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "hashedDataFromStorage",
                      "nameLocation": "3872:21:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 360,
                      "src": "3846:47:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 314,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 313,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "3846:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44,
                          "src": "3846:18:0"
                        },
                        "referencedDeclaration": 44,
                        "src": "3846:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 323,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 316,
                        "name": "souls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "3896:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Soul_$55_storage_$",
                          "typeString": "mapping(uint256 => struct SBT.Soul storage ref)"
                        }
                      },
                      "id": 321,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 317,
                          "name": "soulIdOfAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "3902:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 320,
                        "indexExpression": {
                          "expression": {
                            "id": 318,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3918:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3922:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3918:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3902:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3896:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Soul_$55_storage",
                        "typeString": "struct SBT.Soul storage ref"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3931:10:0",
                    "memberName": "hashedData",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 54,
                    "src": "3896:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage",
                      "typeString": "struct SBT.PersonalDataHashed storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3846:95:0"
                },
                {
                  "assignments": [
                    326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 326,
                      "mutability": "mutable",
                      "name": "hashedDataToVerify",
                      "nameLocation": "3977:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 360,
                      "src": "3951:44:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                        "typeString": "struct SBT.PersonalDataHashed"
                      },
                      "typeName": {
                        "id": 325,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 324,
                          "name": "PersonalDataHashed",
                          "nameLocations": [
                            "3951:18:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44,
                          "src": "3951:18:0"
                        },
                        "referencedDeclaration": 44,
                        "src": "3951:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_storage_ptr",
                          "typeString": "struct SBT.PersonalDataHashed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 330,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 328,
                        "name": "_dataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "4015:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                          "typeString": "struct SBT.PersonalData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                          "typeString": "struct SBT.PersonalData memory"
                        }
                      ],
                      "id": 327,
                      "name": "hashPersonalData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "3998:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_PersonalData_$51_memory_ptr_$returns$_t_struct$_PersonalDataHashed_$44_memory_ptr_$",
                        "typeString": "function (struct SBT.PersonalData memory) pure returns (struct SBT.PersonalDataHashed memory)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3998:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                      "typeString": "struct SBT.PersonalDataHashed memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3951:78:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 331,
                        "name": "hashedDataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "4043:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4062:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "4043:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 333,
                        "name": "hashedDataFromStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "4084:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4106:18:0",
                      "memberName": "email_address_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "4084:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4043:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 339,
                  "nodeType": "IfStatement",
                  "src": "4039:124:0",
                  "trueBody": {
                    "id": 338,
                    "nodeType": "Block",
                    "src": "4126:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4147:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 312,
                        "id": 337,
                        "nodeType": "Return",
                        "src": "4140:12:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 340,
                        "name": "hashedDataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "4176:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4195:15:0",
                      "memberName": "github_url_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "4176:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 342,
                        "name": "hashedDataFromStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "4214:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4236:15:0",
                      "memberName": "github_url_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "4214:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4176:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 348,
                  "nodeType": "IfStatement",
                  "src": "4172:118:0",
                  "trueBody": {
                    "id": 347,
                    "nodeType": "Block",
                    "src": "4253:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4274:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 312,
                        "id": 346,
                        "nodeType": "Return",
                        "src": "4267:12:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 349,
                        "name": "hashedDataToVerify",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "4303:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4322:8:0",
                      "memberName": "url_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "4303:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 351,
                        "name": "hashedDataFromStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "4334:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PersonalDataHashed_$44_memory_ptr",
                          "typeString": "struct SBT.PersonalDataHashed memory"
                        }
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4356:8:0",
                      "memberName": "url_hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "4334:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4303:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 357,
                  "nodeType": "IfStatement",
                  "src": "4299:104:0",
                  "trueBody": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "4366:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4387:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 312,
                        "id": 355,
                        "nodeType": "Return",
                        "src": "4380:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4419:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 312,
                  "id": 359,
                  "nodeType": "Return",
                  "src": "4412:11:0"
                }
              ]
            },
            "functionSelector": "dd18bfb4",
            "id": 361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyDataCorrectness",
            "nameLocation": "3750:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "_dataToVerify",
                  "nameLocation": "3792:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "3772:33:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersonalData_$51_memory_ptr",
                    "typeString": "struct SBT.PersonalData"
                  },
                  "typeName": {
                    "id": 307,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 306,
                      "name": "PersonalData",
                      "nameLocations": [
                        "3772:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51,
                      "src": "3772:12:0"
                    },
                    "referencedDeclaration": 51,
                    "src": "3772:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersonalData_$51_storage_ptr",
                      "typeString": "struct SBT.PersonalData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3771:35:0"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 361,
                  "src": "3830:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3830:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3829:6:0"
            },
            "scope": 362,
            "src": "3741:689:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 363,
        "src": "95:4338:0",
        "usedErrors": []
      }
    ],
    "src": "32:4402:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610a0d806100326000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bdd752021161005b578063bdd752021461011b578063c41a360a14610156578063dd18bfb414610169578063e068ba8b1461017c57600080fd5b806303323d1e1461008d57806342966c68146100a2578063570ca735146100b557806366cfe97f146100e5575b600080fd5b6100a061009b36600461087d565b61018f565b005b6100a06100b03660046108d4565b6102f6565b6000546100c8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f86100f33660046108ed565b61037f565b6040805191518051835260208082015190840152810151908201526060016100dc565b6101466101293660046108ed565b6001600160a01b0316600090815260026020526040902054151590565b60405190151581526020016100dc565b6100c86101643660046108d4565b61044c565b61014661017736600461090f565b6104d8565b6100a061018a36600461094c565b610572565b60008281526001602052604090205482906001600160a01b0316156101f05760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481a185cc818481cdbdd5b60721b60448201526064015b60405180910390fd5b6000546001600160a01b0316331461024a5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c7360448201526064016101e7565b600083815260016020908152604080832080546001600160a01b0319166001600160a01b03891690811790915583526002909152902083905561028c8261064a565b6000848152600360209081526040918290208351815583820151600182015592820151600290930192909255516001600160a01b03861681527f3c3284d117c92d0b1699230960384e794dcba184cc48ff114fe4fed20c9b0565910160405180910390a150505050565b60008181526003602090815260408083208381556001808201859055600291820185905580845282852080546001600160a01b031686529184528285208590559385905292825282546001600160a01b03191690925590518281527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb910160405180910390a150565b6040805160808101825260006020820181815292820181905260608201529081526001600160a01b03821660009081526002602052604081205490036103fc5760405162461bcd60e51b815260206004820152601260248201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b60448201526064016101e7565b506001600160a01b03166000908152600260208181526040808420548452600382529283902083516080810185528154928101928352600182015494810194909452909101546060830152815290565b600080546001600160a01b031633146104bc5760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468697320636f6e74726163742063616e2076696577207468697360448201526b20686173686564206461746160a01b60648201526084016101e7565b506000908152600160205260409020546001600160a01b031690565b336000908152600260208181526040808420548452600382528084208151606081018352815481526001820154938101939093529092015491810191909152816105218461064a565b9050816040015181604001511461053c575060009392505050565b8160200151816020015114610555575060009392505050565b8151815114610568575060009392505050565b5060019392505050565b336000908152600260209081526040808320548084526001909252909120546001600160a01b03166105db5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481a185cc818481cdbdd5b60721b60448201526064016101e7565b336000818152600260208181526040808420805485526003835281852088518155888401516001820155888301519085015594909352908152915490519081527f164f7b2ab803097dab5e39f06d2e4f3c3ddc5d4171abbdcc3e76443b8359c7f5910160405180910390a15050565b60408051606081018252600080825260208201819052918101919091526040805160608101825260008082526020820181905291810191909152826040015160405160200161069991906109a8565b60408051601f198184030181529181528151602092830120838201528482015190516106c592016109a8565b60408051601f19818403018152918152815160209283012083830152845190516106ef92016109a8565b60408051601f198184030181529190528051602090910120815292915050565b80356001600160a01b038116811461072657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261075257600080fd5b813567ffffffffffffffff8082111561076d5761076d61072b565b604051601f8301601f19908116603f011681019082821181831017156107955761079561072b565b816040528381528660208588010111156107ae57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000606082840312156107e057600080fd5b6040516060810167ffffffffffffffff82821081831117156108045761080461072b565b81604052829350843591508082111561081c57600080fd5b61082886838701610741565b8352602085013591508082111561083e57600080fd5b61084a86838701610741565b6020840152604085013591508082111561086357600080fd5b5061087085828601610741565b6040830152505092915050565b60008060006060848603121561089257600080fd5b61089b8461070f565b925060208401359150604084013567ffffffffffffffff8111156108be57600080fd5b6108ca868287016107ce565b9150509250925092565b6000602082840312156108e657600080fd5b5035919050565b6000602082840312156108ff57600080fd5b6109088261070f565b9392505050565b60006020828403121561092157600080fd5b813567ffffffffffffffff81111561093857600080fd5b610944848285016107ce565b949350505050565b60006060828403121561095e57600080fd5b6040516060810181811067ffffffffffffffff821117156109815761098161072b565b80604052508235815260208301356020820152604083013560408201528091505092915050565b6000825160005b818110156109c957602081860181015185830152016109af565b50600092019182525091905056fea26469706673582212209de74730ce0a63a5166a701e89e998329a570ea03ac10963e015281ad65695a464736f6c63430008110033",
  "bytecodeSha1": "aef6abcc41b59e6a8519619ede66c4a4437d2088",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "SBT",
  "coverageMap": {
    "branches": {
      "0": {
        "SBT.getOwner": {
          "25": [
            3500,
            3522,
            true
          ]
        },
        "SBT.getSoul": {
          "24": [
            3204,
            3231,
            true
          ]
        },
        "SBT.mint": {
          "23": [
            1907,
            1929,
            true
          ]
        },
        "SBT.verifyDataCorrectness": {
          "26": [
            4043,
            4124,
            false
          ],
          "27": [
            4176,
            4251,
            false
          ],
          "28": [
            4303,
            4364,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SBT.burn": {
          "6": [
            2329,
            2359
          ],
          "7": [
            2369,
            2424
          ],
          "8": [
            2434,
            2472
          ],
          "9": [
            2482,
            2509
          ]
        },
        "SBT.getOwner": {
          "12": [
            3479,
            3592
          ],
          "13": [
            3602,
            3632
          ]
        },
        "SBT.getSoul": {
          "10": [
            3196,
            3254
          ],
          "11": [
            3264,
            3300
          ]
        },
        "SBT.hasSoul": {
          "0": [
            2990,
            3024
          ]
        },
        "SBT.hashPersonalData": {
          "20": [
            1367,
            1447
          ],
          "21": [
            1457,
            1531
          ],
          "22": [
            1541,
            1601
          ]
        },
        "SBT.mint": {
          "1": [
            1899,
            1966
          ],
          "2": [
            1976,
            2015
          ],
          "3": [
            2025,
            2066
          ],
          "4": [
            2123,
            2179
          ],
          "5": [
            2189,
            2213
          ]
        },
        "SBT.update": {
          "18": [
            2737,
            2797
          ],
          "19": [
            2807,
            2847
          ]
        },
        "SBT.verifyDataCorrectness": {
          "14": [
            4140,
            4152
          ],
          "15": [
            4267,
            4279
          ],
          "16": [
            4380,
            4392
          ],
          "17": [
            4412,
            4423
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063bdd752021161005b578063bdd752021461011b578063c41a360a14610156578063dd18bfb414610169578063e068ba8b1461017c57600080fd5b806303323d1e1461008d57806342966c68146100a2578063570ca735146100b557806366cfe97f146100e5575b600080fd5b6100a061009b36600461087d565b61018f565b005b6100a06100b03660046108d4565b6102f6565b6000546100c8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f86100f33660046108ed565b61037f565b6040805191518051835260208082015190840152810151908201526060016100dc565b6101466101293660046108ed565b6001600160a01b0316600090815260026020526040902054151590565b60405190151581526020016100dc565b6100c86101643660046108d4565b61044c565b61014661017736600461090f565b6104d8565b6100a061018a36600461094c565b610572565b60008281526001602052604090205482906001600160a01b0316156101f05760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481a185cc818481cdbdd5b60721b60448201526064015b60405180910390fd5b6000546001600160a01b0316331461024a5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c79206f70657261746f722063616e206d696e74206e657720736f756c7360448201526064016101e7565b600083815260016020908152604080832080546001600160a01b0319166001600160a01b03891690811790915583526002909152902083905561028c8261064a565b6000848152600360209081526040918290208351815583820151600182015592820151600290930192909255516001600160a01b03861681527f3c3284d117c92d0b1699230960384e794dcba184cc48ff114fe4fed20c9b0565910160405180910390a150505050565b60008181526003602090815260408083208381556001808201859055600291820185905580845282852080546001600160a01b031686529184528285208590559385905292825282546001600160a01b03191690925590518281527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb910160405180910390a150565b6040805160808101825260006020820181815292820181905260608201529081526001600160a01b03821660009081526002602052604081205490036103fc5760405162461bcd60e51b815260206004820152601260248201527114dbdd5b08191bd95cdb89dd08195e1a5cdd60721b60448201526064016101e7565b506001600160a01b03166000908152600260208181526040808420548452600382529283902083516080810185528154928101928352600182015494810194909452909101546060830152815290565b600080546001600160a01b031633146104bc5760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468697320636f6e74726163742063616e2076696577207468697360448201526b20686173686564206461746160a01b60648201526084016101e7565b506000908152600160205260409020546001600160a01b031690565b336000908152600260208181526040808420548452600382528084208151606081018352815481526001820154938101939093529092015491810191909152816105218461064a565b9050816040015181604001511461053c575060009392505050565b8160200151816020015114610555575060009392505050565b8151815114610568575060009392505050565b5060019392505050565b336000908152600260209081526040808320548084526001909252909120546001600160a01b03166105db5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481a185cc818481cdbdd5b60721b60448201526064016101e7565b336000818152600260208181526040808420805485526003835281852088518155888401516001820155888301519085015594909352908152915490519081527f164f7b2ab803097dab5e39f06d2e4f3c3ddc5d4171abbdcc3e76443b8359c7f5910160405180910390a15050565b60408051606081018252600080825260208201819052918101919091526040805160608101825260008082526020820181905291810191909152826040015160405160200161069991906109a8565b60408051601f198184030181529181528151602092830120838201528482015190516106c592016109a8565b60408051601f19818403018152918152815160209283012083830152845190516106ef92016109a8565b60408051601f198184030181529190528051602090910120815292915050565b80356001600160a01b038116811461072657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261075257600080fd5b813567ffffffffffffffff8082111561076d5761076d61072b565b604051601f8301601f19908116603f011681019082821181831017156107955761079561072b565b816040528381528660208588010111156107ae57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000606082840312156107e057600080fd5b6040516060810167ffffffffffffffff82821081831117156108045761080461072b565b81604052829350843591508082111561081c57600080fd5b61082886838701610741565b8352602085013591508082111561083e57600080fd5b61084a86838701610741565b6020840152604085013591508082111561086357600080fd5b5061087085828601610741565b6040830152505092915050565b60008060006060848603121561089257600080fd5b61089b8461070f565b925060208401359150604084013567ffffffffffffffff8111156108be57600080fd5b6108ca868287016107ce565b9150509250925092565b6000602082840312156108e657600080fd5b5035919050565b6000602082840312156108ff57600080fd5b6109088261070f565b9392505050565b60006020828403121561092157600080fd5b813567ffffffffffffffff81111561093857600080fd5b610944848285016107ce565b949350505050565b60006060828403121561095e57600080fd5b6040516060810181811067ffffffffffffffff821117156109815761098161072b565b80604052508235815260208301356020820152604083013560408201528091505092915050565b6000825160005b818110156109c957602081860181015185830152016109af565b50600092019182525091905056fea26469706673582212209de74730ce0a63a5166a701e89e998329a570ea03ac10963e015281ad65695a464736f6c63430008110033",
  "deployedSourceMap": "95:4338:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1741:479;;;;;;:::i;:::-;;:::i;:::-;;2273:243;;;;;;:::i;:::-;;:::i;726:23::-;;;;;-1:-1:-1;;;;;726:23:0;;;;;;-1:-1:-1;;;;;2814:32:1;;;2796:51;;2784:2;2769:18;726:23:0;;;;;;;;3118:189;;;;;;:::i;:::-;;:::i;:::-;;;;3245:13:1;;3285:9;;3267:28;;3347:4;3339:13;;;3333:20;3311;;;3304:50;3398:13;;3392:20;3370;;;3363:50;3223:2;3208:18;3118:189:0;3049:370:1;2919:112:0;;;;;;:::i;:::-;-1:-1:-1;;;;;2997:22:0;2974:4;2997:22;;;:15;:22;;;;;;:27;;;2919:112;;;;3589:14:1;;3582:22;3564:41;;3552:2;3537:18;2919:112:0;3424:187:1;3404:235:0;;;;;;:::i;:::-;;:::i;3741:689::-;;;;;;:::i;:::-;;:::i;2602:252::-;;;;;;:::i;:::-;;:::i;1741:479::-;344:1;309:23;;;:13;:23;;;;;;1879:8;;-1:-1:-1;;;;;309:23:0;:37;301:68;;;;-1:-1:-1;;;301:68:0;;4760:2:1;301:68:0;;;4742:21:1;4799:2;4779:18;;;4772:30;-1:-1:-1;;;4818:18:1;;;4811:48;4876:18;;301:68:0;;;;;;;;;1921:8:::1;::::0;-1:-1:-1;;;;;1921:8:0::1;1907:10;:22;1899:67;;;::::0;-1:-1:-1;;;1899:67:0;;5107:2:1;1899:67:0::1;::::0;::::1;5089:21:1::0;;;5126:18;;;5119:30;5185:34;5165:18;;;5158:62;5237:18;;1899:67:0::1;4905:356:1::0;1899:67:0::1;1976:23;::::0;;;:13:::1;:23;::::0;;;;;;;:39;;-1:-1:-1;;;;;;1976:39:0::1;-1:-1:-1::0;;;;;1976:39:0;::::1;::::0;;::::1;::::0;;;2025:30;;:15:::1;:30:::0;;;;;:41;;;2152:27:::1;2169:9:::0;2152:16:::1;:27::i;:::-;2123:15;::::0;;;:5:::1;:15;::::0;;;;;;;;:56;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;2194:19;-1:-1:-1;;;;;2814:32:1;;2796:51;;2194:19:0::1;::::0;2769:18:1;2194:19:0::1;;;;;;;1741:479:::0;;;;:::o;2273:243::-;2336:23;;;;:5;:23;;;;;;;;2329:30;;;;;;;;;;;;;;;;;2392:31;;;;;;;;-1:-1:-1;;;;;2392:31:0;2376:48;;;;;;;;2369:55;;;2441:31;;;;;;;2434:38;;-1:-1:-1;;;;;;2434:38:0;;;;2487:22;;5412:25:1;;;2487:22:0;;5385:18:1;2487:22:0;;;;;;;2273:243;:::o;3118:189::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3204:22:0;;;;;;:15;:22;;;;;;:27;;3196:58;;;;-1:-1:-1;;;3196:58:0;;5650:2:1;3196:58:0;;;5632:21:1;5689:2;5669:18;;;5662:30;-1:-1:-1;;;5708:18:1;;;5701:48;5766:18;;3196:58:0;5448:342:1;3196:58:0;-1:-1:-1;;;;;;3277:22:0;3271:29;3277:22;;;:15;:22;;;;;;;;;3271:29;;:5;:29;;;;;;3264:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3118:189::o;3404:235::-;3460:7;3514:8;;-1:-1:-1;;;;;3514:8:0;3500:10;:22;3479:113;;;;-1:-1:-1;;;3479:113:0;;5997:2:1;3479:113:0;;;5979:21:1;6036:2;6016:18;;;6009:30;6075:34;6055:18;;;6048:62;-1:-1:-1;;;6126:18:1;;;6119:42;6178:19;;3479:113:0;5795:408:1;3479:113:0;-1:-1:-1;3609:23:0;;;;:13;:23;;;;;;-1:-1:-1;;;;;3609:23:0;;3404:235::o;3741:689::-;3918:10;3830:4;3902:27;;;:15;:27;;;;;;;;;3896:34;;:5;:34;;;;;3846:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3830:4;3998:31;4015:13;3998:16;:31::i;:::-;3951:78;;4084:21;:40;;;4043:18;:37;;;:81;4039:124;;-1:-1:-1;4147:5:0;;3741:689;-1:-1:-1;;;3741:689:0:o;4039:124::-;4214:21;:37;;;4176:18;:34;;;:75;4172:118;;-1:-1:-1;4274:5:0;;3741:689;-1:-1:-1;;;3741:689:0:o;4172:118::-;4334:30;;4303:27;;:61;4299:104;;-1:-1:-1;4387:5:0;;3741:689;-1:-1:-1;;;3741:689:0:o;4299:104::-;-1:-1:-1;4419:4:0;;3741:689;-1:-1:-1;;;3741:689:0:o;2602:252::-;2710:10;2694:27;;;;:15;:27;;;;;;;;;167:23;;;:13;:23;;;;;;;-1:-1:-1;;;;;167:23:0;159:68;;;;-1:-1:-1;;;159:68:0;;4760:2:1;159:68:0;;;4742:21:1;4799:2;4779:18;;;4772:30;-1:-1:-1;;;4818:18:1;;;4811:48;4876:18;;159:68:0;4558:342:1;159:68:0;2759:10:::1;2737:34;2743:27:::0;;;:15:::1;:27;::::0;;;;;;;;;2737:34;;:5:::1;:34:::0;;;;;:60;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;2819:27;;;;;;;;;2812:35;;5412:25:1;;;2812:35:0::1;::::0;5385:18:1;2812:35:0::1;;;;;;;2602:252:::0;;:::o;1209:426::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1426:5:0;:19;;;1409:37;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1409:37:0;;;;;;;;;1399:48;;1409:37;1399:48;;;;1367:29;;;:80;1513:16;;;;1496:34;;;;;;:::i;:::-;;;;-1:-1:-1;;1496:34:0;;;;;;;;;1486:45;;1496:34;1486:45;;;;1457:26;;;:74;1590:9;;1573:27;;;;;;:::i;:::-;;;;-1:-1:-1;;1573:27:0;;;;;;;;;1563:38;;1573:27;1563:38;;;;1541:60;;:10;1209:426;-1:-1:-1;;1209:426:0:o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:719;367:5;420:3;413:4;405:6;401:17;397:27;387:55;;438:1;435;428:12;387:55;474:6;461:20;500:18;537:2;533;530:10;527:36;;;543:18;;:::i;:::-;618:2;612:9;586:2;672:13;;-1:-1:-1;;668:22:1;;;692:2;664:31;660:40;648:53;;;716:18;;;736:22;;;713:46;710:72;;;762:18;;:::i;:::-;802:10;798:2;791:22;837:2;829:6;822:18;883:3;876:4;871:2;863:6;859:15;855:26;852:35;849:55;;;900:1;897;890:12;849:55;964:2;957:4;949:6;945:17;938:4;930:6;926:17;913:54;1011:1;1004:4;999:2;991:6;987:15;983:26;976:37;1031:6;1022:15;;;;;;324:719;;;;:::o;1048:912::-;1107:5;1155:4;1143:9;1138:3;1134:19;1130:30;1127:50;;;1173:1;1170;1163:12;1127:50;1206:2;1200:9;1248:4;1240:6;1236:17;1272:18;1340:6;1328:10;1325:22;1320:2;1308:10;1305:18;1302:46;1299:72;;;1351:18;;:::i;:::-;1391:10;1387:2;1380:22;1420:6;1411:15;;1462:9;1449:23;1435:37;;1495:2;1487:6;1484:14;1481:34;;;1511:1;1508;1501:12;1481:34;1539:46;1581:3;1572:6;1561:9;1557:22;1539:46;:::i;:::-;1531:6;1524:62;1639:2;1628:9;1624:18;1611:32;1595:48;;1668:2;1658:8;1655:16;1652:36;;;1684:1;1681;1674:12;1652:36;1721:48;1765:3;1754:8;1743:9;1739:24;1721:48;:::i;:::-;1716:2;1708:6;1704:15;1697:73;1823:2;1812:9;1808:18;1795:32;1779:48;;1852:2;1842:8;1839:16;1836:36;;;1868:1;1865;1858:12;1836:36;;1905:48;1949:3;1938:8;1927:9;1923:24;1905:48;:::i;:::-;1900:2;1892:6;1888:15;1881:73;;;1048:912;;;;:::o;1965:495::-;2070:6;2078;2086;2139:2;2127:9;2118:7;2114:23;2110:32;2107:52;;;2155:1;2152;2145:12;2107:52;2178:29;2197:9;2178:29;:::i;:::-;2168:39;;2254:2;2243:9;2239:18;2226:32;2216:42;;2309:2;2298:9;2294:18;2281:32;2336:18;2328:6;2325:30;2322:50;;;2368:1;2365;2358:12;2322:50;2391:63;2446:7;2437:6;2426:9;2422:22;2391:63;:::i;:::-;2381:73;;;1965:495;;;;;:::o;2465:180::-;2524:6;2577:2;2565:9;2556:7;2552:23;2548:32;2545:52;;;2593:1;2590;2583:12;2545:52;-1:-1:-1;2616:23:1;;2465:180;-1:-1:-1;2465:180:1:o;2858:186::-;2917:6;2970:2;2958:9;2949:7;2945:23;2941:32;2938:52;;;2986:1;2983;2976:12;2938:52;3009:29;3028:9;3009:29;:::i;:::-;2999:39;2858:186;-1:-1:-1;;;2858:186:1:o;3616:353::-;3703:6;3756:2;3744:9;3735:7;3731:23;3727:32;3724:52;;;3772:1;3769;3762:12;3724:52;3812:9;3799:23;3845:18;3837:6;3834:30;3831:50;;;3877:1;3874;3867:12;3831:50;3900:63;3955:7;3946:6;3935:9;3931:22;3900:63;:::i;:::-;3890:73;3616:353;-1:-1:-1;;;;3616:353:1:o;3974:579::-;4067:6;4120:2;4108:9;4099:7;4095:23;4091:32;4088:52;;;4136:1;4133;4126:12;4088:52;4169:2;4163:9;4211:2;4203:6;4199:15;4280:6;4268:10;4265:22;4244:18;4232:10;4229:34;4226:62;4223:88;;;4291:18;;:::i;:::-;4331:10;4327:2;4320:22;;4379:9;4366:23;4358:6;4351:39;4451:2;4440:9;4436:18;4423:32;4418:2;4410:6;4406:15;4399:57;4517:2;4506:9;4502:18;4489:32;4484:2;4476:6;4472:15;4465:57;4541:6;4531:16;;;3974:579;;;;:::o;6208:414::-;6339:3;6377:6;6371:13;6402:1;6412:129;6426:6;6423:1;6420:13;6412:129;;;6524:4;6508:14;;;6504:25;;6498:32;6485:11;;;6478:53;6441:12;6412:129;;;-1:-1:-1;6596:1:1;6560:16;;6585:13;;;-1:-1:-1;6560:16:1;6208:414;-1:-1:-1;6208:414:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    95,
    4433
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBDD75202 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBDD75202 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xC41A360A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xDD18BFB4 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xE068BA8B EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3323D1E EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x66CFE97F EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xC8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0x8ED JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 MLOAD DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xDC JUMP JUMPDEST PUSH2 0x146 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDC JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D4 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH2 0x146 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x94C JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481A185CC818481CDBDD5B PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F70657261746F722063616E206D696E74206E657720736F756C73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 SWAP1 SSTORE PUSH2 0x28C DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP3 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH32 0x3C3284D117C92D0B1699230960384E794DCBA184CC48FF114FE4FED20C9B0565 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 SWAP2 DUP3 ADD DUP6 SWAP1 SSTORE DUP1 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP6 SWAP1 MSTORE SWAP3 DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0xB90306AD06B2A6FF86DDC9327DB583062895EF6540E62DC50ADD009DB5B356EB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 DUP2 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14DBDD5B08191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468697320636F6E74726163742063616E20766965772074686973 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x206861736865642064617461 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 PUSH2 0x521 DUP5 PUSH2 0x64A JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x53C JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH2 0x555 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD EQ PUSH2 0x568 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481A185CC818481CDBDD5B PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 MSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP9 MLOAD DUP2 SSTORE DUP9 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE DUP9 DUP4 ADD MLOAD SWAP1 DUP6 ADD SSTORE SWAP5 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE SWAP2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x164F7B2AB803097DAB5E39F06D2E4F3C3DDC5D4171ABBDCC3E76443B8359C7F5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 DUP3 ADD MSTORE DUP5 DUP3 ADD MLOAD SWAP1 MLOAD PUSH2 0x6C5 SWAP3 ADD PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 DUP4 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 MLOAD PUSH2 0x6EF SWAP3 ADD PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x76D JUMPI PUSH2 0x76D PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x795 JUMPI PUSH2 0x795 PUSH2 0x72B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP3 DUP3 LT DUP2 DUP4 GT OR ISZERO PUSH2 0x804 JUMPI PUSH2 0x804 PUSH2 0x72B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 SWAP4 POP DUP5 CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x81C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x828 DUP7 DUP4 DUP8 ADD PUSH2 0x741 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x84A DUP7 DUP4 DUP8 ADD PUSH2 0x741 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x870 DUP6 DUP3 DUP7 ADD PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x89B DUP5 PUSH2 0x70F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8CA DUP7 DUP3 DUP8 ADD PUSH2 0x7CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x908 DUP3 PUSH2 0x70F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x944 DUP5 DUP3 DUP6 ADD PUSH2 0x7CE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x981 JUMPI PUSH2 0x981 PUSH2 0x72B JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x9AF JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xE7 SELFBALANCE ADDRESS 0xCE EXP PUSH4 0xA5166A70 0x1E DUP10 0xE9 SWAP9 ORIGIN SWAP11 JUMPI 0xE LOG0 GASPRICE 0xC1 MULMOD PUSH4 0xE015281A 0xD6 JUMP SWAP6 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        95,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDD75202"
    },
    "38": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBDD75202"
    },
    "49": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B"
    },
    "53": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC41A360A"
    },
    "60": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "64": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD18BFB4"
    },
    "71": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169"
    },
    "75": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE068BA8B"
    },
    "82": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C"
    },
    "86": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3323D1E"
    },
    "98": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "EQ",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42966C68"
    },
    "109": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "113": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x570CA735"
    },
    "120": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5"
    },
    "124": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x66CFE97F"
    },
    "131": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5"
    },
    "135": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "DUP1",
      "path": "0"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        95,
        4433
      ],
      "op": "REVERT",
      "path": "0"
    },
    "141": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "142": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "145": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B"
    },
    "148": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "149": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "151": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87D"
    },
    "154": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        1741,
        2220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "155": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "156": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F"
    },
    "159": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        1741,
        2220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "160": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "161": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "STOP",
      "path": "0"
    },
    "162": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "166": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0"
    },
    "169": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "170": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "172": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "175": {
      "fn": "SBT.burn",
      "jump": "i",
      "offset": [
        2273,
        2516
      ],
      "op": "JUMP",
      "path": "0"
    },
    "176": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "177": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F6"
    },
    "180": {
      "fn": "SBT.burn",
      "jump": "i",
      "offset": [
        2273,
        2516
      ],
      "op": "JUMP",
      "path": "0"
    },
    "181": {
      "offset": [
        726,
        749
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "182": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "184": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "185": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "188": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "195": {
      "op": "SHL"
    },
    "196": {
      "op": "SUB"
    },
    "197": {
      "offset": [
        726,
        749
      ],
      "op": "AND",
      "path": "0"
    },
    "198": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "DUP2",
      "path": "0"
    },
    "199": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "JUMP",
      "path": "0"
    },
    "200": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "203": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "210": {
      "op": "SHL"
    },
    "211": {
      "op": "SUB"
    },
    "212": {
      "op": "SWAP1"
    },
    "213": {
      "op": "SWAP2"
    },
    "214": {
      "op": "AND"
    },
    "215": {
      "op": "DUP2"
    },
    "216": {
      "op": "MSTORE"
    },
    "217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "219": {
      "op": "ADD"
    },
    "220": {
      "offset": [
        726,
        749
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "221": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "223": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "224": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "DUP1",
      "path": "0"
    },
    "225": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "226": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "SUB",
      "path": "0"
    },
    "227": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "228": {
      "fn": "SBT.burn",
      "offset": [
        726,
        749
      ],
      "op": "RETURN",
      "path": "0"
    },
    "229": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "233": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "236": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "237": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "239": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8ED"
    },
    "242": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        3118,
        3307
      ],
      "op": "JUMP",
      "path": "0"
    },
    "243": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37F"
    },
    "247": {
      "fn": "SBT.getSoul",
      "jump": "i",
      "offset": [
        3118,
        3307
      ],
      "op": "JUMP",
      "path": "0"
    },
    "248": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "251": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "253": {
      "op": "SWAP2"
    },
    "254": {
      "op": "MLOAD"
    },
    "255": {
      "op": "DUP1"
    },
    "256": {
      "op": "MLOAD"
    },
    "257": {
      "op": "DUP4"
    },
    "258": {
      "op": "MSTORE"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "261": {
      "op": "DUP1"
    },
    "262": {
      "op": "DUP3"
    },
    "263": {
      "op": "ADD"
    },
    "264": {
      "op": "MLOAD"
    },
    "265": {
      "op": "SWAP1"
    },
    "266": {
      "op": "DUP5"
    },
    "267": {
      "op": "ADD"
    },
    "268": {
      "op": "MSTORE"
    },
    "269": {
      "op": "DUP2"
    },
    "270": {
      "op": "ADD"
    },
    "271": {
      "op": "MLOAD"
    },
    "272": {
      "op": "SWAP1"
    },
    "273": {
      "op": "DUP3"
    },
    "274": {
      "op": "ADD"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "278": {
      "op": "ADD"
    },
    "279": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC"
    },
    "282": {
      "op": "JUMP"
    },
    "283": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "284": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "287": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "290": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "291": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "293": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8ED"
    },
    "296": {
      "fn": "SBT.hasSoul",
      "jump": "i",
      "offset": [
        2919,
        3031
      ],
      "op": "JUMP",
      "path": "0"
    },
    "297": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "304": {
      "op": "SHL"
    },
    "305": {
      "op": "SUB"
    },
    "306": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "307": {
      "fn": "SBT.hasSoul",
      "offset": [
        2974,
        2978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "309": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "310": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "DUP2",
      "path": "0"
    },
    "311": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "312": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "314": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "316": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "317": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "319": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "320": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "321": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3019
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "322": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3024
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "323": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3024
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "324": {
      "fn": "SBT.hasSoul",
      "offset": [
        2997,
        3024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "325": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "JUMP",
      "path": "0"
    },
    "326": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "329": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "330": {
      "op": "SWAP1"
    },
    "331": {
      "op": "ISZERO"
    },
    "332": {
      "op": "ISZERO"
    },
    "333": {
      "op": "DUP2"
    },
    "334": {
      "op": "MSTORE"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "337": {
      "op": "ADD"
    },
    "338": {
      "fn": "SBT.hasSoul",
      "offset": [
        2919,
        3031
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC"
    },
    "341": {
      "op": "JUMP"
    },
    "342": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "343": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "346": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "349": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "350": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "352": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "355": {
      "fn": "SBT.getOwner",
      "jump": "i",
      "offset": [
        3404,
        3639
      ],
      "op": "JUMP",
      "path": "0"
    },
    "356": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44C"
    },
    "360": {
      "fn": "SBT.getOwner",
      "jump": "i",
      "offset": [
        3404,
        3639
      ],
      "op": "JUMP",
      "path": "0"
    },
    "361": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "362": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "365": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "368": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "369": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "371": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90F"
    },
    "374": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D8"
    },
    "379": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "380": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "381": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "384": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18A"
    },
    "387": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "388": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "390": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94C"
    },
    "393": {
      "fn": "SBT.update",
      "jump": "i",
      "offset": [
        2602,
        2854
      ],
      "op": "JUMP",
      "path": "0"
    },
    "394": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "395": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "398": {
      "fn": "SBT.update",
      "jump": "i",
      "offset": [
        2602,
        2854
      ],
      "op": "JUMP",
      "path": "0"
    },
    "399": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "400": {
      "offset": [
        344,
        345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "402": {
      "offset": [
        309,
        332
      ],
      "op": "DUP3",
      "path": "0"
    },
    "403": {
      "fn": "SBT.mint",
      "offset": [
        309,
        332
      ],
      "op": "DUP2",
      "path": "0"
    },
    "404": {
      "fn": "SBT.mint",
      "offset": [
        309,
        332
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "405": {
      "offset": [
        309,
        322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "407": {
      "offset": [
        309,
        332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "409": {
      "fn": "SBT.mint",
      "offset": [
        309,
        332
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "410": {
      "fn": "SBT.mint",
      "offset": [
        309,
        332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "412": {
      "fn": "SBT.mint",
      "offset": [
        309,
        332
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "413": {
      "fn": "SBT.mint",
      "offset": [
        309,
        332
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "414": {
      "fn": "SBT.mint",
      "offset": [
        309,
        332
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "415": {
      "fn": "SBT.mint",
      "offset": [
        1879,
        1887
      ],
      "op": "DUP3",
      "path": "0"
    },
    "416": {
      "fn": "SBT.mint",
      "offset": [
        1879,
        1887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "423": {
      "op": "SHL"
    },
    "424": {
      "op": "SUB"
    },
    "425": {
      "offset": [
        309,
        332
      ],
      "op": "AND",
      "path": "0"
    },
    "426": {
      "offset": [
        309,
        346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "427": {
      "offset": [
        301,
        369
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0"
    },
    "430": {
      "offset": [
        301,
        369
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "431": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "433": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "offset": [
        301,
        369
      ],
      "op": "DUP2",
      "path": "0"
    },
    "442": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "445": {
      "offset": [
        301,
        369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "447": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "DUP3",
      "path": "0"
    },
    "448": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "ADD",
      "path": "0"
    },
    "449": {
      "op": "MSTORE"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "454": {
      "op": "DUP3"
    },
    "455": {
      "op": "ADD"
    },
    "456": {
      "op": "MSTORE"
    },
    "457": {
      "op": "PUSH18",
      "value": "0x105B1C9958591E481A185CC818481CDBDD5B"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "481": {
      "op": "DUP3"
    },
    "482": {
      "op": "ADD"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "offset": [
        301,
        369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "490": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "491": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "492": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "493": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "SUB",
      "path": "0"
    },
    "494": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "495": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "496": {
      "fn": "SBT.mint",
      "offset": [
        301,
        369
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "497": {
      "fn": "SBT.mint",
      "offset": [
        1921,
        1929
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "499": {
      "fn": "SBT.mint",
      "offset": [
        1921,
        1929
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "506": {
      "op": "SHL"
    },
    "507": {
      "op": "SUB"
    },
    "508": {
      "fn": "SBT.mint",
      "offset": [
        1921,
        1929
      ],
      "op": "AND",
      "path": "0"
    },
    "509": {
      "fn": "SBT.mint",
      "offset": [
        1907,
        1917
      ],
      "op": "CALLER",
      "path": "0"
    },
    "510": {
      "branch": 23,
      "fn": "SBT.mint",
      "offset": [
        1907,
        1929
      ],
      "op": "EQ",
      "path": "0"
    },
    "511": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A"
    },
    "514": {
      "branch": 23,
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "515": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "517": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "524": {
      "op": "SHL"
    },
    "525": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "DUP2",
      "path": "0"
    },
    "526": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "529": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "531": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "DUP3",
      "path": "0"
    },
    "532": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "ADD",
      "path": "0"
    },
    "533": {
      "op": "DUP2"
    },
    "534": {
      "op": "SWAP1"
    },
    "535": {
      "op": "MSTORE"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "538": {
      "op": "DUP3"
    },
    "539": {
      "op": "ADD"
    },
    "540": {
      "op": "MSTORE"
    },
    "541": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F70657261746F722063616E206D696E74206E657720736F756C73"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "576": {
      "op": "DUP3"
    },
    "577": {
      "op": "ADD"
    },
    "578": {
      "op": "MSTORE"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "581": {
      "op": "ADD"
    },
    "582": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "585": {
      "op": "JUMP"
    },
    "586": {
      "fn": "SBT.mint",
      "offset": [
        1899,
        1966
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "587": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "589": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "DUP4",
      "path": "0"
    },
    "590": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "591": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "592": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "594": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "596": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "597": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "598": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "599": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "601": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "DUP1",
      "path": "0"
    },
    "602": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "DUP4",
      "path": "0"
    },
    "603": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        1999
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "604": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "DUP1",
      "path": "0"
    },
    "605": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "op": "NOT"
    },
    "615": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "AND",
      "path": "0"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "DUP10",
      "path": "0"
    },
    "625": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "AND",
      "path": "0"
    },
    "626": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "627": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "DUP2",
      "path": "0"
    },
    "628": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "OR",
      "path": "0"
    },
    "629": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "630": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "631": {
      "fn": "SBT.mint",
      "offset": [
        1976,
        2015
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "632": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2055
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 3
    },
    "633": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "634": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "636": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "637": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2055
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "638": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2055
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "639": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2055
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "640": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2055
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "641": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "642": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "643": {
      "fn": "SBT.mint",
      "offset": [
        2025,
        2066
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "644": {
      "fn": "SBT.mint",
      "offset": [
        2152,
        2179
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x28C"
    },
    "647": {
      "fn": "SBT.mint",
      "offset": [
        2169,
        2178
      ],
      "op": "DUP3",
      "path": "0"
    },
    "648": {
      "fn": "SBT.mint",
      "offset": [
        2152,
        2168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64A"
    },
    "651": {
      "fn": "SBT.mint",
      "jump": "i",
      "offset": [
        2152,
        2179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "652": {
      "fn": "SBT.mint",
      "offset": [
        2152,
        2179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "653": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "655": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "DUP5",
      "path": "0"
    },
    "656": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "DUP2",
      "path": "0"
    },
    "657": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "658": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "660": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "662": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "663": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "DUP2",
      "path": "0"
    },
    "664": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "665": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "667": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "668": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "DUP3",
      "path": "0"
    },
    "669": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "670": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2138
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "671": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "DUP4",
      "path": "0"
    },
    "672": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "673": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "674": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "675": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "DUP4",
      "path": "0"
    },
    "676": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "677": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "ADD",
      "path": "0"
    },
    "678": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "679": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "681": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "682": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "ADD",
      "path": "0"
    },
    "683": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "684": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "685": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "686": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "ADD",
      "path": "0"
    },
    "687": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "688": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "690": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "691": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "692": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "ADD",
      "path": "0"
    },
    "693": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "694": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "695": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "696": {
      "fn": "SBT.mint",
      "offset": [
        2123,
        2179
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "697": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 5
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "op": "SUB"
    },
    "706": {
      "op": "DUP7"
    },
    "707": {
      "op": "AND"
    },
    "708": {
      "op": "DUP2"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x3C3284D117C92D0B1699230960384E794DCBA184CC48FF114FE4FED20C9B0565"
    },
    "743": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "744": {
      "op": "ADD"
    },
    "745": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "747": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "748": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "DUP1",
      "path": "0"
    },
    "749": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "750": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "SUB",
      "path": "0"
    },
    "751": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "752": {
      "fn": "SBT.mint",
      "offset": [
        2194,
        2213
      ],
      "op": "LOG1",
      "path": "0"
    },
    "753": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "POP",
      "path": "0"
    },
    "754": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "POP",
      "path": "0"
    },
    "755": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "POP",
      "path": "0"
    },
    "756": {
      "fn": "SBT.mint",
      "offset": [
        1741,
        2220
      ],
      "op": "POP",
      "path": "0"
    },
    "757": {
      "fn": "SBT.mint",
      "jump": "o",
      "offset": [
        1741,
        2220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "758": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "759": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "761": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "762": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "763": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "764": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "766": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "768": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "769": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "770": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "771": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "773": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "774": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "DUP4",
      "path": "0"
    },
    "775": {
      "fn": "SBT.burn",
      "offset": [
        2336,
        2359
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "776": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "DUP4",
      "path": "0"
    },
    "777": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "778": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "779": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "781": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "782": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "DUP3",
      "path": "0"
    },
    "783": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "ADD",
      "path": "0"
    },
    "784": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "DUP6",
      "path": "0"
    },
    "785": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "786": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "787": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "789": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "790": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "DUP3",
      "path": "0"
    },
    "791": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "ADD",
      "path": "0"
    },
    "792": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "DUP6",
      "path": "0"
    },
    "793": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "794": {
      "fn": "SBT.burn",
      "offset": [
        2329,
        2359
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "795": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 7
    },
    "796": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "DUP5",
      "path": "0"
    },
    "797": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "798": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "799": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "DUP6",
      "path": "0"
    },
    "800": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "801": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "802": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "op": "SUB"
    },
    "811": {
      "fn": "SBT.burn",
      "offset": [
        2392,
        2423
      ],
      "op": "AND",
      "path": "0"
    },
    "812": {
      "fn": "SBT.burn",
      "offset": [
        2376,
        2424
      ],
      "op": "DUP7",
      "path": "0"
    },
    "813": {
      "fn": "SBT.burn",
      "offset": [
        2376,
        2424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "814": {
      "fn": "SBT.burn",
      "offset": [
        2376,
        2424
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "815": {
      "fn": "SBT.burn",
      "offset": [
        2376,
        2424
      ],
      "op": "DUP5",
      "path": "0"
    },
    "816": {
      "fn": "SBT.burn",
      "offset": [
        2376,
        2424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "817": {
      "fn": "SBT.burn",
      "offset": [
        2376,
        2424
      ],
      "op": "DUP3",
      "path": "0"
    },
    "818": {
      "fn": "SBT.burn",
      "offset": [
        2376,
        2424
      ],
      "op": "DUP6",
      "path": "0"
    },
    "819": {
      "fn": "SBT.burn",
      "offset": [
        2376,
        2424
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "820": {
      "fn": "SBT.burn",
      "offset": [
        2369,
        2424
      ],
      "op": "DUP6",
      "path": "0"
    },
    "821": {
      "fn": "SBT.burn",
      "offset": [
        2369,
        2424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "822": {
      "fn": "SBT.burn",
      "offset": [
        2369,
        2424
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "823": {
      "fn": "SBT.burn",
      "offset": [
        2441,
        2472
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 8
    },
    "824": {
      "fn": "SBT.burn",
      "offset": [
        2441,
        2472
      ],
      "op": "DUP6",
      "path": "0"
    },
    "825": {
      "fn": "SBT.burn",
      "offset": [
        2441,
        2472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "826": {
      "fn": "SBT.burn",
      "offset": [
        2441,
        2472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "827": {
      "fn": "SBT.burn",
      "offset": [
        2441,
        2472
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "828": {
      "fn": "SBT.burn",
      "offset": [
        2441,
        2472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "829": {
      "fn": "SBT.burn",
      "offset": [
        2441,
        2472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "830": {
      "fn": "SBT.burn",
      "offset": [
        2434,
        2472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "831": {
      "fn": "SBT.burn",
      "offset": [
        2434,
        2472
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "op": "NOT"
    },
    "841": {
      "fn": "SBT.burn",
      "offset": [
        2434,
        2472
      ],
      "op": "AND",
      "path": "0"
    },
    "842": {
      "fn": "SBT.burn",
      "offset": [
        2434,
        2472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "843": {
      "fn": "SBT.burn",
      "offset": [
        2434,
        2472
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "844": {
      "fn": "SBT.burn",
      "offset": [
        2434,
        2472
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "845": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 9
    },
    "846": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "847": {
      "op": "DUP3"
    },
    "848": {
      "op": "DUP2"
    },
    "849": {
      "op": "MSTORE"
    },
    "850": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB90306AD06B2A6FF86DDC9327DB583062895EF6540E62DC50ADD009DB5B356EB"
    },
    "883": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "884": {
      "op": "ADD"
    },
    "885": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "887": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "888": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "DUP1",
      "path": "0"
    },
    "889": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "890": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "SUB",
      "path": "0"
    },
    "891": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "892": {
      "fn": "SBT.burn",
      "offset": [
        2487,
        2509
      ],
      "op": "LOG1",
      "path": "0"
    },
    "893": {
      "fn": "SBT.burn",
      "offset": [
        2273,
        2516
      ],
      "op": "POP",
      "path": "0"
    },
    "894": {
      "fn": "SBT.burn",
      "jump": "o",
      "offset": [
        2273,
        2516
      ],
      "op": "JUMP",
      "path": "0"
    },
    "895": {
      "fn": "SBT.getSoul",
      "offset": [
        3118,
        3307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "898": {
      "op": "DUP1"
    },
    "899": {
      "op": "MLOAD"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "902": {
      "op": "DUP2"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "op": "DUP3"
    },
    "905": {
      "op": "MSTORE"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "910": {
      "op": "DUP3"
    },
    "911": {
      "op": "ADD"
    },
    "912": {
      "op": "DUP2"
    },
    "913": {
      "op": "DUP2"
    },
    "914": {
      "op": "MSTORE"
    },
    "915": {
      "op": "SWAP3"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "DUP2"
    },
    "919": {
      "op": "SWAP1"
    },
    "920": {
      "op": "MSTORE"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "923": {
      "op": "DUP3"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "MSTORE"
    },
    "926": {
      "op": "SWAP1"
    },
    "927": {
      "op": "DUP2"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "op": "SUB"
    },
    "937": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 10
    },
    "938": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "AND",
      "path": "0"
    },
    "939": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "941": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "942": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "943": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "944": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "946": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "948": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "949": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "951": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "DUP2",
      "path": "0"
    },
    "952": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "953": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3226
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "954": {
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "branch": 24,
      "fn": "SBT.getSoul",
      "offset": [
        3204,
        3231
      ],
      "op": "SUB",
      "path": "0"
    },
    "956": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC"
    },
    "959": {
      "branch": 24,
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "960": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "962": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "971": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "974": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "976": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "977": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "ADD",
      "path": "0"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "983": {
      "op": "DUP3"
    },
    "984": {
      "op": "ADD"
    },
    "985": {
      "op": "MSTORE"
    },
    "986": {
      "op": "PUSH18",
      "value": "0x14DBDD5B08191BD95CDB89DD08195E1A5CDD"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1010": {
      "op": "DUP3"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "MSTORE"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1015": {
      "op": "ADD"
    },
    "1016": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "1019": {
      "op": "JUMP"
    },
    "1020": {
      "fn": "SBT.getSoul",
      "offset": [
        3196,
        3254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1028": {
      "op": "SHL"
    },
    "1029": {
      "op": "SUB"
    },
    "1030": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "AND",
      "path": "0",
      "statement": 11
    },
    "1031": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1033": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1034": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1035": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1036": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1038": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1040": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1041": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1042": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1043": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1045": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1046": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1047": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1048": {
      "fn": "SBT.getSoul",
      "offset": [
        3277,
        3299
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1049": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1050": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1051": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1053": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1054": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1055": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1056": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1057": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1058": {
      "fn": "SBT.getSoul",
      "offset": [
        3271,
        3300
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1059": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1060": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1061": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1063": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1064": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "ADD",
      "path": "0"
    },
    "1065": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1066": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1067": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1068": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1069": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1070": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1071": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "ADD",
      "path": "0"
    },
    "1072": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1073": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1074": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1075": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1077": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1078": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "ADD",
      "path": "0"
    },
    "1079": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1080": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1081": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1082": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "ADD",
      "path": "0"
    },
    "1083": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1084": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1085": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1086": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1087": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1088": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1089": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "ADD",
      "path": "0"
    },
    "1090": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1091": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1093": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1094": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "ADD",
      "path": "0"
    },
    "1095": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1096": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1097": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1098": {
      "fn": "SBT.getSoul",
      "offset": [
        3264,
        3300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "SBT.getSoul",
      "jump": "o",
      "offset": [
        3118,
        3307
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1100": {
      "fn": "SBT.getOwner",
      "offset": [
        3404,
        3639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1101": {
      "fn": "SBT.getOwner",
      "offset": [
        3460,
        3467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1103": {
      "fn": "SBT.getOwner",
      "offset": [
        3514,
        3522
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "1104": {
      "fn": "SBT.getOwner",
      "offset": [
        3514,
        3522
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "fn": "SBT.getOwner",
      "offset": [
        3514,
        3522
      ],
      "op": "AND",
      "path": "0"
    },
    "1114": {
      "fn": "SBT.getOwner",
      "offset": [
        3500,
        3510
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1115": {
      "branch": 25,
      "fn": "SBT.getOwner",
      "offset": [
        3500,
        3522
      ],
      "op": "EQ",
      "path": "0"
    },
    "1116": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BC"
    },
    "1119": {
      "branch": 25,
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1120": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1122": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1129": {
      "op": "SHL"
    },
    "1130": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1131": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1134": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1136": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1137": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "ADD",
      "path": "0"
    },
    "1138": {
      "op": "MSTORE"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1143": {
      "op": "DUP3"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "op": "MSTORE"
    },
    "1146": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468697320636F6E74726163742063616E20766965772074686973"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH12",
      "value": "0x206861736865642064617461"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1202": {
      "op": "DUP3"
    },
    "1203": {
      "op": "ADD"
    },
    "1204": {
      "op": "MSTORE"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "1211": {
      "op": "JUMP"
    },
    "1212": {
      "fn": "SBT.getOwner",
      "offset": [
        3479,
        3592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1213": {
      "op": "POP"
    },
    "1214": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "1216": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1217": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1218": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1219": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1221": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1223": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1224": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1226": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1227": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1228": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "op": "SUB"
    },
    "1237": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "AND",
      "path": "0"
    },
    "1238": {
      "fn": "SBT.getOwner",
      "offset": [
        3609,
        3632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1239": {
      "fn": "SBT.getOwner",
      "jump": "o",
      "offset": [
        3404,
        3639
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1240": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1241": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3918,
        3928
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1242": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3830,
        3834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1244": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1245": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1246": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1247": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1249": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1251": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1252": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1253": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1254": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1256": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1257": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1258": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1259": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3902,
        3929
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1260": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3896,
        3930
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1261": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3896,
        3930
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1262": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3896,
        3901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1264": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3896,
        3930
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1265": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3896,
        3930
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1266": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3896,
        3930
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1267": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3896,
        3930
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1268": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3896,
        3930
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1269": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1270": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1271": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1273": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1274": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1275": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1276": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1277": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1278": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1279": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1280": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1281": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1283": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1284": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1285": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1286": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1287": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1288": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1289": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1290": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1291": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1292": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1293": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1294": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1295": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1296": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1297": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1298": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1299": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1300": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1301": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1302": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1303": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3846,
        3941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1304": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3830,
        3834
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1305": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3998,
        4029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x521"
    },
    "1308": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4015,
        4028
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1309": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3998,
        4014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64A"
    },
    "1312": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "i",
      "offset": [
        3998,
        4029
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1313": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3998,
        4029
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1314": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3951,
        4029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1315": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3951,
        4029
      ],
      "op": "POP",
      "path": "0"
    },
    "1316": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4084,
        4105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1317": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4084,
        4124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1319": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4084,
        4124
      ],
      "op": "ADD",
      "path": "0"
    },
    "1320": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4084,
        4124
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1321": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4043,
        4061
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1322": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4043,
        4080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1324": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4043,
        4080
      ],
      "op": "ADD",
      "path": "0"
    },
    "1325": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4043,
        4080
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1326": {
      "branch": 26,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4043,
        4124
      ],
      "op": "EQ",
      "path": "0"
    },
    "1327": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4039,
        4163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53C"
    },
    "1330": {
      "branch": 26,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4039,
        4163
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1331": {
      "op": "POP"
    },
    "1332": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4147,
        4152
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "1334": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4147,
        4152
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1335": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "op": "POP"
    },
    "1339": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1340": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4039,
        4163
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1341": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4214,
        4235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1342": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4214,
        4251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1344": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4214,
        4251
      ],
      "op": "ADD",
      "path": "0"
    },
    "1345": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4214,
        4251
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1346": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4176,
        4194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1347": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4176,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1349": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4176,
        4210
      ],
      "op": "ADD",
      "path": "0"
    },
    "1350": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4176,
        4210
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1351": {
      "branch": 27,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4176,
        4251
      ],
      "op": "EQ",
      "path": "0"
    },
    "1352": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4172,
        4290
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x555"
    },
    "1355": {
      "branch": 27,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4172,
        4290
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1356": {
      "op": "POP"
    },
    "1357": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4274,
        4279
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "1359": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4274,
        4279
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1360": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "op": "POP"
    },
    "1364": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1365": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4172,
        4290
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1366": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4334,
        4364
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1367": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4334,
        4364
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1368": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4303,
        4330
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1369": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4303,
        4330
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1370": {
      "branch": 28,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4303,
        4364
      ],
      "op": "EQ",
      "path": "0"
    },
    "1371": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4299,
        4403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x568"
    },
    "1374": {
      "branch": 28,
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4299,
        4403
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1375": {
      "op": "POP"
    },
    "1376": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4387,
        4392
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "1378": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4387,
        4392
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1379": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "op": "POP"
    },
    "1383": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1384": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4299,
        4403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4419,
        4423
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "1388": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        4419,
        4423
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1389": {
      "fn": "SBT.verifyDataCorrectness",
      "offset": [
        3741,
        4430
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "op": "POP"
    },
    "1392": {
      "op": "POP"
    },
    "1393": {
      "fn": "SBT.verifyDataCorrectness",
      "jump": "o",
      "offset": [
        3741,
        4430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1394": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1395": {
      "fn": "SBT.update",
      "offset": [
        2710,
        2720
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1396": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1398": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1399": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1400": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1401": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1403": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1405": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1406": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1407": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1408": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1410": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1411": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1412": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1413": {
      "fn": "SBT.update",
      "offset": [
        2694,
        2721
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1414": {
      "offset": [
        167,
        190
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1415": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1416": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1417": {
      "offset": [
        167,
        180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1419": {
      "offset": [
        167,
        190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1420": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1421": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1422": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1423": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1424": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1425": {
      "fn": "SBT.update",
      "offset": [
        167,
        190
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "op": "SUB"
    },
    "1434": {
      "offset": [
        167,
        190
      ],
      "op": "AND",
      "path": "0"
    },
    "1435": {
      "offset": [
        159,
        227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DB"
    },
    "1438": {
      "fn": "SBT.update",
      "offset": [
        159,
        227
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1439": {
      "fn": "SBT.update",
      "offset": [
        159,
        227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1441": {
      "fn": "SBT.update",
      "offset": [
        159,
        227
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "offset": [
        159,
        227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1450": {
      "fn": "SBT.update",
      "offset": [
        159,
        227
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1453": {
      "offset": [
        159,
        227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1455": {
      "fn": "SBT.update",
      "offset": [
        159,
        227
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1456": {
      "fn": "SBT.update",
      "offset": [
        159,
        227
      ],
      "op": "ADD",
      "path": "0"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1462": {
      "op": "DUP3"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "PUSH18",
      "value": "0x105B1C9958591E481A185CC818481CDBDD5B"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1486": {
      "op": "SHL"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1489": {
      "op": "DUP3"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "offset": [
        159,
        227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "1498": {
      "op": "JUMP"
    },
    "1499": {
      "offset": [
        159,
        227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1500": {
      "fn": "SBT.update",
      "offset": [
        2759,
        2769
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 18
    },
    "1501": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1503": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1504": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1505": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1506": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1508": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1510": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1511": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1512": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1513": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1515": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1516": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1517": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1518": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1519": {
      "fn": "SBT.update",
      "offset": [
        2743,
        2770
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1520": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2771
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1521": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1522": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1524": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2771
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1525": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1526": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1527": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2771
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1528": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2771
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1529": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1530": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1531": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1532": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1533": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1534": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1535": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "ADD",
      "path": "0"
    },
    "1536": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1537": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1539": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1540": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "ADD",
      "path": "0"
    },
    "1541": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1542": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1543": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1544": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "ADD",
      "path": "0"
    },
    "1545": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1546": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1547": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1548": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "ADD",
      "path": "0"
    },
    "1549": {
      "fn": "SBT.update",
      "offset": [
        2737,
        2797
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1550": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 19
    },
    "1551": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1552": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1553": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1554": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1555": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1556": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1557": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1558": {
      "fn": "SBT.update",
      "offset": [
        2819,
        2846
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1559": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1560": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1561": {
      "op": "SWAP1"
    },
    "1562": {
      "op": "DUP2"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x164F7B2AB803097DAB5E39F06D2E4F3C3DDC5D4171ABBDCC3E76443B8359C7F5"
    },
    "1597": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1598": {
      "op": "ADD"
    },
    "1599": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1601": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1602": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1603": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1604": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "SUB",
      "path": "0"
    },
    "1605": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1606": {
      "fn": "SBT.update",
      "offset": [
        2812,
        2847
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1607": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "POP",
      "path": "0"
    },
    "1608": {
      "fn": "SBT.update",
      "offset": [
        2602,
        2854
      ],
      "op": "POP",
      "path": "0"
    },
    "1609": {
      "fn": "SBT.update",
      "jump": "o",
      "offset": [
        2602,
        2854
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1610": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1209,
        1635
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1613": {
      "op": "DUP1"
    },
    "1614": {
      "op": "MLOAD"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1617": {
      "op": "DUP2"
    },
    "1618": {
      "op": "ADD"
    },
    "1619": {
      "op": "DUP3"
    },
    "1620": {
      "op": "MSTORE"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1623": {
      "op": "DUP1"
    },
    "1624": {
      "op": "DUP3"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1628": {
      "op": "DUP3"
    },
    "1629": {
      "op": "ADD"
    },
    "1630": {
      "op": "DUP2"
    },
    "1631": {
      "op": "SWAP1"
    },
    "1632": {
      "op": "MSTORE"
    },
    "1633": {
      "op": "SWAP2"
    },
    "1634": {
      "op": "DUP2"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "SWAP2"
    },
    "1637": {
      "op": "SWAP1"
    },
    "1638": {
      "op": "SWAP2"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1642": {
      "op": "DUP1"
    },
    "1643": {
      "op": "MLOAD"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1646": {
      "op": "DUP2"
    },
    "1647": {
      "op": "ADD"
    },
    "1648": {
      "op": "DUP3"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1652": {
      "op": "DUP1"
    },
    "1653": {
      "op": "DUP3"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1657": {
      "op": "DUP3"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "DUP2"
    },
    "1660": {
      "op": "SWAP1"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "SWAP2"
    },
    "1663": {
      "op": "DUP2"
    },
    "1664": {
      "op": "ADD"
    },
    "1665": {
      "op": "SWAP2"
    },
    "1666": {
      "op": "SWAP1"
    },
    "1667": {
      "op": "SWAP2"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1426,
        1431
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 20
    },
    "1670": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1426,
        1445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1672": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1426,
        1445
      ],
      "op": "ADD",
      "path": "0"
    },
    "1673": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1426,
        1445
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1674": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1676": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1677": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1679": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "ADD",
      "path": "0"
    },
    "1680": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x699"
    },
    "1683": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1684": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1685": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A8"
    },
    "1688": {
      "fn": "SBT.hashPersonalData",
      "jump": "i",
      "offset": [
        1409,
        1446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1689": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1690": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1692": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1693": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1696": {
      "op": "NOT"
    },
    "1697": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1698": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1699": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "SUB",
      "path": "0"
    },
    "1700": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "ADD",
      "path": "0"
    },
    "1701": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1702": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1703": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1704": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1705": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1706": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1399,
        1447
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1707": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1399,
        1447
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1708": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1409,
        1446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1710": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1399,
        1447
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1711": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1399,
        1447
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1712": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1399,
        1447
      ],
      "op": "ADD",
      "path": "0"
    },
    "1713": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1399,
        1447
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1714": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1367,
        1396
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1715": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1367,
        1396
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1716": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1367,
        1396
      ],
      "op": "ADD",
      "path": "0"
    },
    "1717": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1367,
        1447
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1718": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1513,
        1529
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 21
    },
    "1719": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1513,
        1529
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1720": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1513,
        1529
      ],
      "op": "ADD",
      "path": "0"
    },
    "1721": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1513,
        1529
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1722": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1723": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1724": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "1727": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1728": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "ADD",
      "path": "0"
    },
    "1729": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A8"
    },
    "1732": {
      "fn": "SBT.hashPersonalData",
      "jump": "i",
      "offset": [
        1496,
        1530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1733": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1734": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1736": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1737": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1740": {
      "op": "NOT"
    },
    "1741": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1742": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1743": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "SUB",
      "path": "0"
    },
    "1744": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "ADD",
      "path": "0"
    },
    "1745": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1746": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1747": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1748": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1749": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1750": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1486,
        1531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1751": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1486,
        1531
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1752": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1496,
        1530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1754": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1486,
        1531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1755": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1486,
        1531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1756": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1486,
        1531
      ],
      "op": "ADD",
      "path": "0"
    },
    "1757": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1486,
        1531
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1758": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1457,
        1483
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1759": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1457,
        1483
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1760": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1457,
        1483
      ],
      "op": "ADD",
      "path": "0"
    },
    "1761": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1457,
        1531
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1762": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1590,
        1599
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 22
    },
    "1763": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1590,
        1599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1764": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1765": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1766": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EF"
    },
    "1769": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1770": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "ADD",
      "path": "0"
    },
    "1771": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A8"
    },
    "1774": {
      "fn": "SBT.hashPersonalData",
      "jump": "i",
      "offset": [
        1573,
        1600
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1775": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1776": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1778": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1779": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1782": {
      "op": "NOT"
    },
    "1783": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1784": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1785": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "SUB",
      "path": "0"
    },
    "1786": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "ADD",
      "path": "0"
    },
    "1787": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1788": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1789": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1790": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1791": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1792": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1563,
        1601
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1793": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1563,
        1601
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1794": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1573,
        1600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1796": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1563,
        1601
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1797": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1563,
        1601
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1798": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1563,
        1601
      ],
      "op": "ADD",
      "path": "0"
    },
    "1799": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1563,
        1601
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1800": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1541,
        1601
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1801": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1541,
        1601
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1802": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1541,
        1551
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1803": {
      "fn": "SBT.hashPersonalData",
      "offset": [
        1209,
        1635
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1804": {
      "op": "POP"
    },
    "1805": {
      "op": "POP"
    },
    "1806": {
      "fn": "SBT.hashPersonalData",
      "jump": "o",
      "offset": [
        1209,
        1635
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1807": {
      "op": "JUMPDEST"
    },
    "1808": {
      "op": "DUP1"
    },
    "1809": {
      "op": "CALLDATALOAD"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1816": {
      "op": "SHL"
    },
    "1817": {
      "op": "SUB"
    },
    "1818": {
      "op": "DUP2"
    },
    "1819": {
      "op": "AND"
    },
    "1820": {
      "op": "DUP2"
    },
    "1821": {
      "op": "EQ"
    },
    "1822": {
      "op": "PUSH2",
      "value": "0x726"
    },
    "1825": {
      "op": "JUMPI"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1828": {
      "op": "DUP1"
    },
    "1829": {
      "op": "REVERT"
    },
    "1830": {
      "op": "JUMPDEST"
    },
    "1831": {
      "op": "SWAP2"
    },
    "1832": {
      "op": "SWAP1"
    },
    "1833": {
      "op": "POP"
    },
    "1834": {
      "jump": "o",
      "op": "JUMP"
    },
    "1835": {
      "op": "JUMPDEST"
    },
    "1836": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1843": {
      "op": "SHL"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1846": {
      "op": "MSTORE"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1851": {
      "op": "MSTORE"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1856": {
      "op": "REVERT"
    },
    "1857": {
      "op": "JUMPDEST"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1860": {
      "op": "DUP3"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1863": {
      "op": "DUP4"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "SLT"
    },
    "1866": {
      "op": "PUSH2",
      "value": "0x752"
    },
    "1869": {
      "op": "JUMPI"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1872": {
      "op": "DUP1"
    },
    "1873": {
      "op": "REVERT"
    },
    "1874": {
      "op": "JUMPDEST"
    },
    "1875": {
      "op": "DUP2"
    },
    "1876": {
      "op": "CALLDATALOAD"
    },
    "1877": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1886": {
      "op": "DUP1"
    },
    "1887": {
      "op": "DUP3"
    },
    "1888": {
      "op": "GT"
    },
    "1889": {
      "op": "ISZERO"
    },
    "1890": {
      "op": "PUSH2",
      "value": "0x76D"
    },
    "1893": {
      "op": "JUMPI"
    },
    "1894": {
      "op": "PUSH2",
      "value": "0x76D"
    },
    "1897": {
      "op": "PUSH2",
      "value": "0x72B"
    },
    "1900": {
      "jump": "i",
      "op": "JUMP"
    },
    "1901": {
      "op": "JUMPDEST"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1904": {
      "op": "MLOAD"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1907": {
      "op": "DUP4"
    },
    "1908": {
      "op": "ADD"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1911": {
      "op": "NOT"
    },
    "1912": {
      "op": "SWAP1"
    },
    "1913": {
      "op": "DUP2"
    },
    "1914": {
      "op": "AND"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1917": {
      "op": "ADD"
    },
    "1918": {
      "op": "AND"
    },
    "1919": {
      "op": "DUP2"
    },
    "1920": {
      "op": "ADD"
    },
    "1921": {
      "op": "SWAP1"
    },
    "1922": {
      "op": "DUP3"
    },
    "1923": {
      "op": "DUP3"
    },
    "1924": {
      "op": "GT"
    },
    "1925": {
      "op": "DUP2"
    },
    "1926": {
      "op": "DUP4"
    },
    "1927": {
      "op": "LT"
    },
    "1928": {
      "op": "OR"
    },
    "1929": {
      "op": "ISZERO"
    },
    "1930": {
      "op": "PUSH2",
      "value": "0x795"
    },
    "1933": {
      "op": "JUMPI"
    },
    "1934": {
      "op": "PUSH2",
      "value": "0x795"
    },
    "1937": {
      "op": "PUSH2",
      "value": "0x72B"
    },
    "1940": {
      "jump": "i",
      "op": "JUMP"
    },
    "1941": {
      "op": "JUMPDEST"
    },
    "1942": {
      "op": "DUP2"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1945": {
      "op": "MSTORE"
    },
    "1946": {
      "op": "DUP4"
    },
    "1947": {
      "op": "DUP2"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "op": "DUP7"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1952": {
      "op": "DUP6"
    },
    "1953": {
      "op": "DUP9"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "op": "ADD"
    },
    "1956": {
      "op": "GT"
    },
    "1957": {
      "op": "ISZERO"
    },
    "1958": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "1961": {
      "op": "JUMPI"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1964": {
      "op": "DUP1"
    },
    "1965": {
      "op": "REVERT"
    },
    "1966": {
      "op": "JUMPDEST"
    },
    "1967": {
      "op": "DUP4"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1970": {
      "op": "DUP8"
    },
    "1971": {
      "op": "ADD"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1974": {
      "op": "DUP4"
    },
    "1975": {
      "op": "ADD"
    },
    "1976": {
      "op": "CALLDATACOPY"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1981": {
      "op": "DUP6"
    },
    "1982": {
      "op": "DUP4"
    },
    "1983": {
      "op": "ADD"
    },
    "1984": {
      "op": "ADD"
    },
    "1985": {
      "op": "MSTORE"
    },
    "1986": {
      "op": "DUP1"
    },
    "1987": {
      "op": "SWAP5"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "SWAP3"
    },
    "1994": {
      "op": "SWAP2"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "jump": "o",
      "op": "JUMP"
    },
    "1998": {
      "op": "JUMPDEST"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2003": {
      "op": "DUP3"
    },
    "2004": {
      "op": "DUP5"
    },
    "2005": {
      "op": "SUB"
    },
    "2006": {
      "op": "SLT"
    },
    "2007": {
      "op": "ISZERO"
    },
    "2008": {
      "op": "PUSH2",
      "value": "0x7E0"
    },
    "2011": {
      "op": "JUMPI"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2014": {
      "op": "DUP1"
    },
    "2015": {
      "op": "REVERT"
    },
    "2016": {
      "op": "JUMPDEST"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2019": {
      "op": "MLOAD"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2022": {
      "op": "DUP2"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2033": {
      "op": "DUP3"
    },
    "2034": {
      "op": "DUP3"
    },
    "2035": {
      "op": "LT"
    },
    "2036": {
      "op": "DUP2"
    },
    "2037": {
      "op": "DUP4"
    },
    "2038": {
      "op": "GT"
    },
    "2039": {
      "op": "OR"
    },
    "2040": {
      "op": "ISZERO"
    },
    "2041": {
      "op": "PUSH2",
      "value": "0x804"
    },
    "2044": {
      "op": "JUMPI"
    },
    "2045": {
      "op": "PUSH2",
      "value": "0x804"
    },
    "2048": {
      "op": "PUSH2",
      "value": "0x72B"
    },
    "2051": {
      "jump": "i",
      "op": "JUMP"
    },
    "2052": {
      "op": "JUMPDEST"
    },
    "2053": {
      "op": "DUP2"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2056": {
      "op": "MSTORE"
    },
    "2057": {
      "op": "DUP3"
    },
    "2058": {
      "op": "SWAP4"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "op": "DUP5"
    },
    "2061": {
      "op": "CALLDATALOAD"
    },
    "2062": {
      "op": "SWAP2"
    },
    "2063": {
      "op": "POP"
    },
    "2064": {
      "op": "DUP1"
    },
    "2065": {
      "op": "DUP3"
    },
    "2066": {
      "op": "GT"
    },
    "2067": {
      "op": "ISZERO"
    },
    "2068": {
      "op": "PUSH2",
      "value": "0x81C"
    },
    "2071": {
      "op": "JUMPI"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2074": {
      "op": "DUP1"
    },
    "2075": {
      "op": "REVERT"
    },
    "2076": {
      "op": "JUMPDEST"
    },
    "2077": {
      "op": "PUSH2",
      "value": "0x828"
    },
    "2080": {
      "op": "DUP7"
    },
    "2081": {
      "op": "DUP4"
    },
    "2082": {
      "op": "DUP8"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "op": "PUSH2",
      "value": "0x741"
    },
    "2087": {
      "jump": "i",
      "op": "JUMP"
    },
    "2088": {
      "op": "JUMPDEST"
    },
    "2089": {
      "op": "DUP4"
    },
    "2090": {
      "op": "MSTORE"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2093": {
      "op": "DUP6"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "CALLDATALOAD"
    },
    "2096": {
      "op": "SWAP2"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "op": "DUP1"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "GT"
    },
    "2101": {
      "op": "ISZERO"
    },
    "2102": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2105": {
      "op": "JUMPI"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2108": {
      "op": "DUP1"
    },
    "2109": {
      "op": "REVERT"
    },
    "2110": {
      "op": "JUMPDEST"
    },
    "2111": {
      "op": "PUSH2",
      "value": "0x84A"
    },
    "2114": {
      "op": "DUP7"
    },
    "2115": {
      "op": "DUP4"
    },
    "2116": {
      "op": "DUP8"
    },
    "2117": {
      "op": "ADD"
    },
    "2118": {
      "op": "PUSH2",
      "value": "0x741"
    },
    "2121": {
      "jump": "i",
      "op": "JUMP"
    },
    "2122": {
      "op": "JUMPDEST"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2125": {
      "op": "DUP5"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "MSTORE"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2130": {
      "op": "DUP6"
    },
    "2131": {
      "op": "ADD"
    },
    "2132": {
      "op": "CALLDATALOAD"
    },
    "2133": {
      "op": "SWAP2"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "DUP1"
    },
    "2136": {
      "op": "DUP3"
    },
    "2137": {
      "op": "GT"
    },
    "2138": {
      "op": "ISZERO"
    },
    "2139": {
      "op": "PUSH2",
      "value": "0x863"
    },
    "2142": {
      "op": "JUMPI"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2145": {
      "op": "DUP1"
    },
    "2146": {
      "op": "REVERT"
    },
    "2147": {
      "op": "JUMPDEST"
    },
    "2148": {
      "op": "POP"
    },
    "2149": {
      "op": "PUSH2",
      "value": "0x870"
    },
    "2152": {
      "op": "DUP6"
    },
    "2153": {
      "op": "DUP3"
    },
    "2154": {
      "op": "DUP7"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "PUSH2",
      "value": "0x741"
    },
    "2159": {
      "jump": "i",
      "op": "JUMP"
    },
    "2160": {
      "op": "JUMPDEST"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2163": {
      "op": "DUP4"
    },
    "2164": {
      "op": "ADD"
    },
    "2165": {
      "op": "MSTORE"
    },
    "2166": {
      "op": "POP"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "SWAP3"
    },
    "2169": {
      "op": "SWAP2"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "jump": "o",
      "op": "JUMP"
    },
    "2173": {
      "op": "JUMPDEST"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2176": {
      "op": "DUP1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2181": {
      "op": "DUP5"
    },
    "2182": {
      "op": "DUP7"
    },
    "2183": {
      "op": "SUB"
    },
    "2184": {
      "op": "SLT"
    },
    "2185": {
      "op": "ISZERO"
    },
    "2186": {
      "op": "PUSH2",
      "value": "0x892"
    },
    "2189": {
      "op": "JUMPI"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2192": {
      "op": "DUP1"
    },
    "2193": {
      "op": "REVERT"
    },
    "2194": {
      "op": "JUMPDEST"
    },
    "2195": {
      "op": "PUSH2",
      "value": "0x89B"
    },
    "2198": {
      "op": "DUP5"
    },
    "2199": {
      "op": "PUSH2",
      "value": "0x70F"
    },
    "2202": {
      "jump": "i",
      "op": "JUMP"
    },
    "2203": {
      "op": "JUMPDEST"
    },
    "2204": {
      "op": "SWAP3"
    },
    "2205": {
      "op": "POP"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2208": {
      "op": "DUP5"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "CALLDATALOAD"
    },
    "2211": {
      "op": "SWAP2"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2215": {
      "op": "DUP5"
    },
    "2216": {
      "op": "ADD"
    },
    "2217": {
      "op": "CALLDATALOAD"
    },
    "2218": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2227": {
      "op": "DUP2"
    },
    "2228": {
      "op": "GT"
    },
    "2229": {
      "op": "ISZERO"
    },
    "2230": {
      "op": "PUSH2",
      "value": "0x8BE"
    },
    "2233": {
      "op": "JUMPI"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2236": {
      "op": "DUP1"
    },
    "2237": {
      "op": "REVERT"
    },
    "2238": {
      "op": "JUMPDEST"
    },
    "2239": {
      "op": "PUSH2",
      "value": "0x8CA"
    },
    "2242": {
      "op": "DUP7"
    },
    "2243": {
      "op": "DUP3"
    },
    "2244": {
      "op": "DUP8"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "op": "PUSH2",
      "value": "0x7CE"
    },
    "2249": {
      "jump": "i",
      "op": "JUMP"
    },
    "2250": {
      "op": "JUMPDEST"
    },
    "2251": {
      "op": "SWAP2"
    },
    "2252": {
      "op": "POP"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "op": "SWAP3"
    },
    "2255": {
      "op": "POP"
    },
    "2256": {
      "op": "SWAP3"
    },
    "2257": {
      "op": "POP"
    },
    "2258": {
      "op": "SWAP3"
    },
    "2259": {
      "jump": "o",
      "op": "JUMP"
    },
    "2260": {
      "op": "JUMPDEST"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2265": {
      "op": "DUP3"
    },
    "2266": {
      "op": "DUP5"
    },
    "2267": {
      "op": "SUB"
    },
    "2268": {
      "op": "SLT"
    },
    "2269": {
      "op": "ISZERO"
    },
    "2270": {
      "op": "PUSH2",
      "value": "0x8E6"
    },
    "2273": {
      "op": "JUMPI"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2276": {
      "op": "DUP1"
    },
    "2277": {
      "op": "REVERT"
    },
    "2278": {
      "op": "JUMPDEST"
    },
    "2279": {
      "op": "POP"
    },
    "2280": {
      "op": "CALLDATALOAD"
    },
    "2281": {
      "op": "SWAP2"
    },
    "2282": {
      "op": "SWAP1"
    },
    "2283": {
      "op": "POP"
    },
    "2284": {
      "jump": "o",
      "op": "JUMP"
    },
    "2285": {
      "op": "JUMPDEST"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2290": {
      "op": "DUP3"
    },
    "2291": {
      "op": "DUP5"
    },
    "2292": {
      "op": "SUB"
    },
    "2293": {
      "op": "SLT"
    },
    "2294": {
      "op": "ISZERO"
    },
    "2295": {
      "op": "PUSH2",
      "value": "0x8FF"
    },
    "2298": {
      "op": "JUMPI"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2301": {
      "op": "DUP1"
    },
    "2302": {
      "op": "REVERT"
    },
    "2303": {
      "op": "JUMPDEST"
    },
    "2304": {
      "op": "PUSH2",
      "value": "0x908"
    },
    "2307": {
      "op": "DUP3"
    },
    "2308": {
      "op": "PUSH2",
      "value": "0x70F"
    },
    "2311": {
      "jump": "i",
      "op": "JUMP"
    },
    "2312": {
      "op": "JUMPDEST"
    },
    "2313": {
      "op": "SWAP4"
    },
    "2314": {
      "op": "SWAP3"
    },
    "2315": {
      "op": "POP"
    },
    "2316": {
      "op": "POP"
    },
    "2317": {
      "op": "POP"
    },
    "2318": {
      "jump": "o",
      "op": "JUMP"
    },
    "2319": {
      "op": "JUMPDEST"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2324": {
      "op": "DUP3"
    },
    "2325": {
      "op": "DUP5"
    },
    "2326": {
      "op": "SUB"
    },
    "2327": {
      "op": "SLT"
    },
    "2328": {
      "op": "ISZERO"
    },
    "2329": {
      "op": "PUSH2",
      "value": "0x921"
    },
    "2332": {
      "op": "JUMPI"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2335": {
      "op": "DUP1"
    },
    "2336": {
      "op": "REVERT"
    },
    "2337": {
      "op": "JUMPDEST"
    },
    "2338": {
      "op": "DUP2"
    },
    "2339": {
      "op": "CALLDATALOAD"
    },
    "2340": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2349": {
      "op": "DUP2"
    },
    "2350": {
      "op": "GT"
    },
    "2351": {
      "op": "ISZERO"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x938"
    },
    "2355": {
      "op": "JUMPI"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2358": {
      "op": "DUP1"
    },
    "2359": {
      "op": "REVERT"
    },
    "2360": {
      "op": "JUMPDEST"
    },
    "2361": {
      "op": "PUSH2",
      "value": "0x944"
    },
    "2364": {
      "op": "DUP5"
    },
    "2365": {
      "op": "DUP3"
    },
    "2366": {
      "op": "DUP6"
    },
    "2367": {
      "op": "ADD"
    },
    "2368": {
      "op": "PUSH2",
      "value": "0x7CE"
    },
    "2371": {
      "jump": "i",
      "op": "JUMP"
    },
    "2372": {
      "op": "JUMPDEST"
    },
    "2373": {
      "op": "SWAP5"
    },
    "2374": {
      "op": "SWAP4"
    },
    "2375": {
      "op": "POP"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "op": "POP"
    },
    "2378": {
      "op": "POP"
    },
    "2379": {
      "jump": "o",
      "op": "JUMP"
    },
    "2380": {
      "op": "JUMPDEST"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2385": {
      "op": "DUP3"
    },
    "2386": {
      "op": "DUP5"
    },
    "2387": {
      "op": "SUB"
    },
    "2388": {
      "op": "SLT"
    },
    "2389": {
      "op": "ISZERO"
    },
    "2390": {
      "op": "PUSH2",
      "value": "0x95E"
    },
    "2393": {
      "op": "JUMPI"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2396": {
      "op": "DUP1"
    },
    "2397": {
      "op": "REVERT"
    },
    "2398": {
      "op": "JUMPDEST"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2401": {
      "op": "MLOAD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2404": {
      "op": "DUP2"
    },
    "2405": {
      "op": "ADD"
    },
    "2406": {
      "op": "DUP2"
    },
    "2407": {
      "op": "DUP2"
    },
    "2408": {
      "op": "LT"
    },
    "2409": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2418": {
      "op": "DUP3"
    },
    "2419": {
      "op": "GT"
    },
    "2420": {
      "op": "OR"
    },
    "2421": {
      "op": "ISZERO"
    },
    "2422": {
      "op": "PUSH2",
      "value": "0x981"
    },
    "2425": {
      "op": "JUMPI"
    },
    "2426": {
      "op": "PUSH2",
      "value": "0x981"
    },
    "2429": {
      "op": "PUSH2",
      "value": "0x72B"
    },
    "2432": {
      "jump": "i",
      "op": "JUMP"
    },
    "2433": {
      "op": "JUMPDEST"
    },
    "2434": {
      "op": "DUP1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2437": {
      "op": "MSTORE"
    },
    "2438": {
      "op": "POP"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "CALLDATALOAD"
    },
    "2441": {
      "op": "DUP2"
    },
    "2442": {
      "op": "MSTORE"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2445": {
      "op": "DUP4"
    },
    "2446": {
      "op": "ADD"
    },
    "2447": {
      "op": "CALLDATALOAD"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2450": {
      "op": "DUP3"
    },
    "2451": {
      "op": "ADD"
    },
    "2452": {
      "op": "MSTORE"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2455": {
      "op": "DUP4"
    },
    "2456": {
      "op": "ADD"
    },
    "2457": {
      "op": "CALLDATALOAD"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2460": {
      "op": "DUP3"
    },
    "2461": {
      "op": "ADD"
    },
    "2462": {
      "op": "MSTORE"
    },
    "2463": {
      "op": "DUP1"
    },
    "2464": {
      "op": "SWAP2"
    },
    "2465": {
      "op": "POP"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "op": "SWAP3"
    },
    "2468": {
      "op": "SWAP2"
    },
    "2469": {
      "op": "POP"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "jump": "o",
      "op": "JUMP"
    },
    "2472": {
      "op": "JUMPDEST"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2475": {
      "op": "DUP3"
    },
    "2476": {
      "op": "MLOAD"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2479": {
      "op": "JUMPDEST"
    },
    "2480": {
      "op": "DUP2"
    },
    "2481": {
      "op": "DUP2"
    },
    "2482": {
      "op": "LT"
    },
    "2483": {
      "op": "ISZERO"
    },
    "2484": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "2487": {
      "op": "JUMPI"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2490": {
      "op": "DUP2"
    },
    "2491": {
      "op": "DUP7"
    },
    "2492": {
      "op": "ADD"
    },
    "2493": {
      "op": "DUP2"
    },
    "2494": {
      "op": "ADD"
    },
    "2495": {
      "op": "MLOAD"
    },
    "2496": {
      "op": "DUP6"
    },
    "2497": {
      "op": "DUP4"
    },
    "2498": {
      "op": "ADD"
    },
    "2499": {
      "op": "MSTORE"
    },
    "2500": {
      "op": "ADD"
    },
    "2501": {
      "op": "PUSH2",
      "value": "0x9AF"
    },
    "2504": {
      "op": "JUMP"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2509": {
      "op": "SWAP3"
    },
    "2510": {
      "op": "ADD"
    },
    "2511": {
      "op": "SWAP2"
    },
    "2512": {
      "op": "DUP3"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "POP"
    },
    "2515": {
      "op": "SWAP2"
    },
    "2516": {
      "op": "SWAP1"
    },
    "2517": {
      "op": "POP"
    },
    "2518": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6658176469c98b612508fabf601c8bf8ce1afe4d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// import \"./sbt-achievements.sol\";\n\ncontract SBT {\n    modifier soulExists(uint _soul_id) {\n        require(addressOfSoul[_soul_id] != address(0), \"Already has a soul\");\n        _;\n    }\n\n    modifier soulDoesntExist(uint _soul_id) {\n        require(addressOfSoul[_soul_id] == address(0), \"Already has a soul\");\n        _;\n    }\n\n    struct PersonalDataHashed {\n        bytes32 url_hash;\n        bytes32 github_url_hash;\n        bytes32 email_address_hash;\n    }\n\n    struct PersonalData {\n        string url;\n        string github_url;\n        string email_address;\n    }\n\n    struct Soul {\n        // uint soul_id;\n        PersonalDataHashed hashedData;\n    }\n\n    address public operator;\n    event Mint(address _soul);\n    event Burn(uint _soul_id_to_burn);\n    event Update(uint _soul_id_to_update);\n\n    constructor() {\n        operator = msg.sender;\n    }\n\n    mapping(uint => address) addressOfSoul; //soul_id => address of owner\n    mapping(address => uint) soulIdOfAddress; //address => soul_id\n    mapping(uint => Soul) souls;\n\n    // Function that hashes content of user's hashedData. Must be rewritten if PersonalData fields change.\n    function hashPersonalData(PersonalData memory _data) internal pure returns(PersonalDataHashed memory) {\n        PersonalDataHashed memory hashedData;\n        hashedData.email_address_hash = keccak256(abi.encodePacked(_data.email_address));\n        hashedData.github_url_hash = keccak256(abi.encodePacked(_data.github_url));\n        hashedData.url_hash = keccak256(abi.encodePacked(_data.url));\n        return hashedData;\n    }\n\n    // Mints the SBT for given address and with given soul_id. Can be called only by this contract.\n    function mint(\n        address _soul_address,\n        uint _soul_id,\n        PersonalData memory _soulData\n    ) external soulDoesntExist(_soul_id) {\n        require(msg.sender == operator, \"Only operator can mint new souls\");\n        addressOfSoul[_soul_id] = _soul_address;\n        soulIdOfAddress[_soul_address] = _soul_id;\n        // souls[_soul_id].soul_id = _soul_id;\n        souls[_soul_id].hashedData = hashPersonalData(_soulData);\n        emit Mint(_soul_address);\n    }\n\n    // Deletes SBT of msg.sender from storage.\n    function burn(uint _soul_id_to_burn) external {\n        delete souls[_soul_id_to_burn];\n        delete soulIdOfAddress[addressOfSoul[_soul_id_to_burn]];\n        delete addressOfSoul[_soul_id_to_burn];\n        emit Burn(_soul_id_to_burn);\n    }\n\n    // Updates hashedData of msg.sender's SBT by replacing with '_newSoulData'.\n    function update(PersonalDataHashed memory _newSoulData)\n        external\n        soulExists(soulIdOfAddress[msg.sender])\n    {\n        souls[soulIdOfAddress[msg.sender]].hashedData = _newSoulData;\n        emit Update(soulIdOfAddress[msg.sender]);\n    }\n\n    // Returns true, if there is an SBT for given address.\n    function hasSoul(address _soul) external view returns (bool) {\n        return soulIdOfAddress[_soul] != 0;\n    }\n\n    // Returns SBT of given address, if there is one; otherwise throws an error.\n    function getSoul(address _soul) external view returns (Soul memory) {\n        require(soulIdOfAddress[_soul] != 0, \"Soul doesn't exist\");\n        return souls[soulIdOfAddress[_soul]];\n    }\n\n    // Returns owner of given '_soul_id', if there is one; otherwise returns NULL-address.\n    function getOwner(uint _soul_id) external view returns (address) {\n        require(\n            msg.sender == operator,\n            \"Only this contract can view this hashed data\"\n        );\n        return addressOfSoul[_soul_id];\n    }\n\n    // Allows user to verify, that their data stored in our app is it's own and doesn't change.\n    function verifyDataCorrectness(PersonalData memory _dataToVerify) external view returns (bool) {\n        PersonalDataHashed memory hashedDataFromStorage = souls[soulIdOfAddress[msg.sender]].hashedData;\n        PersonalDataHashed memory hashedDataToVerify = hashPersonalData(_dataToVerify);\n        if (hashedDataToVerify.email_address_hash != hashedDataFromStorage.email_address_hash) {\n            return false;\n        }\n        if (hashedDataToVerify.github_url_hash != hashedDataFromStorage.github_url_hash) {\n            return false;\n        }\n        if (hashedDataToVerify.url_hash != hashedDataFromStorage.url_hash) {\n            return false;\n        }\n        return true;\n    } \n}\n",
  "sourceMap": "95:4338:0:-:0;;;869:52;;;;;;;;;-1:-1:-1;893:8:0;:21;;-1:-1:-1;;;;;;893:21:0;904:10;893:21;;;95:4338;;;;;;",
  "sourcePath": "contracts/sbt.sol",
  "type": "contract"
}